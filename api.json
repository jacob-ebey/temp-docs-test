{
	"id": 0,
	"name": "React Router API Reference",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "react-router",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2,
					"name": "createRoutesFromElements",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/index.ts",
							"line": 107,
							"character": 30,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/index.ts#L107"
						}
					],
					"target": 2447
				},
				{
					"id": 3,
					"name": "NavigationType",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Actions represent the type of change to a location value."
							}
						]
					},
					"children": [
						{
							"id": 4,
							"name": "Pop",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A POP indicates a change to an arbitrary index in the history stack, such\nas a back or forward navigation. It does not describe the direction of the\nnavigation, only that the current index changed.\n\nNote: This is the default action for newly created history objects."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L16"
								}
							],
							"type": {
								"type": "literal",
								"value": "POP"
							}
						},
						{
							"id": 5,
							"name": "Push",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A PUSH indicates a new entry being added to the history stack, such as when\na link is clicked and a new page loads. When this happens, all subsequent\nentries in the stack are lost."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L23"
								}
							],
							"type": {
								"type": "literal",
								"value": "PUSH"
							}
						},
						{
							"id": 6,
							"name": "Replace",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A REPLACE indicates the entry at the current index in the history stack\nbeing replaced by a new one."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L29"
								}
							],
							"type": {
								"type": "literal",
								"value": "REPLACE"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								4,
								5,
								6
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/history.ts",
							"line": 8,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L8"
						}
					]
				},
				{
					"id": 7,
					"name": "UNSAFE_ServerMode",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The mode to use when running the server."
							}
						]
					},
					"children": [
						{
							"id": 8,
							"name": "Development",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/mode.ts",
									"line": 5,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/mode.ts#L5"
								}
							],
							"type": {
								"type": "literal",
								"value": "development"
							}
						},
						{
							"id": 9,
							"name": "Production",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/mode.ts",
									"line": 6,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/mode.ts#L6"
								}
							],
							"type": {
								"type": "literal",
								"value": "production"
							}
						},
						{
							"id": 10,
							"name": "Test",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/mode.ts",
									"line": 7,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/mode.ts#L7"
								}
							],
							"type": {
								"type": "literal",
								"value": "test"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								8,
								9,
								10
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/mode.ts",
							"line": 4,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/mode.ts#L4"
						}
					]
				},
				{
					"id": 11,
					"name": "MaxPartSizeExceededError",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 12,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
									"line": 2,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/upload/errors.ts#L2"
								}
							],
							"signatures": [
								{
									"id": 13,
									"name": "new MaxPartSizeExceededError",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
											"line": 2,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/upload/errors.ts#L2"
										}
									],
									"parameters": [
										{
											"id": 14,
											"name": "field",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 15,
											"name": "maxBytes",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 11,
										"name": "MaxPartSizeExceededError",
										"package": "react-router"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						},
						{
							"id": 16,
							"name": "field",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
									"line": 2,
									"character": 21,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/upload/errors.ts#L2"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 17,
							"name": "maxBytes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
									"line": 2,
									"character": 43,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/upload/errors.ts#L2"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 18,
							"name": "message",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1077,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Error.message"
							}
						},
						{
							"id": 19,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1076,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Error.name"
							}
						},
						{
							"id": 20,
							"name": "stack",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 1078,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Error.stack"
							}
						},
						{
							"id": 21,
							"name": "prepareStackTrace",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional override for formatting stack traces"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
									"line": 27,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
											"line": 27,
											"character": 29
										}
									],
									"signatures": [
										{
											"id": 23,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
													"line": 27,
													"character": 29
												}
											],
											"parameters": [
												{
													"id": 24,
													"name": "err",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													}
												},
												{
													"id": 25,
													"name": "stackTraces",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
																"qualifiedName": "__global.NodeJS.CallSite"
															},
															"name": "CallSite",
															"package": "@types/node",
															"qualifiedName": "__global.NodeJS.CallSite"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Error.prepareStackTrace"
							}
						},
						{
							"id": 26,
							"name": "stackTraceLimit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
									"line": 29,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Error.stackTraceLimit"
							}
						},
						{
							"id": 27,
							"name": "captureStackTrace",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
									"line": 20,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 28,
									"name": "captureStackTrace",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Create .stack property on a target object"
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
											"line": 20,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 29,
											"name": "targetObject",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 30,
											"name": "constructorOpt",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Function"
												},
												"name": "Function",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "Error.captureStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Error.captureStackTrace"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								12
							]
						},
						{
							"title": "Properties",
							"children": [
								16,
								17,
								18,
								19,
								20,
								21,
								26
							]
						},
						{
							"title": "Methods",
							"children": [
								27
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
							"line": 1,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/upload/errors.ts#L1"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Error"
							},
							"name": "Error",
							"package": "typescript"
						}
					]
				},
				{
					"id": 31,
					"name": "UNSAFE_ErrorResponseImpl",
					"variant": "declaration",
					"kind": 128,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n\nWe don't export the class for public use since it's an implementation\ndetail, but we export the interface above so folks can build their own\nabstractions around instances via isRouteErrorResponse()"
							}
						]
					},
					"children": [
						{
							"id": 32,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1399,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1399"
								}
							],
							"signatures": [
								{
									"id": 33,
									"name": "new UNSAFE_ErrorResponseImpl",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/utils.ts",
											"line": 1399,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1399"
										}
									],
									"parameters": [
										{
											"id": 34,
											"name": "status",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 35,
											"name": "statusText",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 36,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 37,
											"name": "internal",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "reference",
										"target": 31,
										"name": "ErrorResponseImpl",
										"package": "react-router"
									}
								}
							]
						},
						{
							"id": 38,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1395,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1395"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "ErrorResponse.data"
							}
						},
						{
							"id": 39,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1396,
									"character": 10,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1396"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							}
						},
						{
							"id": 40,
							"name": "internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1397,
									"character": 10,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1397"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 41,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1393,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1393"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "ErrorResponse.status"
							}
						},
						{
							"id": 42,
							"name": "statusText",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1394,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1394"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "ErrorResponse.statusText"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								32
							]
						},
						{
							"title": "Properties",
							"children": [
								38,
								39,
								40,
								41,
								42
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 1392,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1392"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"target": 2045,
							"name": "ErrorResponse",
							"package": "react-router"
						}
					]
				},
				{
					"id": 43,
					"name": "UNSAFE_RemixErrorBoundary",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 44,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
									"line": 22,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L22"
								}
							],
							"signatures": [
								{
									"id": 45,
									"name": "new UNSAFE_RemixErrorBoundary",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
											"line": 22,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L22"
										}
									],
									"parameters": [
										{
											"id": 46,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
													"qualifiedName": "RemixErrorBoundaryProps"
												},
												"name": "RemixErrorBoundaryProps",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 43,
										"name": "RemixErrorBoundary",
										"package": "react-router"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "React.Component<\n  RemixErrorBoundaryProps,\n  RemixErrorBoundaryState\n>.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "React.Component<\n  RemixErrorBoundaryProps,\n  RemixErrorBoundaryState\n>.constructor"
							}
						},
						{
							"id": 47,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If using the new style context, re-declare this in your class to be the\n"
									},
									{
										"kind": "code",
										"text": "`React.ContextType`"
									},
									{
										"kind": "text",
										"text": " of your "
									},
									{
										"kind": "code",
										"text": "`static contextType`"
									},
									{
										"kind": "text",
										"text": ".\nShould be used with type annotation or static contextType.\n\n"
									},
									{
										"kind": "code",
										"text": "```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://react.dev/reference/react/Component#context"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 512,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.context"
							}
						},
						{
							"id": 48,
							"name": "props",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 532,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Readonly"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
											"qualifiedName": "RemixErrorBoundaryProps"
										},
										"name": "RemixErrorBoundaryProps",
										"package": "react-router"
									}
								],
								"name": "Readonly",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.props"
							}
						},
						{
							"id": 49,
							"name": "refs",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "https://legacy.reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 538,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 50,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 538,
											"character": 14
										}
									],
									"indexSignature": {
										"id": 51,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {
											"isExternal": true
										},
										"sources": [
											{
												"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
												"line": 539,
												"character": 12
											}
										],
										"parameters": [
											{
												"id": 52,
												"name": "key",
												"variant": "param",
												"kind": 32768,
												"flags": {
													"isExternal": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"target": {
												"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
												"qualifiedName": "React.ReactInstance"
											},
											"name": "ReactInstance",
											"package": "@types/react",
											"qualifiedName": "React.ReactInstance"
										}
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.refs"
							}
						},
						{
							"id": 53,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 533,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Readonly"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
											"qualifiedName": "RemixErrorBoundaryState"
										},
										"name": "RemixErrorBoundaryState",
										"package": "react-router"
									}
								],
								"name": "Readonly",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.state"
							}
						},
						{
							"id": 54,
							"name": "contextType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If set, "
									},
									{
										"kind": "code",
										"text": "`this.context`"
									},
									{
										"kind": "text",
										"text": " will be set at runtime to the current value of the given Context.\n\nUsage:\n\n"
									},
									{
										"kind": "code",
										"text": "```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://react.dev/reference/react/Component#static-contexttype"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 495,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.Context"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Context",
								"package": "@types/react",
								"qualifiedName": "React.Context"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.contextType"
							}
						},
						{
							"id": 55,
							"name": "UNSAFE_componentWillMount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 729,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 56,
									"name": "UNSAFE_componentWillMount",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Called immediately before mounting occurs, and before "
											},
											{
												"kind": "code",
												"text": "`Component#render`"
											},
											{
												"kind": "text",
												"text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "16.3, use componentDidMount or the constructor instead"
													}
												]
											},
											{
												"tag": "@see",
												"content": [
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
													},
													{
														"kind": "text",
														"text": "\n"
													},
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
													},
													{
														"kind": "text",
														"text": "\n"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 729,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.UNSAFE_componentWillMount"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.UNSAFE_componentWillMount"
							}
						},
						{
							"id": 57,
							"name": "UNSAFE_componentWillReceiveProps",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 761,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 58,
									"name": "UNSAFE_componentWillReceiveProps",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
											},
											{
												"kind": "code",
												"text": "`Component#setState`"
											},
											{
												"kind": "text",
												"text": " generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "16.3, use static getDerivedStateFromProps instead"
													}
												]
											},
											{
												"tag": "@see",
												"content": [
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
													},
													{
														"kind": "text",
														"text": "\n"
													},
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
													},
													{
														"kind": "text",
														"text": "\n"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 761,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 59,
											"name": "nextProps",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryProps"
														},
														"name": "RemixErrorBoundaryProps",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										},
										{
											"id": 60,
											"name": "nextContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.UNSAFE_componentWillReceiveProps"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.UNSAFE_componentWillReceiveProps"
							}
						},
						{
							"id": 61,
							"name": "UNSAFE_componentWillUpdate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 789,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 62,
									"name": "UNSAFE_componentWillUpdate",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
											},
											{
												"kind": "code",
												"text": "`Component#setState`"
											},
											{
												"kind": "text",
												"text": " here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "16.3, use getSnapshotBeforeUpdate instead"
													}
												]
											},
											{
												"tag": "@see",
												"content": [
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
													},
													{
														"kind": "text",
														"text": "\n"
													},
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
													},
													{
														"kind": "text",
														"text": "\n"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 789,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 63,
											"name": "nextProps",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryProps"
														},
														"name": "RemixErrorBoundaryProps",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										},
										{
											"id": 64,
											"name": "nextState",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryState"
														},
														"name": "RemixErrorBoundaryState",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										},
										{
											"id": 65,
											"name": "nextContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.UNSAFE_componentWillUpdate"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.UNSAFE_componentWillUpdate"
							}
						},
						{
							"id": 66,
							"name": "componentDidCatch",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 658,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 67,
									"name": "componentDidCatch",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 658,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 68,
											"name": "error",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Error"
												},
												"name": "Error",
												"package": "typescript"
											}
										},
										{
											"id": 69,
											"name": "errorInfo",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ErrorInfo"
												},
												"name": "ErrorInfo",
												"package": "@types/react",
												"qualifiedName": "React.ErrorInfo"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.componentDidCatch"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.componentDidCatch"
							}
						},
						{
							"id": 70,
							"name": "componentDidMount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 637,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 71,
									"name": "componentDidMount",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 637,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.componentDidMount"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.componentDidMount"
							}
						},
						{
							"id": 72,
							"name": "componentDidUpdate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 700,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 73,
									"name": "componentDidUpdate",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Called immediately after updating occurs. Not called for the initial render.\n\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null."
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 700,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 74,
											"name": "prevProps",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryProps"
														},
														"name": "RemixErrorBoundaryProps",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										},
										{
											"id": 75,
											"name": "prevState",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryState"
														},
														"name": "RemixErrorBoundaryState",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										},
										{
											"id": 76,
											"name": "snapshot",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.componentDidUpdate"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.componentDidUpdate"
							}
						},
						{
							"id": 77,
							"name": "componentWillMount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 715,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 78,
									"name": "componentWillMount",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Called immediately before mounting occurs, and before "
											},
											{
												"kind": "code",
												"text": "`Component#render`"
											},
											{
												"kind": "text",
												"text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
													}
												]
											},
											{
												"tag": "@see",
												"content": [
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
													},
													{
														"kind": "text",
														"text": "\n"
													},
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
													},
													{
														"kind": "text",
														"text": "\n"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 715,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.componentWillMount"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.componentWillMount"
							}
						},
						{
							"id": 79,
							"name": "componentWillReceiveProps",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 744,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 80,
									"name": "componentWillReceiveProps",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
											},
											{
												"kind": "code",
												"text": "`Component#setState`"
											},
											{
												"kind": "text",
												"text": " generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
													}
												]
											},
											{
												"tag": "@see",
												"content": [
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
													},
													{
														"kind": "text",
														"text": "\n"
													},
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
													},
													{
														"kind": "text",
														"text": "\n"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 744,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 81,
											"name": "nextProps",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryProps"
														},
														"name": "RemixErrorBoundaryProps",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										},
										{
											"id": 82,
											"name": "nextContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.componentWillReceiveProps"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.componentWillReceiveProps"
							}
						},
						{
							"id": 83,
							"name": "componentWillUnmount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 653,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 84,
									"name": "componentWillUnmount",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in "
											},
											{
												"kind": "code",
												"text": "`componentDidMount`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 653,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.componentWillUnmount"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.componentWillUnmount"
							}
						},
						{
							"id": 85,
							"name": "componentWillUpdate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 774,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 86,
									"name": "componentWillUpdate",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
											},
											{
												"kind": "code",
												"text": "`Component#setState`"
											},
											{
												"kind": "text",
												"text": " here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
													}
												]
											},
											{
												"tag": "@see",
												"content": [
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
													},
													{
														"kind": "text",
														"text": "\n"
													},
													{
														"kind": "text",
														"text": " - "
													},
													{
														"kind": "text",
														"text": "https://legacy.reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
													},
													{
														"kind": "text",
														"text": "\n"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 774,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 87,
											"name": "nextProps",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryProps"
														},
														"name": "RemixErrorBoundaryProps",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										},
										{
											"id": 88,
											"name": "nextState",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryState"
														},
														"name": "RemixErrorBoundaryState",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										},
										{
											"id": 89,
											"name": "nextContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.componentWillUpdate"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.componentWillUpdate"
							}
						},
						{
							"id": 90,
							"name": "forceUpdate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 529,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 91,
									"name": "forceUpdate",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 529,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 92,
											"name": "callback",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 93,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
															"line": 529,
															"character": 31
														}
													],
													"signatures": [
														{
															"id": 94,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
																	"line": 529,
																	"character": 31
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.forceUpdate"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.forceUpdate"
							}
						},
						{
							"id": 95,
							"name": "getSnapshotBeforeUpdate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 694,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 96,
									"name": "getSnapshotBeforeUpdate",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Runs before React applies the result of "
											},
											{
												"kind": "code",
												"text": "`render`"
											},
											{
												"kind": "text",
												"text": " to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before "
											},
											{
												"kind": "code",
												"text": "`render`"
											},
											{
												"kind": "text",
												"text": " causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running."
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 694,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 97,
											"name": "prevProps",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryProps"
														},
														"name": "RemixErrorBoundaryProps",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										},
										{
											"id": 98,
											"name": "prevState",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryState"
														},
														"name": "RemixErrorBoundaryState",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.getSnapshotBeforeUpdate"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.getSnapshotBeforeUpdate"
							}
						},
						{
							"id": 99,
							"name": "render",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
									"line": 55,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L55"
								}
							],
							"signatures": [
								{
									"id": 100,
									"name": "render",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
											"line": 55,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L55"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2015.iterable.d.ts",
													"qualifiedName": "Iterable"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactNode"
														},
														"name": "ReactNode",
														"package": "@types/react",
														"qualifiedName": "React.ReactNode"
													}
												],
												"name": "Iterable",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.JSX.Element"
												},
												"name": "Element",
												"package": "@types/react",
												"qualifiedName": "React.JSX.Element"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.render"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.render"
							}
						},
						{
							"id": 101,
							"name": "setState",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 524,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 102,
									"name": "setState",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 524,
											"character": 8
										}
									],
									"typeParameter": [
										{
											"id": 103,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"target": {
														"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
														"qualifiedName": "RemixErrorBoundaryState"
													},
													"name": "RemixErrorBoundaryState",
													"package": "react-router"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 104,
											"name": "state",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryState"
														},
														"name": "RemixErrorBoundaryState",
														"package": "react-router"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 105,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
																	"line": 525,
																	"character": 20
																}
															],
															"signatures": [
																{
																	"id": 106,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {
																		"isExternal": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
																			"line": 525,
																			"character": 20
																		}
																	],
																	"parameters": [
																		{
																			"id": 107,
																			"name": "prevState",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Readonly"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
																							"qualifiedName": "RemixErrorBoundaryState"
																						},
																						"name": "RemixErrorBoundaryState",
																						"package": "react-router"
																					}
																				],
																				"name": "Readonly",
																				"package": "typescript"
																			}
																		},
																		{
																			"id": 108,
																			"name": "props",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {
																				"isExternal": true
																			},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Readonly"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
																							"qualifiedName": "RemixErrorBoundaryProps"
																						},
																						"name": "RemixErrorBoundaryProps",
																						"package": "react-router"
																					}
																				],
																				"name": "Readonly",
																				"package": "typescript"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
																					"qualifiedName": "RemixErrorBoundaryState"
																				},
																				"name": "RemixErrorBoundaryState",
																				"package": "react-router"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Pick"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
																							"qualifiedName": "RemixErrorBoundaryState"
																						},
																						"name": "RemixErrorBoundaryState",
																						"package": "react-router"
																					},
																					{
																						"type": "reference",
																						"target": 103,
																						"name": "K",
																						"package": "@types/react",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "Pick",
																				"package": "typescript"
																			}
																		]
																	}
																}
															]
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Pick"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
																	"qualifiedName": "RemixErrorBoundaryState"
																},
																"name": "RemixErrorBoundaryState",
																"package": "react-router"
															},
															{
																"type": "reference",
																"target": 103,
																"name": "K",
																"package": "@types/react",
																"refersToTypeParameter": true
															}
														],
														"name": "Pick",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 109,
											"name": "callback",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 110,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
															"line": 526,
															"character": 23
														}
													],
													"signatures": [
														{
															"id": 111,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
																	"line": 526,
																	"character": 23
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.setState"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.setState"
							}
						},
						{
							"id": 112,
							"name": "shouldComponentUpdate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 648,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 113,
									"name": "shouldComponentUpdate",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Called to determine whether the change in props and state should trigger a re-render.\n\n"
											},
											{
												"kind": "code",
												"text": "`Component`"
											},
											{
												"kind": "text",
												"text": " always returns true.\n"
											},
											{
												"kind": "code",
												"text": "`PureComponent`"
											},
											{
												"kind": "text",
												"text": " implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, "
											},
											{
												"kind": "code",
												"text": "`Component#render`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`componentWillUpdate`"
											},
											{
												"kind": "text",
												"text": "\nand "
											},
											{
												"kind": "code",
												"text": "`componentDidUpdate`"
											},
											{
												"kind": "text",
												"text": " will not be called."
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 648,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 114,
											"name": "nextProps",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryProps"
														},
														"name": "RemixErrorBoundaryProps",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										},
										{
											"id": 115,
											"name": "nextState",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Readonly"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"qualifiedName": "RemixErrorBoundaryState"
														},
														"name": "RemixErrorBoundaryState",
														"package": "react-router"
													}
												],
												"name": "Readonly",
												"package": "typescript"
											}
										},
										{
											"id": 116,
											"name": "nextContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "React.Component.shouldComponentUpdate"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "React.Component.shouldComponentUpdate"
							}
						},
						{
							"id": 117,
							"name": "getDerivedStateFromError",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
									"line": 27,
									"character": 9,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L27"
								}
							],
							"signatures": [
								{
									"id": 118,
									"name": "getDerivedStateFromError",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
											"line": 27,
											"character": 9,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L27"
										}
									],
									"parameters": [
										{
											"id": 119,
											"name": "error",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Error"
												},
												"name": "Error",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 120,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 121,
													"name": "error",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"line": 28,
															"character": 13,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L28"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														121
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
													"line": 28,
													"character": 11,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L28"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 122,
							"name": "getDerivedStateFromProps",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
									"line": 31,
									"character": 9,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L31"
								}
							],
							"signatures": [
								{
									"id": 123,
									"name": "getDerivedStateFromProps",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
											"line": 31,
											"character": 9,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L31"
										}
									],
									"parameters": [
										{
											"id": 124,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
													"qualifiedName": "RemixErrorBoundaryProps"
												},
												"name": "RemixErrorBoundaryProps",
												"package": "react-router"
											}
										},
										{
											"id": 125,
											"name": "state",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
													"qualifiedName": "RemixErrorBoundaryState"
												},
												"name": "RemixErrorBoundaryState",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 126,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 127,
													"name": "error",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"line": 45,
															"character": 15,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L45"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															}
														]
													},
													"defaultValue": "..."
												},
												{
													"id": 128,
													"name": "location",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
															"line": 45,
															"character": 43,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L45"
														}
													],
													"type": {
														"type": "reference",
														"target": 1175,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Location",
														"package": "react-router"
													},
													"defaultValue": "props.location"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														127,
														128
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
													"line": 45,
													"character": 13,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L45"
												}
											]
										}
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								44
							]
						},
						{
							"title": "Properties",
							"children": [
								47,
								48,
								49,
								53,
								54
							]
						},
						{
							"title": "Methods",
							"children": [
								55,
								57,
								61,
								66,
								70,
								72,
								77,
								79,
								83,
								85,
								90,
								95,
								99,
								101,
								112,
								117,
								122
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
							"line": 18,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/errorBoundaries.tsx#L18"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
								"qualifiedName": "React.Component"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
										"qualifiedName": "RemixErrorBoundaryProps"
									},
									"name": "RemixErrorBoundaryProps",
									"package": "react-router"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
										"qualifiedName": "RemixErrorBoundaryState"
									},
									"name": "RemixErrorBoundaryState",
									"package": "react-router"
								}
							],
							"name": "Component",
							"package": "@types/react",
							"qualifiedName": "React.Component"
						}
					]
				},
				{
					"id": 129,
					"name": "ActionFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Route action function signature"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 170,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L170"
						}
					],
					"typeParameters": [
						{
							"id": 130,
							"name": "Context",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"signatures": [
						{
							"id": 131,
							"name": "ActionFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 171,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L171"
								}
							],
							"parameters": [
								{
									"id": 132,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 134,
										"typeArguments": [
											{
												"type": "reference",
												"target": 130,
												"name": "Context",
												"package": "react-router",
												"qualifiedName": "ActionFunction.Context",
												"refersToTypeParameter": true
											}
										],
										"name": "ActionFunctionArgs",
										"package": "react-router"
									}
								},
								{
									"id": 133,
									"name": "handlerCtx",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "DataFunctionReturnValue"
								},
								"name": "DataFunctionReturnValue",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 134,
					"name": "ActionFunctionArgs",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Arguments passed to action functions"
							}
						]
					},
					"children": [
						{
							"id": 135,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 129,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L129"
								}
							],
							"type": {
								"type": "reference",
								"target": 138,
								"name": "Context",
								"package": "react-router",
								"qualifiedName": "ActionFunctionArgs.Context",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DataFunctionArgs.context"
							}
						},
						{
							"id": 136,
							"name": "params",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 128,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L128"
								}
							],
							"type": {
								"type": "reference",
								"target": 2183,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Params",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DataFunctionArgs.params"
							}
						},
						{
							"id": 137,
							"name": "request",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L127"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Request"
								},
								"name": "Request",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DataFunctionArgs.request"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								135,
								136,
								137
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 145,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L145"
						}
					],
					"typeParameters": [
						{
							"id": 138,
							"name": "Context",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/router/utils.ts",
								"qualifiedName": "DataFunctionArgs"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 138,
									"name": "Context",
									"package": "react-router",
									"qualifiedName": "ActionFunctionArgs.Context",
									"refersToTypeParameter": true
								}
							],
							"name": "DataFunctionArgs",
							"package": "react-router"
						}
					]
				},
				{
					"id": 139,
					"name": "AppLoadContext",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object of unknown type for route loaders and actions provided by the\nserver's "
							},
							{
								"kind": "code",
								"text": "`getLoadContext()`"
							},
							{
								"kind": "text",
								"text": " function.  This is defined as an empty interface\nspecifically so apps can leverage declaration merging to augment this type\nglobally: https://www.typescriptlang.org/docs/handbook/declaration-merging.html"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/data.ts",
							"line": 15,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/data.ts#L15"
						}
					],
					"indexSignature": {
						"id": 140,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"sources": [
							{
								"fileName": "packages/react-router/lib/server-runtime/data.ts",
								"line": 16,
								"character": 2,
								"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/data.ts#L16"
							}
						],
						"parameters": [
							{
								"id": 141,
								"name": "key",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				},
				{
					"id": 142,
					"name": "AwaitProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 143,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When using a function, the resolved value is provided as the parameter.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx [2]\n<Await resolve={reviewsPromise}>\n  {(resolvedReviews) => <Reviews items={resolvedReviews} />}\n</Await>\n```"
									},
									{
										"kind": "text",
										"text": "\n\nWhen using React elements, "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useAsyncValue",
										"target": 2574,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " will provide the\nresolved value:\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx [2]\n<Await resolve={reviewsPromise}>\n  <Reviews />\n</Await>\n\nfunction Reviews() {\n  const resolvedReviews = useAsyncValue()\n  return <div>...</div>\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 858,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L858"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/components.tsx",
											"qualifiedName": "AwaitResolveRenderFunction"
										},
										"name": "AwaitResolveRenderFunction",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 144,
							"name": "errorElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The error element renders instead of the children when the promise rejects.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Await\n  errorElement={<div>Oops</div>}\n  resolve={reviewsPromise}\n>\n  <Reviews />\n</Await>\n```"
									},
									{
										"kind": "text",
										"text": "\n\nTo provide a more contextual error, you can use the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useAsyncError",
										"target": 2572
									},
									{
										"kind": "text",
										"text": " in a\nchild component\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Await\n  errorElement={<ReviewsError />}\n  resolve={reviewsPromise}\n>\n  <Reviews />\n</Await>\n\nfunction ReviewsError() {\n  const error = useAsyncError()\n  return <div>Error loading reviews: {error.message}</div>\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nIf you do not provide an errorElement, the rejected value will bubble up to\nthe nearest route-level "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ErrorBoundary",
										"target": 1540,
										"tsLinkText": "ErrorBoundary"
									},
									{
										"kind": "text",
										"text": " and be accessible\nvia "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useRouteError",
										"target": 2665
									},
									{
										"kind": "text",
										"text": " hook."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 893,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L893"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 145,
							"name": "resolve",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Takes a promise returned from a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "loader",
										"target": 2096
									},
									{
										"kind": "text",
										"text": " value to be resolved and rendered.\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nimport { useLoaderData, Await } from \"react-router\"\n\nexport async function loader() {\n  let reviews = getReviews() // not awaited\n  let book = await getBook()\n  return {\n    book,\n    reviews, // this is a promise\n  }\n}\n\nexport default function Book() {\n  const {\n    book,\n    reviews, // this is the same promise\n  } = useLoaderData()\n\n  return (\n    <div>\n      <h1>{book.title}</h1>\n      <p>{book.description}</p>\n      <React.Suspense fallback={<ReviewsSkeleton />}>\n        <Await\n          // and is the promise we pass to Await\n          resolve={reviews}\n        >\n          <Reviews />\n        </Await>\n      </React.Suspense>\n    </div>\n  );\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 933,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L933"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								143,
								144,
								145
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 834,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L834"
						}
					]
				},
				{
					"id": 146,
					"name": "BrowserRouterProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 147,
							"name": "basename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 239,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L239"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 148,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 240,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L240"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 149,
							"name": "window",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 241,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L241"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Window"
								},
								"name": "Window",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								147,
								148,
								149
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 238,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L238"
						}
					]
				},
				{
					"id": 150,
					"name": "Cookie",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A HTTP cookie.\n\nA Cookie is a logical container for metadata about a HTTP cookie; its name\nand options. But it doesn't contain a value. Instead, it has "
							},
							{
								"kind": "code",
								"text": "`parse()`"
							},
							{
								"kind": "text",
								"text": " and\n"
							},
							{
								"kind": "code",
								"text": "`serialize()`"
							},
							{
								"kind": "text",
								"text": " methods that allow a single instance to be reused for\nparsing/encoding multiple different values."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://remix.run/utils/cookies#cookie-api"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 151,
							"name": "expires",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Date this cookie expires.\n\nNote: This is calculated at access time using "
									},
									{
										"kind": "code",
										"text": "`maxAge`"
									},
									{
										"kind": "text",
										"text": " when no "
									},
									{
										"kind": "code",
										"text": "`expires`"
									},
									{
										"kind": "text",
										"text": "\noption is provided to "
									},
									{
										"kind": "code",
										"text": "`createCookie()`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
									"line": 52,
									"character": 11,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/cookies.ts#L52"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 152,
							"name": "isSigned",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "True if this cookie uses one or more secrets for verification."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
									"line": 44,
									"character": 11,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/cookies.ts#L44"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 153,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the cookie, used in the "
									},
									{
										"kind": "code",
										"text": "`Cookie`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`Set-Cookie`"
									},
									{
										"kind": "text",
										"text": " headers."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
									"line": 39,
									"character": 11,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/cookies.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 154,
							"name": "parse",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
									"line": 58,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/cookies.ts#L58"
								}
							],
							"signatures": [
								{
									"id": 155,
									"name": "parse",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Parses a raw "
											},
											{
												"kind": "code",
												"text": "`Cookie`"
											},
											{
												"kind": "text",
												"text": " header and returns the value of this cookie or\n"
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " if it's not present."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
											"line": 58,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/cookies.ts#L58"
										}
									],
									"parameters": [
										{
											"id": 156,
											"name": "cookieHeader",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 157,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 162,
												"name": "CookieParseOptions",
												"package": "@types/cookie"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 158,
							"name": "serialize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
									"line": 67,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/cookies.ts#L67"
								}
							],
							"signatures": [
								{
									"id": 159,
									"name": "serialize",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Serializes the given value to a string and returns the "
											},
											{
												"kind": "code",
												"text": "`Set-Cookie`"
											},
											{
												"kind": "text",
												"text": "\nheader."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
											"line": 67,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/cookies.ts#L67"
										}
									],
									"parameters": [
										{
											"id": 160,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 161,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 166,
												"name": "CookieSerializeOptions",
												"package": "@types/cookie"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								151,
								152,
								153
							]
						},
						{
							"title": "Methods",
							"children": [
								154,
								158
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
							"line": 35,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/cookies.ts#L35"
						}
					]
				},
				{
					"id": 162,
					"name": "CookieParseOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Additional parsing options"
							}
						]
					},
					"children": [
						{
							"id": 163,
							"name": "decode",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
									"line": 134,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 164,
									"name": "decode",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Specifies a function that will be used to decode a cookie's value. Since\nthe value of a cookie has a limited character set (and must be a simple\nstring), this function can be used to decode a previously-encoded cookie\nvalue into a JavaScript string or other object.\n\nThe default function is the global "
											},
											{
												"kind": "code",
												"text": "`decodeURIComponent`"
											},
											{
												"kind": "text",
												"text": ", which will decode\nany URL-encoded sequences into their byte representations.\n\n*Note* if an error is thrown from this function, the original, non-decoded\ncookie value will be returned as the cookie's value."
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
											"line": 134,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 165,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								163
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
							"line": 121,
							"character": 17
						}
					]
				},
				{
					"id": 166,
					"name": "CookieSerializeOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Additional serialization options"
							}
						]
					},
					"children": [
						{
							"id": 167,
							"name": "domain",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies the value for the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Set-Cookie attribute",
										"target": "https://tools.ietf.org/html/rfc6265#section-5.2.3|Domain"
									},
									{
										"kind": "text",
										"text": ". By default, no\ndomain is set, and most clients will consider the cookie to apply to only\nthe current domain."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 168,
							"name": "expires",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies the "
									},
									{
										"kind": "code",
										"text": "`Date`"
									},
									{
										"kind": "text",
										"text": " object to be the value for the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "`Set-Cookie` attribute",
										"target": "https://tools.ietf.org/html/rfc6265#section-5.2.1|`Expires`"
									},
									{
										"kind": "text",
										"text": ". By default,\nno expiration is set, and most clients will consider this a \"non-persistent cookie\" and will delete\nit on a condition like exiting a web browser application.\n\n*Note* the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "storage model specification",
										"target": "https://tools.ietf.org/html/rfc6265#section-5.3|cookie"
									},
									{
										"kind": "text",
										"text": "\nstates that if both "
									},
									{
										"kind": "code",
										"text": "`expires`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`maxAge`"
									},
									{
										"kind": "text",
										"text": " are set, then "
									},
									{
										"kind": "code",
										"text": "`maxAge`"
									},
									{
										"kind": "text",
										"text": " takes precedence, but it is\npossible not all clients by obey this, so if both are set, they should\npoint to the same date and time."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
									"line": 38,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 169,
							"name": "httpOnly",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies the boolean value for the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "`Set-Cookie` attribute",
										"target": "https://tools.ietf.org/html/rfc6265#section-5.2.6|`HttpOnly`"
									},
									{
										"kind": "text",
										"text": ".\nWhen truthy, the "
									},
									{
										"kind": "code",
										"text": "`HttpOnly`"
									},
									{
										"kind": "text",
										"text": " attribute is set, otherwise it is not. By\ndefault, the "
									},
									{
										"kind": "code",
										"text": "`HttpOnly`"
									},
									{
										"kind": "text",
										"text": " attribute is not set.\n\n*Note* be careful when setting this to true, as compliant clients will\nnot allow client-side JavaScript to see the cookie in "
									},
									{
										"kind": "code",
										"text": "`document.cookie`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
									"line": 47,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 170,
							"name": "maxAge",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies the number (in seconds) to be the value for the "
									},
									{
										"kind": "code",
										"text": "`Max-Age`"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "code",
										"text": "`Set-Cookie`"
									},
									{
										"kind": "text",
										"text": " attribute. The given number will be converted to an integer\nby rounding down. By default, no maximum age is set.\n\n*Note* the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "storage model specification",
										"target": "https://tools.ietf.org/html/rfc6265#section-5.3|cookie"
									},
									{
										"kind": "text",
										"text": "\nstates that if both "
									},
									{
										"kind": "code",
										"text": "`expires`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`maxAge`"
									},
									{
										"kind": "text",
										"text": " are set, then "
									},
									{
										"kind": "code",
										"text": "`maxAge`"
									},
									{
										"kind": "text",
										"text": " takes precedence, but it is\npossible not all clients by obey this, so if both are set, they should\npoint to the same date and time."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
									"line": 58,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 171,
							"name": "partitioned",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies the "
									},
									{
										"kind": "code",
										"text": "`boolean`"
									},
									{
										"kind": "text",
										"text": " value for the ["
									},
									{
										"kind": "code",
										"text": "`Partitioned`"
									},
									{
										"kind": "text",
										"text": " "
									},
									{
										"kind": "code",
										"text": "`Set-Cookie`"
									},
									{
										"kind": "text",
										"text": "](rfc-cutler-httpbis-partitioned-cookies)\nattribute. When truthy, the "
									},
									{
										"kind": "code",
										"text": "`Partitioned`"
									},
									{
										"kind": "text",
										"text": " attribute is set, otherwise it is not. By default, the\n"
									},
									{
										"kind": "code",
										"text": "`Partitioned`"
									},
									{
										"kind": "text",
										"text": " attribute is not set.\n\n**note** This is an attribute that has not yet been fully standardized, and may change in the future.\nThis also means many clients may ignore this attribute until they understand it.\n\nMore information about can be found in [the proposal](https://github.com/privacycg/CHIPS)"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
									"line": 69,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 172,
							"name": "path",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies the value for the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "`Set-Cookie` attribute",
										"target": "https://tools.ietf.org/html/rfc6265#section-5.2.4|`Path`"
									},
									{
										"kind": "text",
										"text": ".\nBy default, the path is considered the \"default path\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 173,
							"name": "priority",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies the "
									},
									{
										"kind": "code",
										"text": "`string`"
									},
									{
										"kind": "text",
										"text": " to be the value for the ["
									},
									{
										"kind": "code",
										"text": "`Priority`"
									},
									{
										"kind": "text",
										"text": " "
									},
									{
										"kind": "code",
										"text": "`Set-Cookie`"
									},
									{
										"kind": "text",
										"text": " attribute][rfc-west-cookie-priority-00-4.1].\n\n- "
									},
									{
										"kind": "code",
										"text": "`'low'`"
									},
									{
										"kind": "text",
										"text": " will set the "
									},
									{
										"kind": "code",
										"text": "`Priority`"
									},
									{
										"kind": "text",
										"text": " attribute to "
									},
									{
										"kind": "code",
										"text": "`Low`"
									},
									{
										"kind": "text",
										"text": ".\n- "
									},
									{
										"kind": "code",
										"text": "`'medium'`"
									},
									{
										"kind": "text",
										"text": " will set the "
									},
									{
										"kind": "code",
										"text": "`Priority`"
									},
									{
										"kind": "text",
										"text": " attribute to "
									},
									{
										"kind": "code",
										"text": "`Medium`"
									},
									{
										"kind": "text",
										"text": ", the default priority when not set.\n- "
									},
									{
										"kind": "code",
										"text": "`'high'`"
									},
									{
										"kind": "text",
										"text": " will set the "
									},
									{
										"kind": "code",
										"text": "`Priority`"
									},
									{
										"kind": "text",
										"text": " attribute to "
									},
									{
										"kind": "code",
										"text": "`High`"
									},
									{
										"kind": "text",
										"text": ".\n\nMore information about the different priority levels can be found in\n[the specification][rfc-west-cookie-priority-00-4.1].\n\n**note** This is an attribute that has not yet been fully standardized, and may change in the future.\nThis also means many clients may ignore this attribute until they understand it."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
									"line": 88,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "high"
									},
									{
										"type": "literal",
										"value": "low"
									},
									{
										"type": "literal",
										"value": "medium"
									}
								]
							}
						},
						{
							"id": 174,
							"name": "sameSite",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies the boolean or string to be the value for the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "`Set-Cookie` attribute",
										"target": "https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-03#section-4.1.2.7|`SameSite`"
									},
									{
										"kind": "text",
										"text": ".\n\n- "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " will set the "
									},
									{
										"kind": "code",
										"text": "`SameSite`"
									},
									{
										"kind": "text",
										"text": " attribute to "
									},
									{
										"kind": "code",
										"text": "`Strict`"
									},
									{
										"kind": "text",
										"text": " for strict same\nsite enforcement.\n- "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " will not set the "
									},
									{
										"kind": "code",
										"text": "`SameSite`"
									},
									{
										"kind": "text",
										"text": " attribute.\n- "
									},
									{
										"kind": "code",
										"text": "`'lax'`"
									},
									{
										"kind": "text",
										"text": " will set the "
									},
									{
										"kind": "code",
										"text": "`SameSite`"
									},
									{
										"kind": "text",
										"text": " attribute to Lax for lax same site\nenforcement.\n- "
									},
									{
										"kind": "code",
										"text": "`'strict'`"
									},
									{
										"kind": "text",
										"text": " will set the "
									},
									{
										"kind": "code",
										"text": "`SameSite`"
									},
									{
										"kind": "text",
										"text": " attribute to Strict for strict same\nsite enforcement.\n - "
									},
									{
										"kind": "code",
										"text": "`'none'`"
									},
									{
										"kind": "text",
										"text": " will set the SameSite attribute to None for an explicit\n cross-site cookie.\n\nMore information about the different enforcement levels can be found in "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "specification",
										"target": "https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-03#section-4.1.2.7|the"
									},
									{
										"kind": "text",
										"text": ".\n\n*note* This is an attribute that has not yet been fully standardized, and may change in the future. This also means many clients may ignore this attribute until they understand it."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
									"line": 106,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "strict"
									},
									{
										"type": "literal",
										"value": "lax"
									}
								]
							}
						},
						{
							"id": 175,
							"name": "secure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies the boolean value for the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "`Set-Cookie` attribute",
										"target": "https://tools.ietf.org/html/rfc6265#section-5.2.5|`Secure`"
									},
									{
										"kind": "text",
										"text": ". When truthy, the\n"
									},
									{
										"kind": "code",
										"text": "`Secure`"
									},
									{
										"kind": "text",
										"text": " attribute is set, otherwise it is not. By default, the "
									},
									{
										"kind": "code",
										"text": "`Secure`"
									},
									{
										"kind": "text",
										"text": " attribute is not set.\n\n*Note* be careful when setting this to "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ", as compliant clients will\nnot send the cookie back to the server in the future if the browser does\nnot have an HTTPS connection."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
									"line": 115,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 176,
							"name": "encode",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 177,
									"name": "encode",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Specifies a function that will be used to encode a cookie's value. Since\nvalue of a cookie has a limited character set (and must be a simple\nstring), this function can be used to encode a value into a string suited\nfor a cookie's value.\n\nThe default function is the global "
											},
											{
												"kind": "code",
												"text": "`encodeURIComponent`"
											},
											{
												"kind": "text",
												"text": ", which will\nencode a JavaScript string into UTF-8 byte sequences and then URL-encode\nany that fall outside of the cookie range."
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
											"line": 26,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 178,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								167,
								168,
								169,
								170,
								171,
								172,
								173,
								174,
								175
							]
						},
						{
							"title": "Methods",
							"children": [
								176
							]
						}
					],
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
							"line": 8,
							"character": 17
						}
					]
				},
				{
					"id": 179,
					"name": "CookieSignatureOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 180,
							"name": "secrets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of secrets that may be used to sign/unsign the value of a cookie.\n\nThe array makes it easy to rotate secrets. New secrets should be added to\nthe beginning of the array. "
									},
									{
										"kind": "code",
										"text": "`cookie.serialize()`"
									},
									{
										"kind": "text",
										"text": " will always use the first\nvalue in the array, but "
									},
									{
										"kind": "code",
										"text": "`cookie.parse()`"
									},
									{
										"kind": "text",
										"text": " may use any of them so that\ncookies that were signed with older secrets still work."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/cookies.ts#L18"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								180
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
							"line": 9,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/cookies.ts#L9"
						}
					]
				},
				{
					"id": 181,
					"name": "DataRouteMatch",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 182,
							"name": "params",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The names and values of dynamic parameters in the URL."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 396,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L396"
								}
							],
							"type": {
								"type": "reference",
								"target": 2183,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Params",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1682,
								"name": "RouteMatch.params"
							}
						},
						{
							"id": 183,
							"name": "pathname",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The portion of the URL pathname that was matched."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 400,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L400"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1683,
								"name": "RouteMatch.pathname"
							}
						},
						{
							"id": 184,
							"name": "pathnameBase",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The portion of the URL pathname that was matched before child routes."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 404,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L404"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1684,
								"name": "RouteMatch.pathnameBase"
							}
						},
						{
							"id": 185,
							"name": "route",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The route object that was used to match."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 408,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L408"
								}
							],
							"type": {
								"type": "reference",
								"target": 2041,
								"name": "DataRouteObject",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1685,
								"name": "RouteMatch.route"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								182,
								183,
								184,
								185
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 75,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L75"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1681,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": 2041,
									"name": "DataRouteObject",
									"package": "react-router"
								}
							],
							"name": "RouteMatch",
							"package": "react-router"
						}
					]
				},
				{
					"id": 186,
					"name": "EntryContext",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 187,
							"name": "abortDelay",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L19"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FrameworkContextObject.abortDelay"
							}
						},
						{
							"id": 188,
							"name": "criticalCss",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FrameworkContextObject.criticalCss"
							}
						},
						{
							"id": 189,
							"name": "future",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L17"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"qualifiedName": "FutureConfig"
								},
								"name": "FutureConfig",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FrameworkContextObject.future"
							}
						},
						{
							"id": 190,
							"name": "isSpaMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L18"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FrameworkContextObject.isSpaMode"
							}
						},
						{
							"id": 191,
							"name": "manifest",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L13"
								}
							],
							"type": {
								"type": "reference",
								"target": 1914,
								"name": "AssetsManifest",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FrameworkContextObject.manifest"
							}
						},
						{
							"id": 192,
							"name": "renderMeta",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L21"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 193,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 194,
											"name": "didRenderScripts",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
													"line": 22,
													"character": 4,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L22"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 195,
											"name": "streamCache",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
													"line": 23,
													"character": 4,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L23"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 196,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 197,
																			"name": "error",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
																					"line": 30,
																					"character": 8,
																					"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L30"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		},
																		{
																			"id": 198,
																			"name": "result",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
																					"line": 26,
																					"character": 8,
																					"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L26"
																				}
																			],
																			"type": {
																				"type": "reflection",
																				"declaration": {
																					"id": 199,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"children": [
																						{
																							"id": 200,
																							"name": "done",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
																									"line": 27,
																									"character": 10,
																									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L27"
																								}
																							],
																							"type": {
																								"type": "intrinsic",
																								"name": "boolean"
																							}
																						},
																						{
																							"id": 201,
																							"name": "value",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
																									"line": 28,
																									"character": 10,
																									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L28"
																								}
																							],
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"children": [
																								200,
																								201
																							]
																						}
																					],
																					"sources": [
																						{
																							"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
																							"line": 26,
																							"character": 17,
																							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L26"
																						}
																					]
																				}
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				197,
																				198
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
																			"line": 25,
																			"character": 22,
																			"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L25"
																		}
																	]
																}
															}
														]
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												194,
												195
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
											"line": 21,
											"character": 15,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L21"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FrameworkContextObject.renderMeta"
							}
						},
						{
							"id": 202,
							"name": "routeModules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L14"
								}
							],
							"type": {
								"type": "reference",
								"target": 1926,
								"name": "RouteModules",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FrameworkContextObject.routeModules"
							}
						},
						{
							"id": 203,
							"name": "serverHandoffStream",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L40"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "ReadableStream"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Uint8Array"
										},
										"name": "Uint8Array",
										"package": "typescript"
									}
								],
								"name": "ReadableStream",
								"package": "typescript"
							}
						},
						{
							"id": 204,
							"name": "serverHandoffString",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FrameworkContextObject.serverHandoffString"
							}
						},
						{
							"id": 205,
							"name": "staticHandlerContext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L39"
								}
							],
							"type": {
								"type": "reference",
								"target": 1870,
								"name": "StaticHandlerContext",
								"package": "react-router"
							}
						},
						{
							"id": 206,
							"name": "serializeError",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L20"
								}
							],
							"signatures": [
								{
									"id": 207,
									"name": "serializeError",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
											"line": 20,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L20"
										}
									],
									"parameters": [
										{
											"id": 208,
											"name": "error",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Error"
												},
												"name": "Error",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
											"qualifiedName": "SerializedError"
										},
										"name": "SerializedError",
										"package": "react-router"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "FrameworkContextObject.serializeError"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FrameworkContextObject.serializeError"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								187,
								188,
								189,
								190,
								191,
								192,
								202,
								203,
								204,
								205
							]
						},
						{
							"title": "Methods",
							"children": [
								206
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
							"line": 38,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L38"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
								"qualifiedName": "FrameworkContextObject"
							},
							"name": "FrameworkContextObject",
							"package": "react-router"
						}
					]
				},
				{
					"id": 209,
					"name": "FetcherFormProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Form props available to fetchers"
							}
						]
					},
					"children": [
						{
							"id": 210,
							"name": "about",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1953,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.about"
							}
						},
						{
							"id": 211,
							"name": "acceptCharset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2227,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.acceptCharset"
							}
						},
						{
							"id": 212,
							"name": "accessKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1927,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.accessKey"
							}
						},
						{
							"id": 213,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The URL to submit the form data to.  If "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ", this defaults to the closest route in context."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 935,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L935"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.action"
							}
						},
						{
							"id": 214,
							"name": "aria-activedescendant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1636,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-activedescendant"
							}
						},
						{
							"id": 215,
							"name": "aria-atomic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1638,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-atomic"
							}
						},
						{
							"id": 216,
							"name": "aria-autocomplete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1643,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "list"
									},
									{
										"type": "literal",
										"value": "inline"
									},
									{
										"type": "literal",
										"value": "both"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-autocomplete"
							}
						},
						{
							"id": 217,
							"name": "aria-braillelabel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that labels the current element, which is intended to be converted into Braille."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-label."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1649,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-braillelabel"
							}
						},
						{
							"id": 218,
							"name": "aria-brailleroledescription",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-roledescription."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1654,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-brailleroledescription"
							}
						},
						{
							"id": 219,
							"name": "aria-busy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1655,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-busy"
							}
						},
						{
							"id": 220,
							"name": "aria-checked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-pressed"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-selected."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1660,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "mixed"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-checked"
							}
						},
						{
							"id": 221,
							"name": "aria-colcount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the total number of columns in a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-colindex."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1665,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-colcount"
							}
						},
						{
							"id": 222,
							"name": "aria-colindex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colcount"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1670,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-colindex"
							}
						},
						{
							"id": 223,
							"name": "aria-colindextext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human readable text alternative of aria-colindex."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-rowindextext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1675,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-colindextext"
							}
						},
						{
							"id": 224,
							"name": "aria-colspan",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colindex"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1680,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-colspan"
							}
						},
						{
							"id": 225,
							"name": "aria-controls",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-owns."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1685,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-controls"
							}
						},
						{
							"id": 226,
							"name": "aria-current",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the element that represents the current item within a container or set of related elements."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1687,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "time"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "location"
									},
									{
										"type": "literal",
										"value": "page"
									},
									{
										"type": "literal",
										"value": "step"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "date"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-current"
							}
						},
						{
							"id": 227,
							"name": "aria-describedby",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) that describes the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-labelledby"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1692,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-describedby"
							}
						},
						{
							"id": 228,
							"name": "aria-description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that describes or annotates the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "related aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1697,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-description"
							}
						},
						{
							"id": 229,
							"name": "aria-details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element that provides a detailed, extended description for the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1702,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-details"
							}
						},
						{
							"id": 230,
							"name": "aria-disabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-hidden"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-readonly."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1707,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-disabled"
							}
						},
						{
							"id": 231,
							"name": "aria-dropeffect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates what functions can be performed when a dragged object is released on the drop target."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in ARIA 1.1"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1712,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "link"
									},
									{
										"type": "literal",
										"value": "copy"
									},
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "execute"
									},
									{
										"type": "literal",
										"value": "move"
									},
									{
										"type": "literal",
										"value": "popup"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-dropeffect"
							}
						},
						{
							"id": 232,
							"name": "aria-errormessage",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element that provides an error message for the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-invalid"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-describedby."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1717,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-errormessage"
							}
						},
						{
							"id": 233,
							"name": "aria-expanded",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1719,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-expanded"
							}
						},
						{
							"id": 234,
							"name": "aria-flowto",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1724,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-flowto"
							}
						},
						{
							"id": 235,
							"name": "aria-grabbed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in ARIA 1.1"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1729,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-grabbed"
							}
						},
						{
							"id": 236,
							"name": "aria-haspopup",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1731,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "dialog"
									},
									{
										"type": "literal",
										"value": "menu"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "grid"
									},
									{
										"type": "literal",
										"value": "listbox"
									},
									{
										"type": "literal",
										"value": "tree"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-haspopup"
							}
						},
						{
							"id": 237,
							"name": "aria-hidden",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element is exposed to an accessibility API."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-disabled."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1736,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-hidden"
							}
						},
						{
							"id": 238,
							"name": "aria-invalid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the entered value does not conform to the format expected by the application."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-errormessage."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1741,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "grammar"
									},
									{
										"type": "literal",
										"value": "spelling"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-invalid"
							}
						},
						{
							"id": 239,
							"name": "aria-keyshortcuts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1743,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-keyshortcuts"
							}
						},
						{
							"id": 240,
							"name": "aria-label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that labels the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-labelledby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1748,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-label"
							}
						},
						{
							"id": 241,
							"name": "aria-labelledby",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) that labels the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1753,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-labelledby"
							}
						},
						{
							"id": 242,
							"name": "aria-level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the hierarchical level of an element within a structure."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1755,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-level"
							}
						},
						{
							"id": 243,
							"name": "aria-live",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1757,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "off"
									},
									{
										"type": "literal",
										"value": "assertive"
									},
									{
										"type": "literal",
										"value": "polite"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-live"
							}
						},
						{
							"id": 244,
							"name": "aria-modal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether an element is modal when displayed."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1759,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-modal"
							}
						},
						{
							"id": 245,
							"name": "aria-multiline",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether a text box accepts multiple lines of input or only a single line."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1761,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-multiline"
							}
						},
						{
							"id": 246,
							"name": "aria-multiselectable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the user may select more than one item from the current selectable descendants."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1763,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-multiselectable"
							}
						},
						{
							"id": 247,
							"name": "aria-orientation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1765,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "horizontal"
									},
									{
										"type": "literal",
										"value": "vertical"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-orientation"
							}
						},
						{
							"id": 248,
							"name": "aria-owns",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-controls."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1771,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-owns"
							}
						},
						{
							"id": 249,
							"name": "aria-placeholder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1776,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-placeholder"
							}
						},
						{
							"id": 250,
							"name": "aria-posinset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-setsize."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1781,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-posinset"
							}
						},
						{
							"id": 251,
							"name": "aria-pressed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"pressed\" state of toggle buttons."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-checked"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-selected."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1786,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "mixed"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-pressed"
							}
						},
						{
							"id": 252,
							"name": "aria-readonly",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the element is not editable, but is otherwise operable."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-disabled."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1791,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-readonly"
							}
						},
						{
							"id": 253,
							"name": "aria-relevant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-atomic."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1796,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "text"
									},
									{
										"type": "literal",
										"value": "additions"
									},
									{
										"type": "literal",
										"value": "additions removals"
									},
									{
										"type": "literal",
										"value": "additions text"
									},
									{
										"type": "literal",
										"value": "all"
									},
									{
										"type": "literal",
										"value": "removals"
									},
									{
										"type": "literal",
										"value": "removals additions"
									},
									{
										"type": "literal",
										"value": "removals text"
									},
									{
										"type": "literal",
										"value": "text additions"
									},
									{
										"type": "literal",
										"value": "text removals"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-relevant"
							}
						},
						{
							"id": 254,
							"name": "aria-required",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that user input is required on the element before a form may be submitted."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1798,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-required"
							}
						},
						{
							"id": 255,
							"name": "aria-roledescription",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human-readable, author-localized description for the role of an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1800,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-roledescription"
							}
						},
						{
							"id": 256,
							"name": "aria-rowcount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the total number of rows in a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-rowindex."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1805,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-rowcount"
							}
						},
						{
							"id": 257,
							"name": "aria-rowindex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowcount"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1810,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-rowindex"
							}
						},
						{
							"id": 258,
							"name": "aria-rowindextext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human readable text alternative of aria-rowindex."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-colindextext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1815,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-rowindextext"
							}
						},
						{
							"id": 259,
							"name": "aria-rowspan",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowindex"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1820,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-rowspan"
							}
						},
						{
							"id": 260,
							"name": "aria-selected",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"selected\" state of various widgets."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-checked"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-pressed."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1825,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-selected"
							}
						},
						{
							"id": 261,
							"name": "aria-setsize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-posinset."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1830,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-setsize"
							}
						},
						{
							"id": 262,
							"name": "aria-sort",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates if items in a table or grid are sorted in ascending or descending order."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1832,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "ascending"
									},
									{
										"type": "literal",
										"value": "descending"
									},
									{
										"type": "literal",
										"value": "other"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-sort"
							}
						},
						{
							"id": 263,
							"name": "aria-valuemax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the maximum allowed value for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1834,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-valuemax"
							}
						},
						{
							"id": 264,
							"name": "aria-valuemin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the minimum allowed value for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1836,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-valuemin"
							}
						},
						{
							"id": 265,
							"name": "aria-valuenow",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the current value for a range widget."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-valuetext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1841,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-valuenow"
							}
						},
						{
							"id": 266,
							"name": "aria-valuetext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the human readable text alternative of aria-valuenow for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1843,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-valuetext"
							}
						},
						{
							"id": 267,
							"name": "autoCapitalize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1966,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.autoCapitalize"
							}
						},
						{
							"id": 268,
							"name": "autoComplete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2232,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.autoComplete"
							}
						},
						{
							"id": 269,
							"name": "autoCorrect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1967,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.autoCorrect"
							}
						},
						{
							"id": 270,
							"name": "autoFocus",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1928,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.autoFocus"
							}
						},
						{
							"id": 271,
							"name": "autoSave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1968,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.autoSave"
							}
						},
						{
							"id": 272,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1420,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.children"
							}
						},
						{
							"id": 273,
							"name": "className",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1929,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.className"
							}
						},
						{
							"id": 274,
							"name": "color",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1969,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.color"
							}
						},
						{
							"id": 275,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1954,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.content"
							}
						},
						{
							"id": 276,
							"name": "contentEditable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1930,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "inherit"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "Booleanish"
										},
										"name": "Booleanish",
										"package": "@types/react"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.contentEditable"
							}
						},
						{
							"id": 277,
							"name": "contextMenu",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1931,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.contextMenu"
							}
						},
						{
							"id": 278,
							"name": "dangerouslySetInnerHTML",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1421,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 279,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 280,
											"name": "__html",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"line": 1424,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/global.d.ts",
															"qualifiedName": "TrustedHTML"
														},
														"name": "TrustedHTML",
														"package": "@types/react"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												280
											]
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 1421,
											"character": 34
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.dangerouslySetInnerHTML"
							}
						},
						{
							"id": 281,
							"name": "datatype",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1955,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.datatype"
							}
						},
						{
							"id": 282,
							"name": "defaultChecked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1921,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.defaultChecked"
							}
						},
						{
							"id": 283,
							"name": "defaultValue",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1922,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.defaultValue"
							}
						},
						{
							"id": 284,
							"name": "dir",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1932,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.dir"
							}
						},
						{
							"id": 285,
							"name": "draggable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1933,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.draggable"
							}
						},
						{
							"id": 286,
							"name": "encType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The encoding type to use for the form submission."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 927,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L927"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"type": "literal",
										"value": "multipart/form-data"
									},
									{
										"type": "literal",
										"value": "text/plain"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.encType"
							}
						},
						{
							"id": 287,
							"name": "hidden",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1934,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.hidden"
							}
						},
						{
							"id": 288,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1935,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.id"
							}
						},
						{
							"id": 289,
							"name": "inlist",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1956,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.inlist"
							}
						},
						{
							"id": 290,
							"name": "inputMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1984,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "search"
									},
									{
										"type": "literal",
										"value": "text"
									},
									{
										"type": "literal",
										"value": "url"
									},
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "tel"
									},
									{
										"type": "literal",
										"value": "email"
									},
									{
										"type": "literal",
										"value": "numeric"
									},
									{
										"type": "literal",
										"value": "decimal"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.inputMode"
							}
						},
						{
							"id": 291,
							"name": "is",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specify that a standard HTML element should behave like a defined custom built-in element"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1989,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.is"
							}
						},
						{
							"id": 292,
							"name": "itemID",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1973,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.itemID"
							}
						},
						{
							"id": 293,
							"name": "itemProp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1970,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.itemProp"
							}
						},
						{
							"id": 294,
							"name": "itemRef",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1974,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.itemRef"
							}
						},
						{
							"id": 295,
							"name": "itemScope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1971,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.itemScope"
							}
						},
						{
							"id": 296,
							"name": "itemType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1972,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.itemType"
							}
						},
						{
							"id": 297,
							"name": "lang",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1936,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.lang"
							}
						},
						{
							"id": 298,
							"name": "method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HTTP verb to use when the form is submitted. Supports \"get\", \"post\",\n\"put\", \"delete\", and \"patch\".\n\nNative "
									},
									{
										"kind": "code",
										"text": "`<form>`"
									},
									{
										"kind": "text",
										"text": " only supports "
									},
									{
										"kind": "code",
										"text": "`get`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`post`"
									},
									{
										"kind": "text",
										"text": ", avoid the other verbs if\nyou'd like to support progressive enhancement"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 922,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L922"
								}
							],
							"type": {
								"type": "reference",
								"target": 2069,
								"name": "HTMLFormMethod",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.method"
							}
						},
						{
							"id": 299,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2235,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.name"
							}
						},
						{
							"id": 300,
							"name": "noValidate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2236,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.noValidate"
							}
						},
						{
							"id": 301,
							"name": "nonce",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1937,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.nonce"
							}
						},
						{
							"id": 302,
							"name": "onAbort",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1480,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAbort"
							}
						},
						{
							"id": 303,
							"name": "onAbortCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1481,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAbortCapture"
							}
						},
						{
							"id": 304,
							"name": "onAnimationEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1612,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationEnd"
							}
						},
						{
							"id": 305,
							"name": "onAnimationEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1613,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationEndCapture"
							}
						},
						{
							"id": 306,
							"name": "onAnimationIteration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1614,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationIteration"
							}
						},
						{
							"id": 307,
							"name": "onAnimationIterationCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1615,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationIterationCapture"
							}
						},
						{
							"id": 308,
							"name": "onAnimationStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1610,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationStart"
							}
						},
						{
							"id": 309,
							"name": "onAnimationStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1611,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationStartCapture"
							}
						},
						{
							"id": 310,
							"name": "onAuxClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1528,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAuxClick"
							}
						},
						{
							"id": 311,
							"name": "onAuxClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1529,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAuxClickCapture"
							}
						},
						{
							"id": 312,
							"name": "onBeforeInput",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1452,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onBeforeInput"
							}
						},
						{
							"id": 313,
							"name": "onBeforeInputCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1453,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onBeforeInputCapture"
							}
						},
						{
							"id": 314,
							"name": "onBlur",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1446,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onBlur"
							}
						},
						{
							"id": 315,
							"name": "onBlurCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1447,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onBlurCapture"
							}
						},
						{
							"id": 316,
							"name": "onCanPlay",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1482,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCanPlay"
							}
						},
						{
							"id": 317,
							"name": "onCanPlayCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1483,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCanPlayCapture"
							}
						},
						{
							"id": 318,
							"name": "onCanPlayThrough",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1484,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCanPlayThrough"
							}
						},
						{
							"id": 319,
							"name": "onCanPlayThroughCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1485,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCanPlayThroughCapture"
							}
						},
						{
							"id": 320,
							"name": "onChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1450,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onChange"
							}
						},
						{
							"id": 321,
							"name": "onChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1451,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onChangeCapture"
							}
						},
						{
							"id": 322,
							"name": "onClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1530,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onClick"
							}
						},
						{
							"id": 323,
							"name": "onClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1531,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onClickCapture"
							}
						},
						{
							"id": 324,
							"name": "onCompositionEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1436,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionEnd"
							}
						},
						{
							"id": 325,
							"name": "onCompositionEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1437,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionEndCapture"
							}
						},
						{
							"id": 326,
							"name": "onCompositionStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1438,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionStart"
							}
						},
						{
							"id": 327,
							"name": "onCompositionStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1439,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionStartCapture"
							}
						},
						{
							"id": 328,
							"name": "onCompositionUpdate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1440,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionUpdate"
							}
						},
						{
							"id": 329,
							"name": "onCompositionUpdateCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1441,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionUpdateCapture"
							}
						},
						{
							"id": 330,
							"name": "onContextMenu",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1532,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onContextMenu"
							}
						},
						{
							"id": 331,
							"name": "onContextMenuCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1533,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onContextMenuCapture"
							}
						},
						{
							"id": 332,
							"name": "onCopy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1428,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCopy"
							}
						},
						{
							"id": 333,
							"name": "onCopyCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1429,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCopyCapture"
							}
						},
						{
							"id": 334,
							"name": "onCut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1430,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCut"
							}
						},
						{
							"id": 335,
							"name": "onCutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1431,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCutCapture"
							}
						},
						{
							"id": 336,
							"name": "onDoubleClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1534,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDoubleClick"
							}
						},
						{
							"id": 337,
							"name": "onDoubleClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1535,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDoubleClickCapture"
							}
						},
						{
							"id": 338,
							"name": "onDrag",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1536,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDrag"
							}
						},
						{
							"id": 339,
							"name": "onDragCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1537,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragCapture"
							}
						},
						{
							"id": 340,
							"name": "onDragEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1538,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragEnd"
							}
						},
						{
							"id": 341,
							"name": "onDragEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1539,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragEndCapture"
							}
						},
						{
							"id": 342,
							"name": "onDragEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1540,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragEnter"
							}
						},
						{
							"id": 343,
							"name": "onDragEnterCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1541,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragEnterCapture"
							}
						},
						{
							"id": 344,
							"name": "onDragExit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1542,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragExit"
							}
						},
						{
							"id": 345,
							"name": "onDragExitCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1543,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragExitCapture"
							}
						},
						{
							"id": 346,
							"name": "onDragLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1544,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragLeave"
							}
						},
						{
							"id": 347,
							"name": "onDragLeaveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1545,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragLeaveCapture"
							}
						},
						{
							"id": 348,
							"name": "onDragOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1546,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragOver"
							}
						},
						{
							"id": 349,
							"name": "onDragOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1547,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragOverCapture"
							}
						},
						{
							"id": 350,
							"name": "onDragStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1548,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragStart"
							}
						},
						{
							"id": 351,
							"name": "onDragStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1549,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragStartCapture"
							}
						},
						{
							"id": 352,
							"name": "onDrop",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1550,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDrop"
							}
						},
						{
							"id": 353,
							"name": "onDropCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1551,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDropCapture"
							}
						},
						{
							"id": 354,
							"name": "onDurationChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1486,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDurationChange"
							}
						},
						{
							"id": 355,
							"name": "onDurationChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1487,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDurationChangeCapture"
							}
						},
						{
							"id": 356,
							"name": "onEmptied",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1488,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEmptied"
							}
						},
						{
							"id": 357,
							"name": "onEmptiedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1489,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEmptiedCapture"
							}
						},
						{
							"id": 358,
							"name": "onEncrypted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1490,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEncrypted"
							}
						},
						{
							"id": 359,
							"name": "onEncryptedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1491,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEncryptedCapture"
							}
						},
						{
							"id": 360,
							"name": "onEnded",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1492,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEnded"
							}
						},
						{
							"id": 361,
							"name": "onEndedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1493,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEndedCapture"
							}
						},
						{
							"id": 362,
							"name": "onError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1466,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onError"
							}
						},
						{
							"id": 363,
							"name": "onErrorCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1467,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onErrorCapture"
							}
						},
						{
							"id": 364,
							"name": "onFocus",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1444,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onFocus"
							}
						},
						{
							"id": 365,
							"name": "onFocusCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1445,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onFocusCapture"
							}
						},
						{
							"id": 366,
							"name": "onGotPointerCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1596,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onGotPointerCapture"
							}
						},
						{
							"id": 367,
							"name": "onGotPointerCaptureCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1597,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onGotPointerCaptureCapture"
							}
						},
						{
							"id": 368,
							"name": "onInput",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1454,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onInput"
							}
						},
						{
							"id": 369,
							"name": "onInputCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1455,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onInputCapture"
							}
						},
						{
							"id": 370,
							"name": "onInvalid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1460,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onInvalid"
							}
						},
						{
							"id": 371,
							"name": "onInvalidCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1461,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onInvalidCapture"
							}
						},
						{
							"id": 372,
							"name": "onKeyDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1470,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyDown"
							}
						},
						{
							"id": 373,
							"name": "onKeyDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1471,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyDownCapture"
							}
						},
						{
							"id": 374,
							"name": "onKeyPress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1473,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyPress"
							}
						},
						{
							"id": 375,
							"name": "onKeyPressCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1475,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyPressCapture"
							}
						},
						{
							"id": 376,
							"name": "onKeyUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1476,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyUp"
							}
						},
						{
							"id": 377,
							"name": "onKeyUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1477,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyUpCapture"
							}
						},
						{
							"id": 378,
							"name": "onLoad",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1464,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoad"
							}
						},
						{
							"id": 379,
							"name": "onLoadCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1465,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadCapture"
							}
						},
						{
							"id": 380,
							"name": "onLoadStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1498,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadStart"
							}
						},
						{
							"id": 381,
							"name": "onLoadStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1499,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadStartCapture"
							}
						},
						{
							"id": 382,
							"name": "onLoadedData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1494,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadedData"
							}
						},
						{
							"id": 383,
							"name": "onLoadedDataCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1495,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadedDataCapture"
							}
						},
						{
							"id": 384,
							"name": "onLoadedMetadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1496,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadedMetadata"
							}
						},
						{
							"id": 385,
							"name": "onLoadedMetadataCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1497,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadedMetadataCapture"
							}
						},
						{
							"id": 386,
							"name": "onLostPointerCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1598,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLostPointerCapture"
							}
						},
						{
							"id": 387,
							"name": "onLostPointerCaptureCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1599,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLostPointerCaptureCapture"
							}
						},
						{
							"id": 388,
							"name": "onMouseDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1552,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseDown"
							}
						},
						{
							"id": 389,
							"name": "onMouseDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1553,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseDownCapture"
							}
						},
						{
							"id": 390,
							"name": "onMouseEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1554,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseEnter"
							}
						},
						{
							"id": 391,
							"name": "onMouseLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1555,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseLeave"
							}
						},
						{
							"id": 392,
							"name": "onMouseMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1556,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseMove"
							}
						},
						{
							"id": 393,
							"name": "onMouseMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1557,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseMoveCapture"
							}
						},
						{
							"id": 394,
							"name": "onMouseOut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1558,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseOut"
							}
						},
						{
							"id": 395,
							"name": "onMouseOutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1559,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseOutCapture"
							}
						},
						{
							"id": 396,
							"name": "onMouseOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1560,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseOver"
							}
						},
						{
							"id": 397,
							"name": "onMouseOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1561,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseOverCapture"
							}
						},
						{
							"id": 398,
							"name": "onMouseUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1562,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseUp"
							}
						},
						{
							"id": 399,
							"name": "onMouseUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1563,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseUpCapture"
							}
						},
						{
							"id": 400,
							"name": "onPaste",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1432,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPaste"
							}
						},
						{
							"id": 401,
							"name": "onPasteCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1433,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPasteCapture"
							}
						},
						{
							"id": 402,
							"name": "onPause",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1500,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPause"
							}
						},
						{
							"id": 403,
							"name": "onPauseCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1501,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPauseCapture"
							}
						},
						{
							"id": 404,
							"name": "onPlay",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1502,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPlay"
							}
						},
						{
							"id": 405,
							"name": "onPlayCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1503,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPlayCapture"
							}
						},
						{
							"id": 406,
							"name": "onPlaying",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1504,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPlaying"
							}
						},
						{
							"id": 407,
							"name": "onPlayingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1505,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPlayingCapture"
							}
						},
						{
							"id": 408,
							"name": "onPointerCancel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1586,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerCancel"
							}
						},
						{
							"id": 409,
							"name": "onPointerCancelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1587,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerCancelCapture"
							}
						},
						{
							"id": 410,
							"name": "onPointerDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1580,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerDown"
							}
						},
						{
							"id": 411,
							"name": "onPointerDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1581,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerDownCapture"
							}
						},
						{
							"id": 412,
							"name": "onPointerEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1588,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerEnter"
							}
						},
						{
							"id": 413,
							"name": "onPointerEnterCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1589,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerEnterCapture"
							}
						},
						{
							"id": 414,
							"name": "onPointerLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1590,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerLeave"
							}
						},
						{
							"id": 415,
							"name": "onPointerLeaveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1591,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerLeaveCapture"
							}
						},
						{
							"id": 416,
							"name": "onPointerMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1582,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerMove"
							}
						},
						{
							"id": 417,
							"name": "onPointerMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1583,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerMoveCapture"
							}
						},
						{
							"id": 418,
							"name": "onPointerOut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1594,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerOut"
							}
						},
						{
							"id": 419,
							"name": "onPointerOutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1595,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerOutCapture"
							}
						},
						{
							"id": 420,
							"name": "onPointerOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1592,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerOver"
							}
						},
						{
							"id": 421,
							"name": "onPointerOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1593,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerOverCapture"
							}
						},
						{
							"id": 422,
							"name": "onPointerUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1584,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerUp"
							}
						},
						{
							"id": 423,
							"name": "onPointerUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1585,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerUpCapture"
							}
						},
						{
							"id": 424,
							"name": "onProgress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1506,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onProgress"
							}
						},
						{
							"id": 425,
							"name": "onProgressCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1507,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onProgressCapture"
							}
						},
						{
							"id": 426,
							"name": "onRateChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1508,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onRateChange"
							}
						},
						{
							"id": 427,
							"name": "onRateChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1509,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onRateChangeCapture"
							}
						},
						{
							"id": 428,
							"name": "onReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1456,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onReset"
							}
						},
						{
							"id": 429,
							"name": "onResetCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1457,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onResetCapture"
							}
						},
						{
							"id": 430,
							"name": "onResize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1510,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onResize"
							}
						},
						{
							"id": 431,
							"name": "onResizeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1511,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onResizeCapture"
							}
						},
						{
							"id": 432,
							"name": "onScroll",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1602,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.UIEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "UIEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.UIEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onScroll"
							}
						},
						{
							"id": 433,
							"name": "onScrollCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1603,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.UIEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "UIEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.UIEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onScrollCapture"
							}
						},
						{
							"id": 434,
							"name": "onSeeked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1512,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSeeked"
							}
						},
						{
							"id": 435,
							"name": "onSeekedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1513,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSeekedCapture"
							}
						},
						{
							"id": 436,
							"name": "onSeeking",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1514,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSeeking"
							}
						},
						{
							"id": 437,
							"name": "onSeekingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1515,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSeekingCapture"
							}
						},
						{
							"id": 438,
							"name": "onSelect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1566,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSelect"
							}
						},
						{
							"id": 439,
							"name": "onSelectCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1567,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSelectCapture"
							}
						},
						{
							"id": 440,
							"name": "onStalled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1516,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onStalled"
							}
						},
						{
							"id": 441,
							"name": "onStalledCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1517,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onStalledCapture"
							}
						},
						{
							"id": 442,
							"name": "onSubmit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A function to call when the form is submitted. If you call\n"
									},
									{
										"kind": "code",
										"text": "`event.preventDefault()`"
									},
									{
										"kind": "text",
										"text": " then this form will not do anything."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 954,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L954"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSubmit"
							}
						},
						{
							"id": 443,
							"name": "onSubmitCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1459,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSubmitCapture"
							}
						},
						{
							"id": 444,
							"name": "onSuspend",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1518,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSuspend"
							}
						},
						{
							"id": 445,
							"name": "onSuspendCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1519,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSuspendCapture"
							}
						},
						{
							"id": 446,
							"name": "onTimeUpdate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1520,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTimeUpdate"
							}
						},
						{
							"id": 447,
							"name": "onTimeUpdateCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1521,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTimeUpdateCapture"
							}
						},
						{
							"id": 448,
							"name": "onTouchCancel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1570,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchCancel"
							}
						},
						{
							"id": 449,
							"name": "onTouchCancelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1571,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchCancelCapture"
							}
						},
						{
							"id": 450,
							"name": "onTouchEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1572,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchEnd"
							}
						},
						{
							"id": 451,
							"name": "onTouchEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1573,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchEndCapture"
							}
						},
						{
							"id": 452,
							"name": "onTouchMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1574,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchMove"
							}
						},
						{
							"id": 453,
							"name": "onTouchMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1575,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchMoveCapture"
							}
						},
						{
							"id": 454,
							"name": "onTouchStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1576,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchStart"
							}
						},
						{
							"id": 455,
							"name": "onTouchStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1577,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchStartCapture"
							}
						},
						{
							"id": 456,
							"name": "onTransitionEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1618,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TransitionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TransitionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TransitionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTransitionEnd"
							}
						},
						{
							"id": 457,
							"name": "onTransitionEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1619,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TransitionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TransitionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TransitionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTransitionEndCapture"
							}
						},
						{
							"id": 458,
							"name": "onVolumeChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1522,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onVolumeChange"
							}
						},
						{
							"id": 459,
							"name": "onVolumeChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1523,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onVolumeChangeCapture"
							}
						},
						{
							"id": 460,
							"name": "onWaiting",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1524,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onWaiting"
							}
						},
						{
							"id": 461,
							"name": "onWaitingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1525,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onWaitingCapture"
							}
						},
						{
							"id": 462,
							"name": "onWheel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1606,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.WheelEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "WheelEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.WheelEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onWheel"
							}
						},
						{
							"id": 463,
							"name": "onWheelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1607,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.WheelEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "WheelEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.WheelEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onWheelCapture"
							}
						},
						{
							"id": 464,
							"name": "placeholder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1938,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.placeholder"
							}
						},
						{
							"id": 465,
							"name": "prefix",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1957,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.prefix"
							}
						},
						{
							"id": 466,
							"name": "preventScrollReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prevent the scroll position from resetting to the top of the viewport on\ncompletion of the navigation when using the <ScrollRestoration> component"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 948,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L948"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.preventScrollReset"
							}
						},
						{
							"id": 467,
							"name": "property",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1958,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.property"
							}
						},
						{
							"id": 468,
							"name": "radioGroup",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1947,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.radioGroup"
							}
						},
						{
							"id": 469,
							"name": "rel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1959,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.rel"
							}
						},
						{
							"id": 470,
							"name": "relative",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether the form action is relative to the route hierarchy or\nthe pathname.  Use this if you want to opt out of navigating the route\nhierarchy and want to instead route based on /-delimited URL segments"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 942,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L942"
								}
							],
							"type": {
								"type": "reference",
								"target": 2192,
								"name": "RelativeRoutingType",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.relative"
							}
						},
						{
							"id": 471,
							"name": "resource",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1960,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.resource"
							}
						},
						{
							"id": 472,
							"name": "results",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1975,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.results"
							}
						},
						{
							"id": 473,
							"name": "rev",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1961,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.rev"
							}
						},
						{
							"id": 474,
							"name": "role",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1950,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AriaRole"
								},
								"name": "AriaRole",
								"package": "@types/react",
								"qualifiedName": "React.AriaRole"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.role"
							}
						},
						{
							"id": 475,
							"name": "security",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1976,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.security"
							}
						},
						{
							"id": 476,
							"name": "slot",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1939,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.slot"
							}
						},
						{
							"id": 477,
							"name": "spellCheck",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1940,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.spellCheck"
							}
						},
						{
							"id": 478,
							"name": "style",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1941,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CSSProperties"
								},
								"name": "CSSProperties",
								"package": "@types/react",
								"qualifiedName": "React.CSSProperties"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.style"
							}
						},
						{
							"id": 479,
							"name": "suppressContentEditableWarning",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1923,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.suppressContentEditableWarning"
							}
						},
						{
							"id": 480,
							"name": "suppressHydrationWarning",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1924,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.suppressHydrationWarning"
							}
						},
						{
							"id": 481,
							"name": "tabIndex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1942,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.tabIndex"
							}
						},
						{
							"id": 482,
							"name": "target",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2237,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.target"
							}
						},
						{
							"id": 483,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1943,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.title"
							}
						},
						{
							"id": 484,
							"name": "translate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1944,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "yes"
									},
									{
										"type": "literal",
										"value": "no"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.translate"
							}
						},
						{
							"id": 485,
							"name": "typeof",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1962,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.typeof"
							}
						},
						{
							"id": 486,
							"name": "unselectable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1977,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "on"
									},
									{
										"type": "literal",
										"value": "off"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.unselectable"
							}
						},
						{
							"id": 487,
							"name": "vocab",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1963,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.vocab"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								210,
								211,
								212,
								213,
								214,
								215,
								216,
								217,
								218,
								219,
								220,
								221,
								222,
								223,
								224,
								225,
								226,
								227,
								228,
								229,
								230,
								231,
								232,
								233,
								234,
								235,
								236,
								237,
								238,
								239,
								240,
								241,
								242,
								243,
								244,
								245,
								246,
								247,
								248,
								249,
								250,
								251,
								252,
								253,
								254,
								255,
								256,
								257,
								258,
								259,
								260,
								261,
								262,
								263,
								264,
								265,
								266,
								267,
								268,
								269,
								270,
								271,
								272,
								273,
								274,
								275,
								276,
								277,
								278,
								281,
								282,
								283,
								284,
								285,
								286,
								287,
								288,
								289,
								290,
								291,
								292,
								293,
								294,
								295,
								296,
								297,
								298,
								299,
								300,
								301,
								302,
								303,
								304,
								305,
								306,
								307,
								308,
								309,
								310,
								311,
								312,
								313,
								314,
								315,
								316,
								317,
								318,
								319,
								320,
								321,
								322,
								323,
								324,
								325,
								326,
								327,
								328,
								329,
								330,
								331,
								332,
								333,
								334,
								335,
								336,
								337,
								338,
								339,
								340,
								341,
								342,
								343,
								344,
								345,
								346,
								347,
								348,
								349,
								350,
								351,
								352,
								353,
								354,
								355,
								356,
								357,
								358,
								359,
								360,
								361,
								362,
								363,
								364,
								365,
								366,
								367,
								368,
								369,
								370,
								371,
								372,
								373,
								374,
								375,
								376,
								377,
								378,
								379,
								380,
								381,
								382,
								383,
								384,
								385,
								386,
								387,
								388,
								389,
								390,
								391,
								392,
								393,
								394,
								395,
								396,
								397,
								398,
								399,
								400,
								401,
								402,
								403,
								404,
								405,
								406,
								407,
								408,
								409,
								410,
								411,
								412,
								413,
								414,
								415,
								416,
								417,
								418,
								419,
								420,
								421,
								422,
								423,
								424,
								425,
								426,
								427,
								428,
								429,
								430,
								431,
								432,
								433,
								434,
								435,
								436,
								437,
								438,
								439,
								440,
								441,
								442,
								443,
								444,
								445,
								446,
								447,
								448,
								449,
								450,
								451,
								452,
								453,
								454,
								455,
								456,
								457,
								458,
								459,
								460,
								461,
								462,
								463,
								464,
								465,
								466,
								467,
								468,
								469,
								470,
								471,
								472,
								473,
								474,
								475,
								476,
								477,
								478,
								479,
								480,
								481,
								482,
								483,
								484,
								485,
								486,
								487
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 961,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L961"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
								"qualifiedName": "SharedFormProps"
							},
							"name": "SharedFormProps",
							"package": "react-router"
						}
					]
				},
				{
					"id": 488,
					"name": "FetcherSubmitFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Submits a fetcher "
							},
							{
								"kind": "code",
								"text": "`<form>`"
							},
							{
								"kind": "text",
								"text": " to the server without reloading the page."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1474,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1474"
						}
					],
					"signatures": [
						{
							"id": 489,
							"name": "FetcherSubmitFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1475,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1475"
								}
							],
							"parameters": [
								{
									"id": 490,
									"name": "target",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Can be multiple types of elements and objects\n\n**"
											},
											{
												"kind": "code",
												"text": "`HTMLFormElement`"
											},
											{
												"kind": "text",
												"text": "**\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\n<fetcher.Form\n  onSubmit={(event) => {\n    fetcher.submit(event.currentTarget);\n  }}\n/>\n```"
											},
											{
												"kind": "text",
												"text": "\n\n**"
											},
											{
												"kind": "code",
												"text": "`FormData`"
											},
											{
												"kind": "text",
												"text": "**\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\nconst formData = new FormData();\nformData.append(\"myKey\", \"myValue\");\nfetcher.submit(formData, { method: \"post\" });\n```"
											},
											{
												"kind": "text",
												"text": "\n\n**Plain object that will be serialized as "
											},
											{
												"kind": "code",
												"text": "`FormData`"
											},
											{
												"kind": "text",
												"text": "**\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\nfetcher.submit({ myKey: \"myValue\" }, { method: \"post\" });\n```"
											},
											{
												"kind": "text",
												"text": "\n\n**Plain object that will be serialized as JSON**\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\nfetcher.submit(\n  { myKey: \"myValue\" },\n  { method: \"post\", encType: \"application/json\" }\n);\n```"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 2221,
										"name": "SubmitTarget",
										"package": "react-router"
									}
								},
								{
									"id": 491,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 492,
										"name": "FetcherSubmitOptions",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 492,
					"name": "FetcherSubmitOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Submit options available to fetchers"
							}
						]
					},
					"children": [
						{
							"id": 493,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The action URL path used to submit the form. Overrides "
									},
									{
										"kind": "code",
										"text": "`<form action>`"
									},
									{
										"kind": "text",
										"text": ".\nDefaults to the path of the current route."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 170,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L170"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedSubmitOptions.action"
							}
						},
						{
							"id": 494,
							"name": "encType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The encoding used to submit the form. Overrides "
									},
									{
										"kind": "code",
										"text": "`<form encType>`"
									},
									{
										"kind": "text",
										"text": ".\nDefaults to \"application/x-www-form-urlencoded\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 176,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L176"
								}
							],
							"type": {
								"type": "reference",
								"target": 2067,
								"name": "FormEncType",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedSubmitOptions.encType"
							}
						},
						{
							"id": 495,
							"name": "method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HTTP method used to submit the form. Overrides "
									},
									{
										"kind": "code",
										"text": "`<form method>`"
									},
									{
										"kind": "text",
										"text": ".\nDefaults to \"GET\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 164,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L164"
								}
							],
							"type": {
								"type": "reference",
								"target": 2069,
								"name": "HTMLFormMethod",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedSubmitOptions.method"
							}
						},
						{
							"id": 496,
							"name": "preventScrollReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In browser-based environments, prevent resetting scroll after this\nnavigation when using the <ScrollRestoration> component"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 189,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L189"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedSubmitOptions.preventScrollReset"
							}
						},
						{
							"id": 497,
							"name": "relative",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether the form action is relative to the route hierarchy or\nthe pathname.  Use this if you want to opt out of navigating the route\nhierarchy and want to instead route based on /-delimited URL segments"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 183,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L183"
								}
							],
							"type": {
								"type": "reference",
								"target": 2192,
								"name": "RelativeRoutingType",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedSubmitOptions.relative"
							}
						},
						{
							"id": 498,
							"name": "unstable_flushSync",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable flushSync for this submission's state updates"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 194,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L194"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedSubmitOptions.unstable_flushSync"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								493,
								494,
								495,
								496,
								497,
								498
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/dom.ts",
							"line": 200,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L200"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/dom/dom.ts",
								"qualifiedName": "SharedSubmitOptions"
							},
							"name": "SharedSubmitOptions",
							"package": "react-router"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 1894,
							"name": "SubmitOptions"
						}
					]
				},
				{
					"id": 499,
					"name": "FormProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Form props available to navigations"
							}
						]
					},
					"children": [
						{
							"id": 500,
							"name": "about",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1953,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.about"
							}
						},
						{
							"id": 501,
							"name": "acceptCharset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2227,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.acceptCharset"
							}
						},
						{
							"id": 502,
							"name": "accessKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1927,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.accessKey"
							}
						},
						{
							"id": 503,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The URL to submit the form data to.  If "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ", this defaults to the closest route in context."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 935,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L935"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.action"
							}
						},
						{
							"id": 504,
							"name": "aria-activedescendant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1636,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-activedescendant"
							}
						},
						{
							"id": 505,
							"name": "aria-atomic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1638,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-atomic"
							}
						},
						{
							"id": 506,
							"name": "aria-autocomplete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1643,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "list"
									},
									{
										"type": "literal",
										"value": "inline"
									},
									{
										"type": "literal",
										"value": "both"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-autocomplete"
							}
						},
						{
							"id": 507,
							"name": "aria-braillelabel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that labels the current element, which is intended to be converted into Braille."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-label."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1649,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-braillelabel"
							}
						},
						{
							"id": 508,
							"name": "aria-brailleroledescription",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-roledescription."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1654,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-brailleroledescription"
							}
						},
						{
							"id": 509,
							"name": "aria-busy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1655,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-busy"
							}
						},
						{
							"id": 510,
							"name": "aria-checked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-pressed"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-selected."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1660,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "mixed"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-checked"
							}
						},
						{
							"id": 511,
							"name": "aria-colcount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the total number of columns in a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-colindex."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1665,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-colcount"
							}
						},
						{
							"id": 512,
							"name": "aria-colindex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colcount"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1670,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-colindex"
							}
						},
						{
							"id": 513,
							"name": "aria-colindextext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human readable text alternative of aria-colindex."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-rowindextext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1675,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-colindextext"
							}
						},
						{
							"id": 514,
							"name": "aria-colspan",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colindex"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1680,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-colspan"
							}
						},
						{
							"id": 515,
							"name": "aria-controls",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-owns."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1685,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-controls"
							}
						},
						{
							"id": 516,
							"name": "aria-current",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the element that represents the current item within a container or set of related elements."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1687,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "time"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "location"
									},
									{
										"type": "literal",
										"value": "page"
									},
									{
										"type": "literal",
										"value": "step"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "date"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-current"
							}
						},
						{
							"id": 517,
							"name": "aria-describedby",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) that describes the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-labelledby"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1692,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-describedby"
							}
						},
						{
							"id": 518,
							"name": "aria-description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that describes or annotates the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "related aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1697,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-description"
							}
						},
						{
							"id": 519,
							"name": "aria-details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element that provides a detailed, extended description for the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1702,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-details"
							}
						},
						{
							"id": 520,
							"name": "aria-disabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-hidden"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-readonly."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1707,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-disabled"
							}
						},
						{
							"id": 521,
							"name": "aria-dropeffect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates what functions can be performed when a dragged object is released on the drop target."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in ARIA 1.1"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1712,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "link"
									},
									{
										"type": "literal",
										"value": "copy"
									},
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "execute"
									},
									{
										"type": "literal",
										"value": "move"
									},
									{
										"type": "literal",
										"value": "popup"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-dropeffect"
							}
						},
						{
							"id": 522,
							"name": "aria-errormessage",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element that provides an error message for the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-invalid"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-describedby."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1717,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-errormessage"
							}
						},
						{
							"id": 523,
							"name": "aria-expanded",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1719,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-expanded"
							}
						},
						{
							"id": 524,
							"name": "aria-flowto",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1724,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-flowto"
							}
						},
						{
							"id": 525,
							"name": "aria-grabbed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in ARIA 1.1"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1729,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-grabbed"
							}
						},
						{
							"id": 526,
							"name": "aria-haspopup",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1731,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "dialog"
									},
									{
										"type": "literal",
										"value": "menu"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "grid"
									},
									{
										"type": "literal",
										"value": "listbox"
									},
									{
										"type": "literal",
										"value": "tree"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-haspopup"
							}
						},
						{
							"id": 527,
							"name": "aria-hidden",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element is exposed to an accessibility API."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-disabled."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1736,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-hidden"
							}
						},
						{
							"id": 528,
							"name": "aria-invalid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the entered value does not conform to the format expected by the application."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-errormessage."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1741,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "grammar"
									},
									{
										"type": "literal",
										"value": "spelling"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-invalid"
							}
						},
						{
							"id": 529,
							"name": "aria-keyshortcuts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1743,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-keyshortcuts"
							}
						},
						{
							"id": 530,
							"name": "aria-label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that labels the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-labelledby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1748,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-label"
							}
						},
						{
							"id": 531,
							"name": "aria-labelledby",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) that labels the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1753,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-labelledby"
							}
						},
						{
							"id": 532,
							"name": "aria-level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the hierarchical level of an element within a structure."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1755,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-level"
							}
						},
						{
							"id": 533,
							"name": "aria-live",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1757,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "off"
									},
									{
										"type": "literal",
										"value": "assertive"
									},
									{
										"type": "literal",
										"value": "polite"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-live"
							}
						},
						{
							"id": 534,
							"name": "aria-modal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether an element is modal when displayed."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1759,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-modal"
							}
						},
						{
							"id": 535,
							"name": "aria-multiline",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether a text box accepts multiple lines of input or only a single line."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1761,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-multiline"
							}
						},
						{
							"id": 536,
							"name": "aria-multiselectable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the user may select more than one item from the current selectable descendants."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1763,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-multiselectable"
							}
						},
						{
							"id": 537,
							"name": "aria-orientation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1765,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "horizontal"
									},
									{
										"type": "literal",
										"value": "vertical"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-orientation"
							}
						},
						{
							"id": 538,
							"name": "aria-owns",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-controls."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1771,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-owns"
							}
						},
						{
							"id": 539,
							"name": "aria-placeholder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1776,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-placeholder"
							}
						},
						{
							"id": 540,
							"name": "aria-posinset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-setsize."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1781,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-posinset"
							}
						},
						{
							"id": 541,
							"name": "aria-pressed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"pressed\" state of toggle buttons."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-checked"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-selected."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1786,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "mixed"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-pressed"
							}
						},
						{
							"id": 542,
							"name": "aria-readonly",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the element is not editable, but is otherwise operable."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-disabled."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1791,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-readonly"
							}
						},
						{
							"id": 543,
							"name": "aria-relevant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-atomic."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1796,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "text"
									},
									{
										"type": "literal",
										"value": "additions"
									},
									{
										"type": "literal",
										"value": "additions removals"
									},
									{
										"type": "literal",
										"value": "additions text"
									},
									{
										"type": "literal",
										"value": "all"
									},
									{
										"type": "literal",
										"value": "removals"
									},
									{
										"type": "literal",
										"value": "removals additions"
									},
									{
										"type": "literal",
										"value": "removals text"
									},
									{
										"type": "literal",
										"value": "text additions"
									},
									{
										"type": "literal",
										"value": "text removals"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-relevant"
							}
						},
						{
							"id": 544,
							"name": "aria-required",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that user input is required on the element before a form may be submitted."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1798,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-required"
							}
						},
						{
							"id": 545,
							"name": "aria-roledescription",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human-readable, author-localized description for the role of an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1800,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-roledescription"
							}
						},
						{
							"id": 546,
							"name": "aria-rowcount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the total number of rows in a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-rowindex."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1805,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-rowcount"
							}
						},
						{
							"id": 547,
							"name": "aria-rowindex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowcount"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1810,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-rowindex"
							}
						},
						{
							"id": 548,
							"name": "aria-rowindextext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human readable text alternative of aria-rowindex."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-colindextext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1815,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-rowindextext"
							}
						},
						{
							"id": 549,
							"name": "aria-rowspan",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowindex"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1820,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-rowspan"
							}
						},
						{
							"id": 550,
							"name": "aria-selected",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"selected\" state of various widgets."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-checked"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-pressed."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1825,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-selected"
							}
						},
						{
							"id": 551,
							"name": "aria-setsize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-posinset."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1830,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-setsize"
							}
						},
						{
							"id": 552,
							"name": "aria-sort",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates if items in a table or grid are sorted in ascending or descending order."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1832,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "ascending"
									},
									{
										"type": "literal",
										"value": "descending"
									},
									{
										"type": "literal",
										"value": "other"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-sort"
							}
						},
						{
							"id": 553,
							"name": "aria-valuemax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the maximum allowed value for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1834,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-valuemax"
							}
						},
						{
							"id": 554,
							"name": "aria-valuemin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the minimum allowed value for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1836,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-valuemin"
							}
						},
						{
							"id": 555,
							"name": "aria-valuenow",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the current value for a range widget."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-valuetext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1841,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-valuenow"
							}
						},
						{
							"id": 556,
							"name": "aria-valuetext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the human readable text alternative of aria-valuenow for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1843,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.aria-valuetext"
							}
						},
						{
							"id": 557,
							"name": "autoCapitalize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1966,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.autoCapitalize"
							}
						},
						{
							"id": 558,
							"name": "autoComplete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2232,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.autoComplete"
							}
						},
						{
							"id": 559,
							"name": "autoCorrect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1967,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.autoCorrect"
							}
						},
						{
							"id": 560,
							"name": "autoFocus",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1928,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.autoFocus"
							}
						},
						{
							"id": 561,
							"name": "autoSave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1968,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.autoSave"
							}
						},
						{
							"id": 562,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1420,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.children"
							}
						},
						{
							"id": 563,
							"name": "className",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1929,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.className"
							}
						},
						{
							"id": 564,
							"name": "color",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1969,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.color"
							}
						},
						{
							"id": 565,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1954,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.content"
							}
						},
						{
							"id": 566,
							"name": "contentEditable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1930,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "inherit"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "Booleanish"
										},
										"name": "Booleanish",
										"package": "@types/react"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.contentEditable"
							}
						},
						{
							"id": 567,
							"name": "contextMenu",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1931,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.contextMenu"
							}
						},
						{
							"id": 568,
							"name": "dangerouslySetInnerHTML",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1421,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 569,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 570,
											"name": "__html",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"line": 1424,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/global.d.ts",
															"qualifiedName": "TrustedHTML"
														},
														"name": "TrustedHTML",
														"package": "@types/react"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												570
											]
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 1421,
											"character": 34
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.dangerouslySetInnerHTML"
							}
						},
						{
							"id": 571,
							"name": "datatype",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1955,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.datatype"
							}
						},
						{
							"id": 572,
							"name": "defaultChecked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1921,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.defaultChecked"
							}
						},
						{
							"id": 573,
							"name": "defaultValue",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1922,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.defaultValue"
							}
						},
						{
							"id": 574,
							"name": "dir",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1932,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.dir"
							}
						},
						{
							"id": 575,
							"name": "discover",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 968,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L968"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
									"qualifiedName": "DiscoverBehavior"
								},
								"name": "DiscoverBehavior",
								"package": "react-router"
							}
						},
						{
							"id": 576,
							"name": "draggable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1933,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.draggable"
							}
						},
						{
							"id": 577,
							"name": "encType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The encoding type to use for the form submission."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 927,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L927"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"type": "literal",
										"value": "multipart/form-data"
									},
									{
										"type": "literal",
										"value": "text/plain"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.encType"
							}
						},
						{
							"id": 578,
							"name": "fetcherKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates a specific fetcherKey to use when using "
									},
									{
										"kind": "code",
										"text": "`navigate={false}`"
									},
									{
										"kind": "text",
										"text": " so you\ncan pick up the fetcher's state in a different component in a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useFetcher",
										"target": 2588
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 975,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L975"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 579,
							"name": "hidden",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1934,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.hidden"
							}
						},
						{
							"id": 580,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1935,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.id"
							}
						},
						{
							"id": 581,
							"name": "inlist",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1956,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.inlist"
							}
						},
						{
							"id": 582,
							"name": "inputMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1984,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "search"
									},
									{
										"type": "literal",
										"value": "text"
									},
									{
										"type": "literal",
										"value": "url"
									},
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "tel"
									},
									{
										"type": "literal",
										"value": "email"
									},
									{
										"type": "literal",
										"value": "numeric"
									},
									{
										"type": "literal",
										"value": "decimal"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.inputMode"
							}
						},
						{
							"id": 583,
							"name": "is",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specify that a standard HTML element should behave like a defined custom built-in element"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1989,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.is"
							}
						},
						{
							"id": 584,
							"name": "itemID",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1973,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.itemID"
							}
						},
						{
							"id": 585,
							"name": "itemProp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1970,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.itemProp"
							}
						},
						{
							"id": 586,
							"name": "itemRef",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1974,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.itemRef"
							}
						},
						{
							"id": 587,
							"name": "itemScope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1971,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.itemScope"
							}
						},
						{
							"id": 588,
							"name": "itemType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1972,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.itemType"
							}
						},
						{
							"id": 589,
							"name": "lang",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1936,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.lang"
							}
						},
						{
							"id": 590,
							"name": "method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HTTP verb to use when the form is submitted. Supports \"get\", \"post\",\n\"put\", \"delete\", and \"patch\".\n\nNative "
									},
									{
										"kind": "code",
										"text": "`<form>`"
									},
									{
										"kind": "text",
										"text": " only supports "
									},
									{
										"kind": "code",
										"text": "`get`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`post`"
									},
									{
										"kind": "text",
										"text": ", avoid the other verbs if\nyou'd like to support progressive enhancement"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 922,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L922"
								}
							],
							"type": {
								"type": "reference",
								"target": 2069,
								"name": "HTMLFormMethod",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.method"
							}
						},
						{
							"id": 591,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2235,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.name"
							}
						},
						{
							"id": 592,
							"name": "navigate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Skips the navigation and uses a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "fetcher",
										"target": 2588,
										"tsLinkText": "fetcher"
									},
									{
										"kind": "text",
										"text": " internally\nwhen "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ". This is essentially a shorthand for "
									},
									{
										"kind": "code",
										"text": "`useFetcher()`"
									},
									{
										"kind": "text",
										"text": " +\n"
									},
									{
										"kind": "code",
										"text": "`<fetcher.Form>`"
									},
									{
										"kind": "text",
										"text": " where you don't care about the resulting data in this\ncomponent."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 983,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L983"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 593,
							"name": "noValidate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2236,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.noValidate"
							}
						},
						{
							"id": 594,
							"name": "nonce",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1937,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.nonce"
							}
						},
						{
							"id": 595,
							"name": "onAbort",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1480,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAbort"
							}
						},
						{
							"id": 596,
							"name": "onAbortCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1481,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAbortCapture"
							}
						},
						{
							"id": 597,
							"name": "onAnimationEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1612,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationEnd"
							}
						},
						{
							"id": 598,
							"name": "onAnimationEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1613,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationEndCapture"
							}
						},
						{
							"id": 599,
							"name": "onAnimationIteration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1614,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationIteration"
							}
						},
						{
							"id": 600,
							"name": "onAnimationIterationCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1615,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationIterationCapture"
							}
						},
						{
							"id": 601,
							"name": "onAnimationStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1610,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationStart"
							}
						},
						{
							"id": 602,
							"name": "onAnimationStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1611,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAnimationStartCapture"
							}
						},
						{
							"id": 603,
							"name": "onAuxClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1528,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAuxClick"
							}
						},
						{
							"id": 604,
							"name": "onAuxClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1529,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onAuxClickCapture"
							}
						},
						{
							"id": 605,
							"name": "onBeforeInput",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1452,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onBeforeInput"
							}
						},
						{
							"id": 606,
							"name": "onBeforeInputCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1453,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onBeforeInputCapture"
							}
						},
						{
							"id": 607,
							"name": "onBlur",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1446,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onBlur"
							}
						},
						{
							"id": 608,
							"name": "onBlurCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1447,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onBlurCapture"
							}
						},
						{
							"id": 609,
							"name": "onCanPlay",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1482,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCanPlay"
							}
						},
						{
							"id": 610,
							"name": "onCanPlayCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1483,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCanPlayCapture"
							}
						},
						{
							"id": 611,
							"name": "onCanPlayThrough",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1484,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCanPlayThrough"
							}
						},
						{
							"id": 612,
							"name": "onCanPlayThroughCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1485,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCanPlayThroughCapture"
							}
						},
						{
							"id": 613,
							"name": "onChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1450,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onChange"
							}
						},
						{
							"id": 614,
							"name": "onChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1451,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onChangeCapture"
							}
						},
						{
							"id": 615,
							"name": "onClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1530,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onClick"
							}
						},
						{
							"id": 616,
							"name": "onClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1531,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onClickCapture"
							}
						},
						{
							"id": 617,
							"name": "onCompositionEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1436,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionEnd"
							}
						},
						{
							"id": 618,
							"name": "onCompositionEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1437,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionEndCapture"
							}
						},
						{
							"id": 619,
							"name": "onCompositionStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1438,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionStart"
							}
						},
						{
							"id": 620,
							"name": "onCompositionStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1439,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionStartCapture"
							}
						},
						{
							"id": 621,
							"name": "onCompositionUpdate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1440,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionUpdate"
							}
						},
						{
							"id": 622,
							"name": "onCompositionUpdateCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1441,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCompositionUpdateCapture"
							}
						},
						{
							"id": 623,
							"name": "onContextMenu",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1532,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onContextMenu"
							}
						},
						{
							"id": 624,
							"name": "onContextMenuCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1533,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onContextMenuCapture"
							}
						},
						{
							"id": 625,
							"name": "onCopy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1428,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCopy"
							}
						},
						{
							"id": 626,
							"name": "onCopyCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1429,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCopyCapture"
							}
						},
						{
							"id": 627,
							"name": "onCut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1430,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCut"
							}
						},
						{
							"id": 628,
							"name": "onCutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1431,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onCutCapture"
							}
						},
						{
							"id": 629,
							"name": "onDoubleClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1534,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDoubleClick"
							}
						},
						{
							"id": 630,
							"name": "onDoubleClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1535,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDoubleClickCapture"
							}
						},
						{
							"id": 631,
							"name": "onDrag",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1536,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDrag"
							}
						},
						{
							"id": 632,
							"name": "onDragCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1537,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragCapture"
							}
						},
						{
							"id": 633,
							"name": "onDragEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1538,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragEnd"
							}
						},
						{
							"id": 634,
							"name": "onDragEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1539,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragEndCapture"
							}
						},
						{
							"id": 635,
							"name": "onDragEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1540,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragEnter"
							}
						},
						{
							"id": 636,
							"name": "onDragEnterCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1541,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragEnterCapture"
							}
						},
						{
							"id": 637,
							"name": "onDragExit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1542,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragExit"
							}
						},
						{
							"id": 638,
							"name": "onDragExitCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1543,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragExitCapture"
							}
						},
						{
							"id": 639,
							"name": "onDragLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1544,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragLeave"
							}
						},
						{
							"id": 640,
							"name": "onDragLeaveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1545,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragLeaveCapture"
							}
						},
						{
							"id": 641,
							"name": "onDragOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1546,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragOver"
							}
						},
						{
							"id": 642,
							"name": "onDragOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1547,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragOverCapture"
							}
						},
						{
							"id": 643,
							"name": "onDragStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1548,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragStart"
							}
						},
						{
							"id": 644,
							"name": "onDragStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1549,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDragStartCapture"
							}
						},
						{
							"id": 645,
							"name": "onDrop",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1550,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDrop"
							}
						},
						{
							"id": 646,
							"name": "onDropCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1551,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDropCapture"
							}
						},
						{
							"id": 647,
							"name": "onDurationChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1486,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDurationChange"
							}
						},
						{
							"id": 648,
							"name": "onDurationChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1487,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onDurationChangeCapture"
							}
						},
						{
							"id": 649,
							"name": "onEmptied",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1488,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEmptied"
							}
						},
						{
							"id": 650,
							"name": "onEmptiedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1489,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEmptiedCapture"
							}
						},
						{
							"id": 651,
							"name": "onEncrypted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1490,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEncrypted"
							}
						},
						{
							"id": 652,
							"name": "onEncryptedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1491,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEncryptedCapture"
							}
						},
						{
							"id": 653,
							"name": "onEnded",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1492,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEnded"
							}
						},
						{
							"id": 654,
							"name": "onEndedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1493,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onEndedCapture"
							}
						},
						{
							"id": 655,
							"name": "onError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1466,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onError"
							}
						},
						{
							"id": 656,
							"name": "onErrorCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1467,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onErrorCapture"
							}
						},
						{
							"id": 657,
							"name": "onFocus",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1444,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onFocus"
							}
						},
						{
							"id": 658,
							"name": "onFocusCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1445,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onFocusCapture"
							}
						},
						{
							"id": 659,
							"name": "onGotPointerCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1596,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onGotPointerCapture"
							}
						},
						{
							"id": 660,
							"name": "onGotPointerCaptureCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1597,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onGotPointerCaptureCapture"
							}
						},
						{
							"id": 661,
							"name": "onInput",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1454,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onInput"
							}
						},
						{
							"id": 662,
							"name": "onInputCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1455,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onInputCapture"
							}
						},
						{
							"id": 663,
							"name": "onInvalid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1460,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onInvalid"
							}
						},
						{
							"id": 664,
							"name": "onInvalidCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1461,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onInvalidCapture"
							}
						},
						{
							"id": 665,
							"name": "onKeyDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1470,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyDown"
							}
						},
						{
							"id": 666,
							"name": "onKeyDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1471,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyDownCapture"
							}
						},
						{
							"id": 667,
							"name": "onKeyPress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1473,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyPress"
							}
						},
						{
							"id": 668,
							"name": "onKeyPressCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1475,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyPressCapture"
							}
						},
						{
							"id": 669,
							"name": "onKeyUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1476,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyUp"
							}
						},
						{
							"id": 670,
							"name": "onKeyUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1477,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onKeyUpCapture"
							}
						},
						{
							"id": 671,
							"name": "onLoad",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1464,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoad"
							}
						},
						{
							"id": 672,
							"name": "onLoadCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1465,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadCapture"
							}
						},
						{
							"id": 673,
							"name": "onLoadStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1498,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadStart"
							}
						},
						{
							"id": 674,
							"name": "onLoadStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1499,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadStartCapture"
							}
						},
						{
							"id": 675,
							"name": "onLoadedData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1494,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadedData"
							}
						},
						{
							"id": 676,
							"name": "onLoadedDataCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1495,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadedDataCapture"
							}
						},
						{
							"id": 677,
							"name": "onLoadedMetadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1496,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadedMetadata"
							}
						},
						{
							"id": 678,
							"name": "onLoadedMetadataCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1497,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLoadedMetadataCapture"
							}
						},
						{
							"id": 679,
							"name": "onLostPointerCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1598,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLostPointerCapture"
							}
						},
						{
							"id": 680,
							"name": "onLostPointerCaptureCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1599,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onLostPointerCaptureCapture"
							}
						},
						{
							"id": 681,
							"name": "onMouseDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1552,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseDown"
							}
						},
						{
							"id": 682,
							"name": "onMouseDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1553,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseDownCapture"
							}
						},
						{
							"id": 683,
							"name": "onMouseEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1554,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseEnter"
							}
						},
						{
							"id": 684,
							"name": "onMouseLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1555,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseLeave"
							}
						},
						{
							"id": 685,
							"name": "onMouseMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1556,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseMove"
							}
						},
						{
							"id": 686,
							"name": "onMouseMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1557,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseMoveCapture"
							}
						},
						{
							"id": 687,
							"name": "onMouseOut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1558,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseOut"
							}
						},
						{
							"id": 688,
							"name": "onMouseOutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1559,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseOutCapture"
							}
						},
						{
							"id": 689,
							"name": "onMouseOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1560,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseOver"
							}
						},
						{
							"id": 690,
							"name": "onMouseOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1561,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseOverCapture"
							}
						},
						{
							"id": 691,
							"name": "onMouseUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1562,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseUp"
							}
						},
						{
							"id": 692,
							"name": "onMouseUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1563,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onMouseUpCapture"
							}
						},
						{
							"id": 693,
							"name": "onPaste",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1432,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPaste"
							}
						},
						{
							"id": 694,
							"name": "onPasteCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1433,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPasteCapture"
							}
						},
						{
							"id": 695,
							"name": "onPause",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1500,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPause"
							}
						},
						{
							"id": 696,
							"name": "onPauseCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1501,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPauseCapture"
							}
						},
						{
							"id": 697,
							"name": "onPlay",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1502,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPlay"
							}
						},
						{
							"id": 698,
							"name": "onPlayCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1503,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPlayCapture"
							}
						},
						{
							"id": 699,
							"name": "onPlaying",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1504,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPlaying"
							}
						},
						{
							"id": 700,
							"name": "onPlayingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1505,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPlayingCapture"
							}
						},
						{
							"id": 701,
							"name": "onPointerCancel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1586,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerCancel"
							}
						},
						{
							"id": 702,
							"name": "onPointerCancelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1587,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerCancelCapture"
							}
						},
						{
							"id": 703,
							"name": "onPointerDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1580,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerDown"
							}
						},
						{
							"id": 704,
							"name": "onPointerDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1581,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerDownCapture"
							}
						},
						{
							"id": 705,
							"name": "onPointerEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1588,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerEnter"
							}
						},
						{
							"id": 706,
							"name": "onPointerEnterCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1589,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerEnterCapture"
							}
						},
						{
							"id": 707,
							"name": "onPointerLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1590,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerLeave"
							}
						},
						{
							"id": 708,
							"name": "onPointerLeaveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1591,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerLeaveCapture"
							}
						},
						{
							"id": 709,
							"name": "onPointerMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1582,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerMove"
							}
						},
						{
							"id": 710,
							"name": "onPointerMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1583,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerMoveCapture"
							}
						},
						{
							"id": 711,
							"name": "onPointerOut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1594,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerOut"
							}
						},
						{
							"id": 712,
							"name": "onPointerOutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1595,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerOutCapture"
							}
						},
						{
							"id": 713,
							"name": "onPointerOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1592,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerOver"
							}
						},
						{
							"id": 714,
							"name": "onPointerOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1593,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerOverCapture"
							}
						},
						{
							"id": 715,
							"name": "onPointerUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1584,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerUp"
							}
						},
						{
							"id": 716,
							"name": "onPointerUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1585,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onPointerUpCapture"
							}
						},
						{
							"id": 717,
							"name": "onProgress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1506,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onProgress"
							}
						},
						{
							"id": 718,
							"name": "onProgressCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1507,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onProgressCapture"
							}
						},
						{
							"id": 719,
							"name": "onRateChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1508,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onRateChange"
							}
						},
						{
							"id": 720,
							"name": "onRateChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1509,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onRateChangeCapture"
							}
						},
						{
							"id": 721,
							"name": "onReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1456,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onReset"
							}
						},
						{
							"id": 722,
							"name": "onResetCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1457,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onResetCapture"
							}
						},
						{
							"id": 723,
							"name": "onResize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1510,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onResize"
							}
						},
						{
							"id": 724,
							"name": "onResizeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1511,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onResizeCapture"
							}
						},
						{
							"id": 725,
							"name": "onScroll",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1602,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.UIEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "UIEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.UIEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onScroll"
							}
						},
						{
							"id": 726,
							"name": "onScrollCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1603,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.UIEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "UIEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.UIEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onScrollCapture"
							}
						},
						{
							"id": 727,
							"name": "onSeeked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1512,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSeeked"
							}
						},
						{
							"id": 728,
							"name": "onSeekedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1513,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSeekedCapture"
							}
						},
						{
							"id": 729,
							"name": "onSeeking",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1514,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSeeking"
							}
						},
						{
							"id": 730,
							"name": "onSeekingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1515,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSeekingCapture"
							}
						},
						{
							"id": 731,
							"name": "onSelect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1566,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSelect"
							}
						},
						{
							"id": 732,
							"name": "onSelectCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1567,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSelectCapture"
							}
						},
						{
							"id": 733,
							"name": "onStalled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1516,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onStalled"
							}
						},
						{
							"id": 734,
							"name": "onStalledCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1517,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onStalledCapture"
							}
						},
						{
							"id": 735,
							"name": "onSubmit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A function to call when the form is submitted. If you call\n"
									},
									{
										"kind": "code",
										"text": "`event.preventDefault()`"
									},
									{
										"kind": "text",
										"text": " then this form will not do anything."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 954,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L954"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSubmit"
							}
						},
						{
							"id": 736,
							"name": "onSubmitCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1459,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSubmitCapture"
							}
						},
						{
							"id": 737,
							"name": "onSuspend",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1518,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSuspend"
							}
						},
						{
							"id": 738,
							"name": "onSuspendCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1519,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onSuspendCapture"
							}
						},
						{
							"id": 739,
							"name": "onTimeUpdate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1520,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTimeUpdate"
							}
						},
						{
							"id": 740,
							"name": "onTimeUpdateCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1521,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTimeUpdateCapture"
							}
						},
						{
							"id": 741,
							"name": "onTouchCancel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1570,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchCancel"
							}
						},
						{
							"id": 742,
							"name": "onTouchCancelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1571,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchCancelCapture"
							}
						},
						{
							"id": 743,
							"name": "onTouchEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1572,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchEnd"
							}
						},
						{
							"id": 744,
							"name": "onTouchEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1573,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchEndCapture"
							}
						},
						{
							"id": 745,
							"name": "onTouchMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1574,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchMove"
							}
						},
						{
							"id": 746,
							"name": "onTouchMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1575,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchMoveCapture"
							}
						},
						{
							"id": 747,
							"name": "onTouchStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1576,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchStart"
							}
						},
						{
							"id": 748,
							"name": "onTouchStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1577,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTouchStartCapture"
							}
						},
						{
							"id": 749,
							"name": "onTransitionEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1618,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TransitionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TransitionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TransitionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTransitionEnd"
							}
						},
						{
							"id": 750,
							"name": "onTransitionEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1619,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TransitionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "TransitionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TransitionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onTransitionEndCapture"
							}
						},
						{
							"id": 751,
							"name": "onVolumeChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1522,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onVolumeChange"
							}
						},
						{
							"id": 752,
							"name": "onVolumeChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1523,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onVolumeChangeCapture"
							}
						},
						{
							"id": 753,
							"name": "onWaiting",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1524,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onWaiting"
							}
						},
						{
							"id": 754,
							"name": "onWaitingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1525,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onWaitingCapture"
							}
						},
						{
							"id": 755,
							"name": "onWheel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1606,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.WheelEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "WheelEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.WheelEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onWheel"
							}
						},
						{
							"id": 756,
							"name": "onWheelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1607,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.WheelEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLFormElement"
										},
										"name": "HTMLFormElement",
										"package": "typescript"
									}
								],
								"name": "WheelEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.WheelEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.onWheelCapture"
							}
						},
						{
							"id": 757,
							"name": "placeholder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1938,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.placeholder"
							}
						},
						{
							"id": 758,
							"name": "prefix",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1957,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.prefix"
							}
						},
						{
							"id": 759,
							"name": "preventScrollReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prevent the scroll position from resetting to the top of the viewport on\ncompletion of the navigation when using the <ScrollRestoration> component"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 948,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L948"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.preventScrollReset"
							}
						},
						{
							"id": 760,
							"name": "property",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1958,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.property"
							}
						},
						{
							"id": 761,
							"name": "radioGroup",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1947,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.radioGroup"
							}
						},
						{
							"id": 762,
							"name": "rel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1959,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.rel"
							}
						},
						{
							"id": 763,
							"name": "relative",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether the form action is relative to the route hierarchy or\nthe pathname.  Use this if you want to opt out of navigating the route\nhierarchy and want to instead route based on /-delimited URL segments"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 942,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L942"
								}
							],
							"type": {
								"type": "reference",
								"target": 2192,
								"name": "RelativeRoutingType",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.relative"
							}
						},
						{
							"id": 764,
							"name": "reloadDocument",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Forces a full document navigation instead of client side routing + data\nfetch."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 989,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L989"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 765,
							"name": "replace",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replaces the current entry in the browser history stack when the form\nnavigates. Use this if you don't want the user to be able to click \"back\"\nto the page with the form on it."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 996,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L996"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 766,
							"name": "resource",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1960,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.resource"
							}
						},
						{
							"id": 767,
							"name": "results",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1975,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.results"
							}
						},
						{
							"id": 768,
							"name": "rev",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1961,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.rev"
							}
						},
						{
							"id": 769,
							"name": "role",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1950,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AriaRole"
								},
								"name": "AriaRole",
								"package": "@types/react",
								"qualifiedName": "React.AriaRole"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.role"
							}
						},
						{
							"id": 770,
							"name": "security",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1976,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.security"
							}
						},
						{
							"id": 771,
							"name": "slot",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1939,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.slot"
							}
						},
						{
							"id": 772,
							"name": "spellCheck",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1940,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.spellCheck"
							}
						},
						{
							"id": 773,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "State object to add to the history stack entry for this navigation"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1001,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1001"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 774,
							"name": "style",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1941,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CSSProperties"
								},
								"name": "CSSProperties",
								"package": "@types/react",
								"qualifiedName": "React.CSSProperties"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.style"
							}
						},
						{
							"id": 775,
							"name": "suppressContentEditableWarning",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1923,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.suppressContentEditableWarning"
							}
						},
						{
							"id": 776,
							"name": "suppressHydrationWarning",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1924,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.suppressHydrationWarning"
							}
						},
						{
							"id": 777,
							"name": "tabIndex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1942,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.tabIndex"
							}
						},
						{
							"id": 778,
							"name": "target",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2237,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.target"
							}
						},
						{
							"id": 779,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1943,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.title"
							}
						},
						{
							"id": 780,
							"name": "translate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1944,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "yes"
									},
									{
										"type": "literal",
										"value": "no"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.translate"
							}
						},
						{
							"id": 781,
							"name": "typeof",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1962,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.typeof"
							}
						},
						{
							"id": 782,
							"name": "unselectable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1977,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "on"
									},
									{
										"type": "literal",
										"value": "off"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.unselectable"
							}
						},
						{
							"id": 783,
							"name": "unstable_viewTransition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enables a [View\nTransition](https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API)\nfor this navigation. To apply specific styles during the transition see\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "unstable_useViewTransitionState",
										"target": 2564
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1009,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1009"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 784,
							"name": "vocab",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1963,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "SharedFormProps.vocab"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								500,
								501,
								502,
								503,
								504,
								505,
								506,
								507,
								508,
								509,
								510,
								511,
								512,
								513,
								514,
								515,
								516,
								517,
								518,
								519,
								520,
								521,
								522,
								523,
								524,
								525,
								526,
								527,
								528,
								529,
								530,
								531,
								532,
								533,
								534,
								535,
								536,
								537,
								538,
								539,
								540,
								541,
								542,
								543,
								544,
								545,
								546,
								547,
								548,
								549,
								550,
								551,
								552,
								553,
								554,
								555,
								556,
								557,
								558,
								559,
								560,
								561,
								562,
								563,
								564,
								565,
								566,
								567,
								568,
								571,
								572,
								573,
								574,
								575,
								576,
								577,
								578,
								579,
								580,
								581,
								582,
								583,
								584,
								585,
								586,
								587,
								588,
								589,
								590,
								591,
								592,
								593,
								594,
								595,
								596,
								597,
								598,
								599,
								600,
								601,
								602,
								603,
								604,
								605,
								606,
								607,
								608,
								609,
								610,
								611,
								612,
								613,
								614,
								615,
								616,
								617,
								618,
								619,
								620,
								621,
								622,
								623,
								624,
								625,
								626,
								627,
								628,
								629,
								630,
								631,
								632,
								633,
								634,
								635,
								636,
								637,
								638,
								639,
								640,
								641,
								642,
								643,
								644,
								645,
								646,
								647,
								648,
								649,
								650,
								651,
								652,
								653,
								654,
								655,
								656,
								657,
								658,
								659,
								660,
								661,
								662,
								663,
								664,
								665,
								666,
								667,
								668,
								669,
								670,
								671,
								672,
								673,
								674,
								675,
								676,
								677,
								678,
								679,
								680,
								681,
								682,
								683,
								684,
								685,
								686,
								687,
								688,
								689,
								690,
								691,
								692,
								693,
								694,
								695,
								696,
								697,
								698,
								699,
								700,
								701,
								702,
								703,
								704,
								705,
								706,
								707,
								708,
								709,
								710,
								711,
								712,
								713,
								714,
								715,
								716,
								717,
								718,
								719,
								720,
								721,
								722,
								723,
								724,
								725,
								726,
								727,
								728,
								729,
								730,
								731,
								732,
								733,
								734,
								735,
								736,
								737,
								738,
								739,
								740,
								741,
								742,
								743,
								744,
								745,
								746,
								747,
								748,
								749,
								750,
								751,
								752,
								753,
								754,
								755,
								756,
								757,
								758,
								759,
								760,
								761,
								762,
								763,
								764,
								765,
								766,
								767,
								768,
								769,
								770,
								771,
								772,
								773,
								774,
								775,
								776,
								777,
								778,
								779,
								780,
								781,
								782,
								783,
								784
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 967,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L967"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
								"qualifiedName": "SharedFormProps"
							},
							"name": "SharedFormProps",
							"package": "react-router"
						}
					]
				},
				{
					"id": 785,
					"name": "GetScrollPositionFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Function signature for determining the current scroll position"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 444,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L444"
						}
					],
					"signatures": [
						{
							"id": 786,
							"name": "GetScrollPositionFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 445,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L445"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 787,
					"name": "GetScrollRestorationKeyFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Function signature for determining the key to be used in scroll restoration\nfor a given location"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 437,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L437"
						}
					],
					"signatures": [
						{
							"id": 788,
							"name": "GetScrollRestorationKeyFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 438,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L438"
								}
							],
							"parameters": [
								{
									"id": 789,
									"name": "location",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1175,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Location",
										"package": "react-router"
									}
								},
								{
									"id": 790,
									"name": "matches",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1906,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "unknown"
												},
												{
													"type": "intrinsic",
													"name": "unknown"
												}
											],
											"name": "UIMatch",
											"package": "react-router"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 791,
					"name": "HandleDataRequestFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/build.ts",
							"line": 36,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/build.ts#L36"
						}
					],
					"signatures": [
						{
							"id": 792,
							"name": "HandleDataRequestFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/build.ts#L37"
								}
							],
							"parameters": [
								{
									"id": 793,
									"name": "response",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Response"
										},
										"name": "Response",
										"package": "typescript"
									}
								},
								{
									"id": 794,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
													"qualifiedName": "ActionFunctionArgs"
												},
												"name": "ActionFunctionArgs",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
													"qualifiedName": "LoaderFunctionArgs"
												},
												"name": "LoaderFunctionArgs",
												"package": "react-router"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Response"
										},
										"name": "Response",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Response"
												},
												"name": "Response",
												"package": "typescript"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				},
				{
					"id": 795,
					"name": "HandleDocumentRequestFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/build.ts",
							"line": 26,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/build.ts#L26"
						}
					],
					"signatures": [
						{
							"id": 796,
							"name": "HandleDocumentRequestFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/build.ts#L27"
								}
							],
							"parameters": [
								{
									"id": 797,
									"name": "request",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Request"
										},
										"name": "Request",
										"package": "typescript"
									}
								},
								{
									"id": 798,
									"name": "responseStatusCode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 799,
									"name": "responseHeaders",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Headers"
										},
										"name": "Headers",
										"package": "typescript"
									}
								},
								{
									"id": 800,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 186,
										"name": "EntryContext",
										"package": "react-router"
									}
								},
								{
									"id": 801,
									"name": "loadContext",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 139,
										"name": "AppLoadContext",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Response"
										},
										"name": "Response",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Response"
												},
												"name": "Response",
												"package": "typescript"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				},
				{
					"id": 802,
					"name": "HandleErrorFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/build.ts",
							"line": 42,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/build.ts#L42"
						}
					],
					"signatures": [
						{
							"id": 803,
							"name": "HandleErrorFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 43,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/build.ts#L43"
								}
							],
							"parameters": [
								{
									"id": 804,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 805,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
													"qualifiedName": "ActionFunctionArgs"
												},
												"name": "ActionFunctionArgs",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
													"qualifiedName": "LoaderFunctionArgs"
												},
												"name": "LoaderFunctionArgs",
												"package": "react-router"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 806,
					"name": "HashRouterProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 807,
							"name": "basename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 288,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L288"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 808,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 289,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L289"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 809,
							"name": "window",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 290,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L290"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Window"
								},
								"name": "Window",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								807,
								808,
								809
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 287,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L287"
						}
					]
				},
				{
					"id": 810,
					"name": "HeadersFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that returns HTTP headers to be used for a route. These headers\nwill be merged with (and take precedence over) headers from parent routes."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
							"line": 109,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/routeModules.ts#L109"
						}
					],
					"signatures": [
						{
							"id": 811,
							"name": "HeadersFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
									"line": 110,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/routeModules.ts#L110"
								}
							],
							"parameters": [
								{
									"id": 812,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2070,
										"name": "HeadersArgs",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HeadersInit"
								},
								"name": "HeadersInit",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 813,
					"name": "HistoryRouterProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 814,
							"name": "basename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 334,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L334"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 815,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 335,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L335"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 816,
							"name": "history",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 336,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L336"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/history.ts",
									"qualifiedName": "History"
								},
								"name": "History",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								814,
								815,
								816
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 333,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L333"
						}
					]
				},
				{
					"id": 817,
					"name": "IndexRouteObject",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 818,
							"name": "Component",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L37"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 819,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 820,
							"name": "ErrorBoundary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L39"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 821,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 822,
							"name": "HydrateFallback",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L38"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 823,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 824,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L28"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 129,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ActionFunction",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 825,
							"name": "caseSensitive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L24"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 826,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L33"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 827,
							"name": "element",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L34"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 828,
							"name": "errorElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 36,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L36"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 829,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 31,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L31"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 830,
							"name": "hasErrorBoundary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L29"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 831,
							"name": "hydrateFallbackElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L35"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 832,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 26,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L26"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 833,
							"name": "index",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 32,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L32"
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						},
						{
							"id": 834,
							"name": "lazy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L40"
								}
							],
							"type": {
								"type": "reference",
								"target": 880,
								"typeArguments": [
									{
										"type": "reference",
										"target": 2199,
										"name": "RouteObject",
										"package": "react-router"
									}
								],
								"name": "LazyRouteFunction",
								"package": "react-router"
							}
						},
						{
							"id": 835,
							"name": "loader",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L27"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 2096,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "LoaderFunction",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 836,
							"name": "path",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L25"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 837,
							"name": "shouldRevalidate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L30"
								}
							],
							"type": {
								"type": "reference",
								"target": 1835,
								"name": "ShouldRevalidateFunction",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								818,
								820,
								822,
								824,
								825,
								826,
								827,
								828,
								829,
								830,
								831,
								832,
								833,
								834,
								835,
								836,
								837
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 23,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L23"
						}
					]
				},
				{
					"id": 838,
					"name": "IndexRouteProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 839,
							"name": "Component",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 668,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L668"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 840,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 841,
							"name": "ErrorBoundary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 670,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L670"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 842,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 843,
							"name": "HydrateFallback",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 669,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L669"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 844,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 845,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 659,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L659"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 129,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ActionFunction",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 846,
							"name": "caseSensitive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 654,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L654"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 847,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 664,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L664"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 848,
							"name": "element",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 665,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L665"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 849,
							"name": "errorElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 667,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L667"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 850,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 662,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L662"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 851,
							"name": "hasErrorBoundary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 660,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L660"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 852,
							"name": "hydrateFallbackElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 666,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L666"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 853,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 656,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L656"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 854,
							"name": "index",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 663,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L663"
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						},
						{
							"id": 855,
							"name": "lazy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 657,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L657"
								}
							],
							"type": {
								"type": "reference",
								"target": 880,
								"typeArguments": [
									{
										"type": "reference",
										"target": 817,
										"name": "IndexRouteObject",
										"package": "react-router"
									}
								],
								"name": "LazyRouteFunction",
								"package": "react-router"
							}
						},
						{
							"id": 856,
							"name": "loader",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 658,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L658"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 2096,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "LoaderFunction",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 857,
							"name": "path",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 655,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L655"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 858,
							"name": "shouldRevalidate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 661,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L661"
								}
							],
							"type": {
								"type": "reference",
								"target": 1835,
								"name": "ShouldRevalidateFunction",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								839,
								841,
								843,
								845,
								846,
								847,
								848,
								849,
								850,
								851,
								852,
								853,
								854,
								855,
								856,
								857,
								858
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 653,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L653"
						}
					]
				},
				{
					"id": 859,
					"name": "LayoutRouteProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 860,
							"name": "Component",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 640,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L640"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 861,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1584,
								"name": "PathRouteProps.Component"
							}
						},
						{
							"id": 862,
							"name": "ErrorBoundary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 642,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L642"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 863,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1586,
								"name": "PathRouteProps.ErrorBoundary"
							}
						},
						{
							"id": 864,
							"name": "HydrateFallback",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 641,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L641"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 865,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1588,
								"name": "PathRouteProps.HydrateFallback"
							}
						},
						{
							"id": 866,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 631,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L631"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 129,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ActionFunction",
										"package": "react-router"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1590,
								"name": "PathRouteProps.action"
							}
						},
						{
							"id": 867,
							"name": "caseSensitive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 626,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L626"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1591,
								"name": "PathRouteProps.caseSensitive"
							}
						},
						{
							"id": 868,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 636,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L636"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1592,
								"name": "PathRouteProps.children"
							}
						},
						{
							"id": 869,
							"name": "element",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 637,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L637"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1593,
								"name": "PathRouteProps.element"
							}
						},
						{
							"id": 870,
							"name": "errorElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 639,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L639"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1594,
								"name": "PathRouteProps.errorElement"
							}
						},
						{
							"id": 871,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 634,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L634"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1595,
								"name": "PathRouteProps.handle"
							}
						},
						{
							"id": 872,
							"name": "hasErrorBoundary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 632,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L632"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1596,
								"name": "PathRouteProps.hasErrorBoundary"
							}
						},
						{
							"id": 873,
							"name": "hydrateFallbackElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 638,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L638"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1597,
								"name": "PathRouteProps.hydrateFallbackElement"
							}
						},
						{
							"id": 874,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 628,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L628"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1598,
								"name": "PathRouteProps.id"
							}
						},
						{
							"id": 875,
							"name": "index",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 635,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L635"
								}
							],
							"type": {
								"type": "literal",
								"value": false
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1599,
								"name": "PathRouteProps.index"
							}
						},
						{
							"id": 876,
							"name": "lazy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 629,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L629"
								}
							],
							"type": {
								"type": "reference",
								"target": 880,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1537,
										"name": "NonIndexRouteObject",
										"package": "react-router"
									}
								],
								"name": "LazyRouteFunction",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1600,
								"name": "PathRouteProps.lazy"
							}
						},
						{
							"id": 877,
							"name": "loader",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 630,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L630"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 2096,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "LoaderFunction",
										"package": "react-router"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1601,
								"name": "PathRouteProps.loader"
							}
						},
						{
							"id": 878,
							"name": "path",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 627,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L627"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1602,
								"name": "PathRouteProps.path"
							}
						},
						{
							"id": 879,
							"name": "shouldRevalidate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 633,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L633"
								}
							],
							"type": {
								"type": "reference",
								"target": 1835,
								"name": "ShouldRevalidateFunction",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1603,
								"name": "PathRouteProps.shouldRevalidate"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								860,
								862,
								864,
								866,
								867,
								868,
								869,
								870,
								871,
								872,
								873,
								874,
								875,
								876,
								877,
								878,
								879
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 648,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L648"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1583,
							"name": "PathRouteProps",
							"package": "react-router"
						}
					]
				},
				{
					"id": 880,
					"name": "LazyRouteFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "lazy() function to load a route definition, which can add non-matching\nrelated properties to a route"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 279,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L279"
						}
					],
					"typeParameters": [
						{
							"id": 881,
							"name": "R",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "AgnosticRouteObject"
								},
								"name": "AgnosticRouteObject",
								"package": "react-router"
							}
						}
					],
					"signatures": [
						{
							"id": 882,
							"name": "LazyRouteFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 280,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L280"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Exclude"
										},
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Exclude"
													},
													"typeArguments": [
														{
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "reference",
																"target": 881,
																"name": "R",
																"package": "react-router",
																"qualifiedName": "LazyRouteFunction.R",
																"refersToTypeParameter": true
															}
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "packages/react-router/lib/router/utils.ts",
																"qualifiedName": "ImmutableRouteKey"
															},
															"name": "ImmutableRouteKey",
															"package": "react-router"
														}
													],
													"name": "Exclude",
													"package": "typescript"
												},
												"objectType": {
													"type": "mapped",
													"parameter": "K",
													"parameterType": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													},
													"templateType": {
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": {
																"sourceFileName": "packages/react-router/lib/router/utils.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "react-router",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "reference",
															"target": {
																"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Exclude"
															},
															"typeArguments": [
																{
																	"type": "typeOperator",
																	"operator": "keyof",
																	"target": {
																		"type": "reference",
																		"target": 881,
																		"name": "R",
																		"package": "react-router",
																		"qualifiedName": "LazyRouteFunction.R",
																		"refersToTypeParameter": true
																	}
																},
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "packages/react-router/lib/router/utils.ts",
																		"qualifiedName": "ImmutableRouteKey"
																	},
																	"name": "ImmutableRouteKey",
																	"package": "react-router"
																}
															],
															"name": "Exclude",
															"package": "typescript"
														},
														"trueType": {
															"type": "intersection",
															"types": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Omit"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Omit"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": 881,
																					"name": "R",
																					"package": "react-router",
																					"qualifiedName": "LazyRouteFunction.R",
																					"refersToTypeParameter": true
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "packages/react-router/lib/router/utils.ts",
																						"qualifiedName": "ImmutableRouteKey"
																					},
																					"name": "ImmutableRouteKey",
																					"package": "react-router"
																				}
																			],
																			"name": "Omit",
																			"package": "typescript"
																		},
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "packages/react-router/lib/router/utils.ts",
																				"qualifiedName": "K"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "packages/react-router/lib/router/utils.ts",
																						"qualifiedName": "K"
																					},
																					"name": "K",
																					"package": "react-router",
																					"refersToTypeParameter": true
																				}
																			],
																			"name": "K",
																			"package": "react-router",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "Omit",
																	"package": "typescript"
																},
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Required"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Pick"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Omit"
																					},
																					"typeArguments": [
																						{
																							"type": "reference",
																							"target": 881,
																							"name": "R",
																							"package": "react-router",
																							"qualifiedName": "LazyRouteFunction.R",
																							"refersToTypeParameter": true
																						},
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "packages/react-router/lib/router/utils.ts",
																								"qualifiedName": "ImmutableRouteKey"
																							},
																							"name": "ImmutableRouteKey",
																							"package": "react-router"
																						}
																					],
																					"name": "Omit",
																					"package": "typescript"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "packages/react-router/lib/router/utils.ts",
																						"qualifiedName": "K"
																					},
																					"typeArguments": [
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "packages/react-router/lib/router/utils.ts",
																								"qualifiedName": "K"
																							},
																							"name": "K",
																							"package": "react-router",
																							"refersToTypeParameter": true
																						}
																					],
																					"name": "K",
																					"package": "react-router",
																					"refersToTypeParameter": true
																				}
																			],
																			"name": "Pick",
																			"package": "typescript"
																		}
																	],
																	"name": "Required",
																	"package": "typescript"
																}
															]
														},
														"falseType": {
															"type": "intrinsic",
															"name": "never"
														}
													}
												}
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										],
										"name": "Exclude",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 883,
					"name": "LinkProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 884,
							"name": "about",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1953,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.about"
							}
						},
						{
							"id": 885,
							"name": "accessKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1927,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.accessKey"
							}
						},
						{
							"id": 886,
							"name": "aria-activedescendant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1636,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-activedescendant"
							}
						},
						{
							"id": 887,
							"name": "aria-atomic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1638,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-atomic"
							}
						},
						{
							"id": 888,
							"name": "aria-autocomplete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1643,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "list"
									},
									{
										"type": "literal",
										"value": "inline"
									},
									{
										"type": "literal",
										"value": "both"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-autocomplete"
							}
						},
						{
							"id": 889,
							"name": "aria-braillelabel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that labels the current element, which is intended to be converted into Braille."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-label."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1649,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-braillelabel"
							}
						},
						{
							"id": 890,
							"name": "aria-brailleroledescription",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-roledescription."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1654,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-brailleroledescription"
							}
						},
						{
							"id": 891,
							"name": "aria-busy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1655,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-busy"
							}
						},
						{
							"id": 892,
							"name": "aria-checked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-pressed"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-selected."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1660,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "mixed"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-checked"
							}
						},
						{
							"id": 893,
							"name": "aria-colcount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the total number of columns in a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-colindex."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1665,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-colcount"
							}
						},
						{
							"id": 894,
							"name": "aria-colindex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colcount"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1670,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-colindex"
							}
						},
						{
							"id": 895,
							"name": "aria-colindextext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human readable text alternative of aria-colindex."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-rowindextext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1675,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-colindextext"
							}
						},
						{
							"id": 896,
							"name": "aria-colspan",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colindex"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1680,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-colspan"
							}
						},
						{
							"id": 897,
							"name": "aria-controls",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-owns."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1685,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-controls"
							}
						},
						{
							"id": 898,
							"name": "aria-current",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the element that represents the current item within a container or set of related elements."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1687,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "time"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "location"
									},
									{
										"type": "literal",
										"value": "page"
									},
									{
										"type": "literal",
										"value": "step"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "date"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-current"
							}
						},
						{
							"id": 899,
							"name": "aria-describedby",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) that describes the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-labelledby"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1692,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-describedby"
							}
						},
						{
							"id": 900,
							"name": "aria-description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that describes or annotates the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "related aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1697,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-description"
							}
						},
						{
							"id": 901,
							"name": "aria-details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element that provides a detailed, extended description for the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1702,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-details"
							}
						},
						{
							"id": 902,
							"name": "aria-disabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-hidden"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-readonly."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1707,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-disabled"
							}
						},
						{
							"id": 903,
							"name": "aria-dropeffect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates what functions can be performed when a dragged object is released on the drop target."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in ARIA 1.1"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1712,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "link"
									},
									{
										"type": "literal",
										"value": "copy"
									},
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "execute"
									},
									{
										"type": "literal",
										"value": "move"
									},
									{
										"type": "literal",
										"value": "popup"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-dropeffect"
							}
						},
						{
							"id": 904,
							"name": "aria-errormessage",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element that provides an error message for the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-invalid"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-describedby."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1717,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-errormessage"
							}
						},
						{
							"id": 905,
							"name": "aria-expanded",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1719,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-expanded"
							}
						},
						{
							"id": 906,
							"name": "aria-flowto",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1724,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-flowto"
							}
						},
						{
							"id": 907,
							"name": "aria-grabbed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in ARIA 1.1"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1729,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-grabbed"
							}
						},
						{
							"id": 908,
							"name": "aria-haspopup",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1731,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "dialog"
									},
									{
										"type": "literal",
										"value": "menu"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "grid"
									},
									{
										"type": "literal",
										"value": "listbox"
									},
									{
										"type": "literal",
										"value": "tree"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-haspopup"
							}
						},
						{
							"id": 909,
							"name": "aria-hidden",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element is exposed to an accessibility API."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-disabled."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1736,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-hidden"
							}
						},
						{
							"id": 910,
							"name": "aria-invalid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the entered value does not conform to the format expected by the application."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-errormessage."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1741,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "grammar"
									},
									{
										"type": "literal",
										"value": "spelling"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-invalid"
							}
						},
						{
							"id": 911,
							"name": "aria-keyshortcuts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1743,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-keyshortcuts"
							}
						},
						{
							"id": 912,
							"name": "aria-label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that labels the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-labelledby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1748,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-label"
							}
						},
						{
							"id": 913,
							"name": "aria-labelledby",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) that labels the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1753,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-labelledby"
							}
						},
						{
							"id": 914,
							"name": "aria-level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the hierarchical level of an element within a structure."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1755,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-level"
							}
						},
						{
							"id": 915,
							"name": "aria-live",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1757,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "off"
									},
									{
										"type": "literal",
										"value": "assertive"
									},
									{
										"type": "literal",
										"value": "polite"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-live"
							}
						},
						{
							"id": 916,
							"name": "aria-modal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether an element is modal when displayed."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1759,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-modal"
							}
						},
						{
							"id": 917,
							"name": "aria-multiline",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether a text box accepts multiple lines of input or only a single line."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1761,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-multiline"
							}
						},
						{
							"id": 918,
							"name": "aria-multiselectable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the user may select more than one item from the current selectable descendants."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1763,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-multiselectable"
							}
						},
						{
							"id": 919,
							"name": "aria-orientation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1765,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "horizontal"
									},
									{
										"type": "literal",
										"value": "vertical"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-orientation"
							}
						},
						{
							"id": 920,
							"name": "aria-owns",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-controls."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1771,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-owns"
							}
						},
						{
							"id": 921,
							"name": "aria-placeholder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1776,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-placeholder"
							}
						},
						{
							"id": 922,
							"name": "aria-posinset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-setsize."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1781,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-posinset"
							}
						},
						{
							"id": 923,
							"name": "aria-pressed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"pressed\" state of toggle buttons."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-checked"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-selected."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1786,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "mixed"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-pressed"
							}
						},
						{
							"id": 924,
							"name": "aria-readonly",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the element is not editable, but is otherwise operable."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-disabled."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1791,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-readonly"
							}
						},
						{
							"id": 925,
							"name": "aria-relevant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-atomic."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1796,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "text"
									},
									{
										"type": "literal",
										"value": "additions"
									},
									{
										"type": "literal",
										"value": "additions removals"
									},
									{
										"type": "literal",
										"value": "additions text"
									},
									{
										"type": "literal",
										"value": "all"
									},
									{
										"type": "literal",
										"value": "removals"
									},
									{
										"type": "literal",
										"value": "removals additions"
									},
									{
										"type": "literal",
										"value": "removals text"
									},
									{
										"type": "literal",
										"value": "text additions"
									},
									{
										"type": "literal",
										"value": "text removals"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-relevant"
							}
						},
						{
							"id": 926,
							"name": "aria-required",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that user input is required on the element before a form may be submitted."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1798,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-required"
							}
						},
						{
							"id": 927,
							"name": "aria-roledescription",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human-readable, author-localized description for the role of an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1800,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-roledescription"
							}
						},
						{
							"id": 928,
							"name": "aria-rowcount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the total number of rows in a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-rowindex."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1805,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-rowcount"
							}
						},
						{
							"id": 929,
							"name": "aria-rowindex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowcount"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1810,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-rowindex"
							}
						},
						{
							"id": 930,
							"name": "aria-rowindextext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human readable text alternative of aria-rowindex."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-colindextext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1815,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-rowindextext"
							}
						},
						{
							"id": 931,
							"name": "aria-rowspan",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowindex"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1820,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-rowspan"
							}
						},
						{
							"id": 932,
							"name": "aria-selected",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"selected\" state of various widgets."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-checked"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-pressed."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1825,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-selected"
							}
						},
						{
							"id": 933,
							"name": "aria-setsize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-posinset."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1830,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-setsize"
							}
						},
						{
							"id": 934,
							"name": "aria-sort",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates if items in a table or grid are sorted in ascending or descending order."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1832,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "ascending"
									},
									{
										"type": "literal",
										"value": "descending"
									},
									{
										"type": "literal",
										"value": "other"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-sort"
							}
						},
						{
							"id": 935,
							"name": "aria-valuemax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the maximum allowed value for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1834,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-valuemax"
							}
						},
						{
							"id": 936,
							"name": "aria-valuemin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the minimum allowed value for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1836,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-valuemin"
							}
						},
						{
							"id": 937,
							"name": "aria-valuenow",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the current value for a range widget."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-valuetext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1841,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-valuenow"
							}
						},
						{
							"id": 938,
							"name": "aria-valuetext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the human readable text alternative of aria-valuenow for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1843,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-valuetext"
							}
						},
						{
							"id": 939,
							"name": "autoCapitalize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1966,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.autoCapitalize"
							}
						},
						{
							"id": 940,
							"name": "autoCorrect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1967,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.autoCorrect"
							}
						},
						{
							"id": 941,
							"name": "autoFocus",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1928,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.autoFocus"
							}
						},
						{
							"id": 942,
							"name": "autoSave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1968,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.autoSave"
							}
						},
						{
							"id": 943,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1420,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.children"
							}
						},
						{
							"id": 944,
							"name": "className",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1929,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.className"
							}
						},
						{
							"id": 945,
							"name": "color",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1969,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.color"
							}
						},
						{
							"id": 946,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1954,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.content"
							}
						},
						{
							"id": 947,
							"name": "contentEditable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1930,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "inherit"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "Booleanish"
										},
										"name": "Booleanish",
										"package": "@types/react"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.contentEditable"
							}
						},
						{
							"id": 948,
							"name": "contextMenu",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1931,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.contextMenu"
							}
						},
						{
							"id": 949,
							"name": "dangerouslySetInnerHTML",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1421,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 950,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 951,
											"name": "__html",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"line": 1424,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/global.d.ts",
															"qualifiedName": "TrustedHTML"
														},
														"name": "TrustedHTML",
														"package": "@types/react"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												951
											]
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 1421,
											"character": 34
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.dangerouslySetInnerHTML"
							}
						},
						{
							"id": 952,
							"name": "datatype",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1955,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.datatype"
							}
						},
						{
							"id": 953,
							"name": "defaultChecked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1921,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.defaultChecked"
							}
						},
						{
							"id": 954,
							"name": "defaultValue",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1922,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.defaultValue"
							}
						},
						{
							"id": 955,
							"name": "dir",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1932,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.dir"
							}
						},
						{
							"id": 956,
							"name": "discover",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the link discovery behavior\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link /> // default (\"render\")\n<Link discover=\"render\" />\n<Link discover=\"none\" />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n- **render** - default, discover the route when the link renders\n- **none** - don't eagerly discover, only discover if the link is clicked"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 395,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L395"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
									"qualifiedName": "DiscoverBehavior"
								},
								"name": "DiscoverBehavior",
								"package": "react-router"
							}
						},
						{
							"id": 957,
							"name": "download",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2130,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.download"
							}
						},
						{
							"id": 958,
							"name": "draggable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1933,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.draggable"
							}
						},
						{
							"id": 959,
							"name": "hidden",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1934,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.hidden"
							}
						},
						{
							"id": 960,
							"name": "hrefLang",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2132,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.hrefLang"
							}
						},
						{
							"id": 961,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1935,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.id"
							}
						},
						{
							"id": 962,
							"name": "inlist",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1956,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.inlist"
							}
						},
						{
							"id": 963,
							"name": "inputMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1984,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "search"
									},
									{
										"type": "literal",
										"value": "text"
									},
									{
										"type": "literal",
										"value": "url"
									},
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "tel"
									},
									{
										"type": "literal",
										"value": "email"
									},
									{
										"type": "literal",
										"value": "numeric"
									},
									{
										"type": "literal",
										"value": "decimal"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.inputMode"
							}
						},
						{
							"id": 964,
							"name": "is",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specify that a standard HTML element should behave like a defined custom built-in element"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1989,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.is"
							}
						},
						{
							"id": 965,
							"name": "itemID",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1973,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.itemID"
							}
						},
						{
							"id": 966,
							"name": "itemProp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1970,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.itemProp"
							}
						},
						{
							"id": 967,
							"name": "itemRef",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1974,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.itemRef"
							}
						},
						{
							"id": 968,
							"name": "itemScope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1971,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.itemScope"
							}
						},
						{
							"id": 969,
							"name": "itemType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1972,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.itemType"
							}
						},
						{
							"id": 970,
							"name": "lang",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1936,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.lang"
							}
						},
						{
							"id": 971,
							"name": "media",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2133,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.media"
							}
						},
						{
							"id": 972,
							"name": "nonce",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1937,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.nonce"
							}
						},
						{
							"id": 973,
							"name": "onAbort",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1480,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAbort"
							}
						},
						{
							"id": 974,
							"name": "onAbortCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1481,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAbortCapture"
							}
						},
						{
							"id": 975,
							"name": "onAnimationEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1612,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationEnd"
							}
						},
						{
							"id": 976,
							"name": "onAnimationEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1613,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationEndCapture"
							}
						},
						{
							"id": 977,
							"name": "onAnimationIteration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1614,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationIteration"
							}
						},
						{
							"id": 978,
							"name": "onAnimationIterationCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1615,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationIterationCapture"
							}
						},
						{
							"id": 979,
							"name": "onAnimationStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1610,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationStart"
							}
						},
						{
							"id": 980,
							"name": "onAnimationStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1611,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationStartCapture"
							}
						},
						{
							"id": 981,
							"name": "onAuxClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1528,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAuxClick"
							}
						},
						{
							"id": 982,
							"name": "onAuxClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1529,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAuxClickCapture"
							}
						},
						{
							"id": 983,
							"name": "onBeforeInput",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1452,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onBeforeInput"
							}
						},
						{
							"id": 984,
							"name": "onBeforeInputCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1453,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onBeforeInputCapture"
							}
						},
						{
							"id": 985,
							"name": "onBlur",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1446,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onBlur"
							}
						},
						{
							"id": 986,
							"name": "onBlurCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1447,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onBlurCapture"
							}
						},
						{
							"id": 987,
							"name": "onCanPlay",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1482,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCanPlay"
							}
						},
						{
							"id": 988,
							"name": "onCanPlayCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1483,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCanPlayCapture"
							}
						},
						{
							"id": 989,
							"name": "onCanPlayThrough",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1484,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCanPlayThrough"
							}
						},
						{
							"id": 990,
							"name": "onCanPlayThroughCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1485,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCanPlayThroughCapture"
							}
						},
						{
							"id": 991,
							"name": "onChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1450,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onChange"
							}
						},
						{
							"id": 992,
							"name": "onChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1451,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onChangeCapture"
							}
						},
						{
							"id": 993,
							"name": "onClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1530,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onClick"
							}
						},
						{
							"id": 994,
							"name": "onClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1531,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onClickCapture"
							}
						},
						{
							"id": 995,
							"name": "onCompositionEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1436,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionEnd"
							}
						},
						{
							"id": 996,
							"name": "onCompositionEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1437,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionEndCapture"
							}
						},
						{
							"id": 997,
							"name": "onCompositionStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1438,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionStart"
							}
						},
						{
							"id": 998,
							"name": "onCompositionStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1439,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionStartCapture"
							}
						},
						{
							"id": 999,
							"name": "onCompositionUpdate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1440,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionUpdate"
							}
						},
						{
							"id": 1000,
							"name": "onCompositionUpdateCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1441,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionUpdateCapture"
							}
						},
						{
							"id": 1001,
							"name": "onContextMenu",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1532,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onContextMenu"
							}
						},
						{
							"id": 1002,
							"name": "onContextMenuCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1533,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onContextMenuCapture"
							}
						},
						{
							"id": 1003,
							"name": "onCopy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1428,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCopy"
							}
						},
						{
							"id": 1004,
							"name": "onCopyCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1429,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCopyCapture"
							}
						},
						{
							"id": 1005,
							"name": "onCut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1430,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCut"
							}
						},
						{
							"id": 1006,
							"name": "onCutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1431,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCutCapture"
							}
						},
						{
							"id": 1007,
							"name": "onDoubleClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1534,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDoubleClick"
							}
						},
						{
							"id": 1008,
							"name": "onDoubleClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1535,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDoubleClickCapture"
							}
						},
						{
							"id": 1009,
							"name": "onDrag",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1536,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDrag"
							}
						},
						{
							"id": 1010,
							"name": "onDragCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1537,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragCapture"
							}
						},
						{
							"id": 1011,
							"name": "onDragEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1538,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragEnd"
							}
						},
						{
							"id": 1012,
							"name": "onDragEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1539,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragEndCapture"
							}
						},
						{
							"id": 1013,
							"name": "onDragEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1540,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragEnter"
							}
						},
						{
							"id": 1014,
							"name": "onDragEnterCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1541,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragEnterCapture"
							}
						},
						{
							"id": 1015,
							"name": "onDragExit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1542,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragExit"
							}
						},
						{
							"id": 1016,
							"name": "onDragExitCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1543,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragExitCapture"
							}
						},
						{
							"id": 1017,
							"name": "onDragLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1544,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragLeave"
							}
						},
						{
							"id": 1018,
							"name": "onDragLeaveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1545,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragLeaveCapture"
							}
						},
						{
							"id": 1019,
							"name": "onDragOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1546,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragOver"
							}
						},
						{
							"id": 1020,
							"name": "onDragOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1547,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragOverCapture"
							}
						},
						{
							"id": 1021,
							"name": "onDragStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1548,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragStart"
							}
						},
						{
							"id": 1022,
							"name": "onDragStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1549,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragStartCapture"
							}
						},
						{
							"id": 1023,
							"name": "onDrop",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1550,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDrop"
							}
						},
						{
							"id": 1024,
							"name": "onDropCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1551,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDropCapture"
							}
						},
						{
							"id": 1025,
							"name": "onDurationChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1486,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDurationChange"
							}
						},
						{
							"id": 1026,
							"name": "onDurationChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1487,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDurationChangeCapture"
							}
						},
						{
							"id": 1027,
							"name": "onEmptied",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1488,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEmptied"
							}
						},
						{
							"id": 1028,
							"name": "onEmptiedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1489,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEmptiedCapture"
							}
						},
						{
							"id": 1029,
							"name": "onEncrypted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1490,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEncrypted"
							}
						},
						{
							"id": 1030,
							"name": "onEncryptedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1491,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEncryptedCapture"
							}
						},
						{
							"id": 1031,
							"name": "onEnded",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1492,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEnded"
							}
						},
						{
							"id": 1032,
							"name": "onEndedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1493,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEndedCapture"
							}
						},
						{
							"id": 1033,
							"name": "onError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1466,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onError"
							}
						},
						{
							"id": 1034,
							"name": "onErrorCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1467,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onErrorCapture"
							}
						},
						{
							"id": 1035,
							"name": "onFocus",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1444,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onFocus"
							}
						},
						{
							"id": 1036,
							"name": "onFocusCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1445,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onFocusCapture"
							}
						},
						{
							"id": 1037,
							"name": "onGotPointerCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1596,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onGotPointerCapture"
							}
						},
						{
							"id": 1038,
							"name": "onGotPointerCaptureCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1597,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onGotPointerCaptureCapture"
							}
						},
						{
							"id": 1039,
							"name": "onInput",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1454,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onInput"
							}
						},
						{
							"id": 1040,
							"name": "onInputCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1455,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onInputCapture"
							}
						},
						{
							"id": 1041,
							"name": "onInvalid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1460,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onInvalid"
							}
						},
						{
							"id": 1042,
							"name": "onInvalidCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1461,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onInvalidCapture"
							}
						},
						{
							"id": 1043,
							"name": "onKeyDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1470,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyDown"
							}
						},
						{
							"id": 1044,
							"name": "onKeyDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1471,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyDownCapture"
							}
						},
						{
							"id": 1045,
							"name": "onKeyPress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1473,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyPress"
							}
						},
						{
							"id": 1046,
							"name": "onKeyPressCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1475,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyPressCapture"
							}
						},
						{
							"id": 1047,
							"name": "onKeyUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1476,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyUp"
							}
						},
						{
							"id": 1048,
							"name": "onKeyUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1477,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyUpCapture"
							}
						},
						{
							"id": 1049,
							"name": "onLoad",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1464,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoad"
							}
						},
						{
							"id": 1050,
							"name": "onLoadCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1465,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadCapture"
							}
						},
						{
							"id": 1051,
							"name": "onLoadStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1498,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadStart"
							}
						},
						{
							"id": 1052,
							"name": "onLoadStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1499,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadStartCapture"
							}
						},
						{
							"id": 1053,
							"name": "onLoadedData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1494,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadedData"
							}
						},
						{
							"id": 1054,
							"name": "onLoadedDataCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1495,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadedDataCapture"
							}
						},
						{
							"id": 1055,
							"name": "onLoadedMetadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1496,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadedMetadata"
							}
						},
						{
							"id": 1056,
							"name": "onLoadedMetadataCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1497,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadedMetadataCapture"
							}
						},
						{
							"id": 1057,
							"name": "onLostPointerCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1598,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLostPointerCapture"
							}
						},
						{
							"id": 1058,
							"name": "onLostPointerCaptureCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1599,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLostPointerCaptureCapture"
							}
						},
						{
							"id": 1059,
							"name": "onMouseDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1552,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseDown"
							}
						},
						{
							"id": 1060,
							"name": "onMouseDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1553,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseDownCapture"
							}
						},
						{
							"id": 1061,
							"name": "onMouseEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1554,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseEnter"
							}
						},
						{
							"id": 1062,
							"name": "onMouseLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1555,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseLeave"
							}
						},
						{
							"id": 1063,
							"name": "onMouseMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1556,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseMove"
							}
						},
						{
							"id": 1064,
							"name": "onMouseMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1557,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseMoveCapture"
							}
						},
						{
							"id": 1065,
							"name": "onMouseOut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1558,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseOut"
							}
						},
						{
							"id": 1066,
							"name": "onMouseOutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1559,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseOutCapture"
							}
						},
						{
							"id": 1067,
							"name": "onMouseOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1560,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseOver"
							}
						},
						{
							"id": 1068,
							"name": "onMouseOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1561,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseOverCapture"
							}
						},
						{
							"id": 1069,
							"name": "onMouseUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1562,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseUp"
							}
						},
						{
							"id": 1070,
							"name": "onMouseUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1563,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseUpCapture"
							}
						},
						{
							"id": 1071,
							"name": "onPaste",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1432,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPaste"
							}
						},
						{
							"id": 1072,
							"name": "onPasteCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1433,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPasteCapture"
							}
						},
						{
							"id": 1073,
							"name": "onPause",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1500,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPause"
							}
						},
						{
							"id": 1074,
							"name": "onPauseCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1501,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPauseCapture"
							}
						},
						{
							"id": 1075,
							"name": "onPlay",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1502,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPlay"
							}
						},
						{
							"id": 1076,
							"name": "onPlayCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1503,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPlayCapture"
							}
						},
						{
							"id": 1077,
							"name": "onPlaying",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1504,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPlaying"
							}
						},
						{
							"id": 1078,
							"name": "onPlayingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1505,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPlayingCapture"
							}
						},
						{
							"id": 1079,
							"name": "onPointerCancel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1586,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerCancel"
							}
						},
						{
							"id": 1080,
							"name": "onPointerCancelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1587,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerCancelCapture"
							}
						},
						{
							"id": 1081,
							"name": "onPointerDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1580,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerDown"
							}
						},
						{
							"id": 1082,
							"name": "onPointerDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1581,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerDownCapture"
							}
						},
						{
							"id": 1083,
							"name": "onPointerEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1588,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerEnter"
							}
						},
						{
							"id": 1084,
							"name": "onPointerEnterCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1589,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerEnterCapture"
							}
						},
						{
							"id": 1085,
							"name": "onPointerLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1590,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerLeave"
							}
						},
						{
							"id": 1086,
							"name": "onPointerLeaveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1591,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerLeaveCapture"
							}
						},
						{
							"id": 1087,
							"name": "onPointerMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1582,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerMove"
							}
						},
						{
							"id": 1088,
							"name": "onPointerMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1583,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerMoveCapture"
							}
						},
						{
							"id": 1089,
							"name": "onPointerOut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1594,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerOut"
							}
						},
						{
							"id": 1090,
							"name": "onPointerOutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1595,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerOutCapture"
							}
						},
						{
							"id": 1091,
							"name": "onPointerOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1592,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerOver"
							}
						},
						{
							"id": 1092,
							"name": "onPointerOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1593,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerOverCapture"
							}
						},
						{
							"id": 1093,
							"name": "onPointerUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1584,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerUp"
							}
						},
						{
							"id": 1094,
							"name": "onPointerUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1585,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerUpCapture"
							}
						},
						{
							"id": 1095,
							"name": "onProgress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1506,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onProgress"
							}
						},
						{
							"id": 1096,
							"name": "onProgressCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1507,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onProgressCapture"
							}
						},
						{
							"id": 1097,
							"name": "onRateChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1508,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onRateChange"
							}
						},
						{
							"id": 1098,
							"name": "onRateChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1509,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onRateChangeCapture"
							}
						},
						{
							"id": 1099,
							"name": "onReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1456,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onReset"
							}
						},
						{
							"id": 1100,
							"name": "onResetCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1457,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onResetCapture"
							}
						},
						{
							"id": 1101,
							"name": "onResize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1510,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onResize"
							}
						},
						{
							"id": 1102,
							"name": "onResizeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1511,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onResizeCapture"
							}
						},
						{
							"id": 1103,
							"name": "onScroll",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1602,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.UIEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "UIEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.UIEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onScroll"
							}
						},
						{
							"id": 1104,
							"name": "onScrollCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1603,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.UIEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "UIEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.UIEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onScrollCapture"
							}
						},
						{
							"id": 1105,
							"name": "onSeeked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1512,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSeeked"
							}
						},
						{
							"id": 1106,
							"name": "onSeekedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1513,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSeekedCapture"
							}
						},
						{
							"id": 1107,
							"name": "onSeeking",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1514,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSeeking"
							}
						},
						{
							"id": 1108,
							"name": "onSeekingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1515,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSeekingCapture"
							}
						},
						{
							"id": 1109,
							"name": "onSelect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1566,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSelect"
							}
						},
						{
							"id": 1110,
							"name": "onSelectCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1567,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSelectCapture"
							}
						},
						{
							"id": 1111,
							"name": "onStalled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1516,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onStalled"
							}
						},
						{
							"id": 1112,
							"name": "onStalledCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1517,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onStalledCapture"
							}
						},
						{
							"id": 1113,
							"name": "onSubmit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1458,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSubmit"
							}
						},
						{
							"id": 1114,
							"name": "onSubmitCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1459,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSubmitCapture"
							}
						},
						{
							"id": 1115,
							"name": "onSuspend",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1518,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSuspend"
							}
						},
						{
							"id": 1116,
							"name": "onSuspendCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1519,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSuspendCapture"
							}
						},
						{
							"id": 1117,
							"name": "onTimeUpdate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1520,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTimeUpdate"
							}
						},
						{
							"id": 1118,
							"name": "onTimeUpdateCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1521,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTimeUpdateCapture"
							}
						},
						{
							"id": 1119,
							"name": "onTouchCancel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1570,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchCancel"
							}
						},
						{
							"id": 1120,
							"name": "onTouchCancelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1571,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchCancelCapture"
							}
						},
						{
							"id": 1121,
							"name": "onTouchEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1572,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchEnd"
							}
						},
						{
							"id": 1122,
							"name": "onTouchEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1573,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchEndCapture"
							}
						},
						{
							"id": 1123,
							"name": "onTouchMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1574,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchMove"
							}
						},
						{
							"id": 1124,
							"name": "onTouchMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1575,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchMoveCapture"
							}
						},
						{
							"id": 1125,
							"name": "onTouchStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1576,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchStart"
							}
						},
						{
							"id": 1126,
							"name": "onTouchStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1577,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchStartCapture"
							}
						},
						{
							"id": 1127,
							"name": "onTransitionEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1618,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TransitionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TransitionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TransitionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTransitionEnd"
							}
						},
						{
							"id": 1128,
							"name": "onTransitionEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1619,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TransitionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TransitionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TransitionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTransitionEndCapture"
							}
						},
						{
							"id": 1129,
							"name": "onVolumeChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1522,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onVolumeChange"
							}
						},
						{
							"id": 1130,
							"name": "onVolumeChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1523,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onVolumeChangeCapture"
							}
						},
						{
							"id": 1131,
							"name": "onWaiting",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1524,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onWaiting"
							}
						},
						{
							"id": 1132,
							"name": "onWaitingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1525,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onWaitingCapture"
							}
						},
						{
							"id": 1133,
							"name": "onWheel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1606,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.WheelEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "WheelEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.WheelEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onWheel"
							}
						},
						{
							"id": 1134,
							"name": "onWheelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1607,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.WheelEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "WheelEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.WheelEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onWheelCapture"
							}
						},
						{
							"id": 1135,
							"name": "ping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2134,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.ping"
							}
						},
						{
							"id": 1136,
							"name": "placeholder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1938,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.placeholder"
							}
						},
						{
							"id": 1137,
							"name": "prefetch",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the data and module prefetching behavior for the link.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link /> // default\n<Link prefetch=\"none\" />\n<Link prefetch=\"intent\" />\n<Link prefetch=\"render\" />\n<Link prefetch=\"viewport\" />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n- **none** - default, no prefetching\n- **intent** - prefetches when the user hovers or focuses the link\n- **render** - prefetches when the link renders\n- **viewport** - prefetches when the link is in the viewport, very useful for mobile\n\nPrefetching is done with HTML "
									},
									{
										"kind": "code",
										"text": "`<link rel=\"prefetch\">`"
									},
									{
										"kind": "text",
										"text": " tags. They are inserted after the link.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<a href=\"...\" />\n<a href=\"...\" />\n<link rel=\"prefetch\" /> // might conditionally render\n```"
									},
									{
										"kind": "text",
										"text": "\n\nBecause of this, if you are using "
									},
									{
										"kind": "code",
										"text": "`nav :last-child`"
									},
									{
										"kind": "text",
										"text": " you will need to use "
									},
									{
										"kind": "code",
										"text": "`nav :last-of-type`"
									},
									{
										"kind": "text",
										"text": " so the styles don't conditionally fall off your last link (and any other similar selectors)."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 423,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L423"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
									"qualifiedName": "PrefetchBehavior"
								},
								"name": "PrefetchBehavior",
								"package": "react-router"
							}
						},
						{
							"id": 1138,
							"name": "prefix",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1957,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.prefix"
							}
						},
						{
							"id": 1139,
							"name": "preventScrollReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prevents the scroll position from being reset to the top of the window when the link is clicked and the app is using "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ScrollRestoration",
										"target": 2317,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ". This only prevents new locations reseting scroll to the top, scroll position will be restored for back/forward button navigation.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link to=\"?tab=one\" preventScrollReset />\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 481,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L481"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1140,
							"name": "property",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1958,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.property"
							}
						},
						{
							"id": 1141,
							"name": "radioGroup",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1947,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.radioGroup"
							}
						},
						{
							"id": 1142,
							"name": "referrerPolicy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2137,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.HTMLAttributeReferrerPolicy"
								},
								"name": "HTMLAttributeReferrerPolicy",
								"package": "@types/react",
								"qualifiedName": "React.HTMLAttributeReferrerPolicy"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.referrerPolicy"
							}
						},
						{
							"id": 1143,
							"name": "rel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1959,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.rel"
							}
						},
						{
							"id": 1144,
							"name": "relative",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the relative path behavior for the link.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link to=\"..\" /> // default: \"route\"\n<Link relative=\"route\" />\n<Link relative=\"path\" />\n```"
									},
									{
										"kind": "text",
										"text": "\n\nConsider a route hierarchy where a parent route pattern is \"blog\" and a child route pattern is \"blog/:slug/edit\".\n\n- **route** - default, resolves the link relative to the route pattern. In the example above a relative link of "
									},
									{
										"kind": "code",
										"text": "`\"..\"`"
									},
									{
										"kind": "text",
										"text": " will remove both "
									},
									{
										"kind": "code",
										"text": "`:slug/edit`"
									},
									{
										"kind": "text",
										"text": " segments back to \"/blog\".\n- **path** - relative to the path so "
									},
									{
										"kind": "code",
										"text": "`..`"
									},
									{
										"kind": "text",
										"text": " will only remove one URL segment up to \"/blog/:slug\""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 497,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L497"
								}
							],
							"type": {
								"type": "reference",
								"target": 2192,
								"name": "RelativeRoutingType",
								"package": "react-router"
							}
						},
						{
							"id": 1145,
							"name": "reloadDocument",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Will use document navigation instead of client side routing when the link is clicked: the browser will handle the transition normally (as if it were an "
									},
									{
										"kind": "code",
										"text": "`<a href>`"
									},
									{
										"kind": "text",
										"text": ").\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link to=\"/logout\" reloadDocument />\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 432,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L432"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1146,
							"name": "replace",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replaces the current entry in the history stack instead of pushing a new one onto it.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link replace />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n"
									},
									{
										"kind": "code",
										"text": "```\n# with a history stack like this\nA -> B\n\n# normal link click pushes a new entry\nA -> B -> C\n\n# but with `replace`, B is replaced by C\nA -> C\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 452,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L452"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1147,
							"name": "resource",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1960,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.resource"
							}
						},
						{
							"id": 1148,
							"name": "results",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1975,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.results"
							}
						},
						{
							"id": 1149,
							"name": "rev",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1961,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.rev"
							}
						},
						{
							"id": 1150,
							"name": "role",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1950,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AriaRole"
								},
								"name": "AriaRole",
								"package": "@types/react",
								"qualifiedName": "React.AriaRole"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.role"
							}
						},
						{
							"id": 1151,
							"name": "security",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1976,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.security"
							}
						},
						{
							"id": 1152,
							"name": "slot",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1939,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.slot"
							}
						},
						{
							"id": 1153,
							"name": "spellCheck",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1940,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.spellCheck"
							}
						},
						{
							"id": 1154,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds persistent client side routing state to the next location.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link to=\"/somewhere/else\" state={{ some: \"value\" }} />\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe location state is accessed from the "
									},
									{
										"kind": "code",
										"text": "`location`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nfunction SomeComp() {\n  const location = useLocation()\n  location.state; // { some: \"value\" }\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThis state is inaccessible on the server as it is implemented on top of ["
									},
									{
										"kind": "code",
										"text": "`history.state`"
									},
									{
										"kind": "text",
										"text": "](https://developer.mozilla.org/en-US/docs/Web/API/History/state)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 472,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L472"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1155,
							"name": "style",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1941,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CSSProperties"
								},
								"name": "CSSProperties",
								"package": "@types/react",
								"qualifiedName": "React.CSSProperties"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.style"
							}
						},
						{
							"id": 1156,
							"name": "suppressContentEditableWarning",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1923,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.suppressContentEditableWarning"
							}
						},
						{
							"id": 1157,
							"name": "suppressHydrationWarning",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1924,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.suppressHydrationWarning"
							}
						},
						{
							"id": 1158,
							"name": "tabIndex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1942,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.tabIndex"
							}
						},
						{
							"id": 1159,
							"name": "target",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2135,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.HTMLAttributeAnchorTarget"
								},
								"name": "HTMLAttributeAnchorTarget",
								"package": "@types/react",
								"qualifiedName": "React.HTMLAttributeAnchorTarget"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.target"
							}
						},
						{
							"id": 1160,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1943,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.title"
							}
						},
						{
							"id": 1161,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Can be a string or a partial "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Path",
										"target": 1568
									},
									{
										"kind": "text",
										"text": ":\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link to=\"/some/path\" />\n\n<Link\n  to={{\n    pathname: \"/some/path\",\n    search: \"?query=string\",\n    hash: \"#hash\",\n  }}\n/>\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 514,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L514"
								}
							],
							"type": {
								"type": "reference",
								"target": 2222,
								"name": "To",
								"package": "react-router"
							}
						},
						{
							"id": 1162,
							"name": "translate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1944,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "yes"
									},
									{
										"type": "literal",
										"value": "no"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.translate"
							}
						},
						{
							"id": 1163,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2136,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.type"
							}
						},
						{
							"id": 1164,
							"name": "typeof",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1962,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.typeof"
							}
						},
						{
							"id": 1165,
							"name": "unselectable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1977,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "on"
									},
									{
										"type": "literal",
										"value": "off"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.unselectable"
							}
						},
						{
							"id": 1166,
							"name": "unstable_viewTransition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enables a [View Transition](https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API) for this navigation.\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\n<Link to={to} unstable_viewTransition>\n  Click me\n</Link>\n```"
									},
									{
										"kind": "text",
										"text": "\n\nTo apply specific styles for the transition, see "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useViewTransitionState",
										"target": 2564,
										"tsLinkText": ""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 527,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L527"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1167,
							"name": "vocab",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1963,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.vocab"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								884,
								885,
								886,
								887,
								888,
								889,
								890,
								891,
								892,
								893,
								894,
								895,
								896,
								897,
								898,
								899,
								900,
								901,
								902,
								903,
								904,
								905,
								906,
								907,
								908,
								909,
								910,
								911,
								912,
								913,
								914,
								915,
								916,
								917,
								918,
								919,
								920,
								921,
								922,
								923,
								924,
								925,
								926,
								927,
								928,
								929,
								930,
								931,
								932,
								933,
								934,
								935,
								936,
								937,
								938,
								939,
								940,
								941,
								942,
								943,
								944,
								945,
								946,
								947,
								948,
								949,
								952,
								953,
								954,
								955,
								956,
								957,
								958,
								959,
								960,
								961,
								962,
								963,
								964,
								965,
								966,
								967,
								968,
								969,
								970,
								971,
								972,
								973,
								974,
								975,
								976,
								977,
								978,
								979,
								980,
								981,
								982,
								983,
								984,
								985,
								986,
								987,
								988,
								989,
								990,
								991,
								992,
								993,
								994,
								995,
								996,
								997,
								998,
								999,
								1000,
								1001,
								1002,
								1003,
								1004,
								1005,
								1006,
								1007,
								1008,
								1009,
								1010,
								1011,
								1012,
								1013,
								1014,
								1015,
								1016,
								1017,
								1018,
								1019,
								1020,
								1021,
								1022,
								1023,
								1024,
								1025,
								1026,
								1027,
								1028,
								1029,
								1030,
								1031,
								1032,
								1033,
								1034,
								1035,
								1036,
								1037,
								1038,
								1039,
								1040,
								1041,
								1042,
								1043,
								1044,
								1045,
								1046,
								1047,
								1048,
								1049,
								1050,
								1051,
								1052,
								1053,
								1054,
								1055,
								1056,
								1057,
								1058,
								1059,
								1060,
								1061,
								1062,
								1063,
								1064,
								1065,
								1066,
								1067,
								1068,
								1069,
								1070,
								1071,
								1072,
								1073,
								1074,
								1075,
								1076,
								1077,
								1078,
								1079,
								1080,
								1081,
								1082,
								1083,
								1084,
								1085,
								1086,
								1087,
								1088,
								1089,
								1090,
								1091,
								1092,
								1093,
								1094,
								1095,
								1096,
								1097,
								1098,
								1099,
								1100,
								1101,
								1102,
								1103,
								1104,
								1105,
								1106,
								1107,
								1108,
								1109,
								1110,
								1111,
								1112,
								1113,
								1114,
								1115,
								1116,
								1117,
								1118,
								1119,
								1120,
								1121,
								1122,
								1123,
								1124,
								1125,
								1126,
								1127,
								1128,
								1129,
								1130,
								1131,
								1132,
								1133,
								1134,
								1135,
								1136,
								1137,
								1138,
								1139,
								1140,
								1141,
								1142,
								1143,
								1144,
								1145,
								1146,
								1147,
								1148,
								1149,
								1150,
								1151,
								1152,
								1153,
								1154,
								1155,
								1156,
								1157,
								1158,
								1159,
								1160,
								1161,
								1162,
								1163,
								1164,
								1165,
								1166,
								1167
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 381,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L381"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
										"qualifiedName": "React.AnchorHTMLAttributes"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
												"qualifiedName": "HTMLAnchorElement"
											},
											"name": "HTMLAnchorElement",
											"package": "typescript"
										}
									],
									"name": "React.AnchorHTMLAttributes",
									"package": "@types/react"
								},
								{
									"type": "literal",
									"value": "href"
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					]
				},
				{
					"id": 1168,
					"name": "LinksFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that defines "
							},
							{
								"kind": "code",
								"text": "`<link>`"
							},
							{
								"kind": "text",
								"text": " tags to be inserted into the "
							},
							{
								"kind": "code",
								"text": "`<head>`"
							},
							{
								"kind": "text",
								"text": " of\nthe document on route transitions."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://remix.run/route/meta"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
							"line": 95,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L95"
						}
					],
					"signatures": [
						{
							"id": 1169,
							"name": "LinksFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
									"line": 96,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L96"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2095,
									"name": "LinkDescriptor",
									"package": "react-router"
								}
							}
						}
					]
				},
				{
					"id": 1170,
					"name": "LoaderFunctionArgs",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Arguments passed to loader functions"
							}
						]
					},
					"children": [
						{
							"id": 1171,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 129,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L129"
								}
							],
							"type": {
								"type": "reference",
								"target": 1174,
								"name": "Context",
								"package": "react-router",
								"qualifiedName": "LoaderFunctionArgs.Context",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DataFunctionArgs.context"
							}
						},
						{
							"id": 1172,
							"name": "params",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 128,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L128"
								}
							],
							"type": {
								"type": "reference",
								"target": 2183,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Params",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DataFunctionArgs.params"
							}
						},
						{
							"id": 1173,
							"name": "request",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L127"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Request"
								},
								"name": "Request",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DataFunctionArgs.request"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1171,
								1172,
								1173
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 139,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L139"
						}
					],
					"typeParameters": [
						{
							"id": 1174,
							"name": "Context",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/router/utils.ts",
								"qualifiedName": "DataFunctionArgs"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 1174,
									"name": "Context",
									"package": "react-router",
									"qualifiedName": "LoaderFunctionArgs.Context",
									"refersToTypeParameter": true
								}
							],
							"name": "DataFunctionArgs",
							"package": "react-router"
						}
					]
				},
				{
					"id": 1175,
					"name": "Location",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An entry in a history stack. A location contains information about the\nURL path, as well as possibly some arbitrary state and a key."
							}
						]
					},
					"children": [
						{
							"id": 1176,
							"name": "hash",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A URL fragment identifier, beginning with a #."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 49,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L49"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1569,
								"name": "Path.hash"
							}
						},
						{
							"id": 1177,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique string associated with this location. May be used to safely store\nand retrieve data in some other storage API, like "
									},
									{
										"kind": "code",
										"text": "`localStorage`"
									},
									{
										"kind": "text",
										"text": ".\n\nNote: This value is always \"default\" on the initial location."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 71,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L71"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1178,
							"name": "pathname",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A URL pathname, beginning with a /."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1570,
								"name": "Path.pathname"
							}
						},
						{
							"id": 1179,
							"name": "search",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A URL search string, beginning with a ?."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 44,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L44"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1571,
								"name": "Path.search"
							}
						},
						{
							"id": 1180,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A value of arbitrary data associated with this location."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 63,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L63"
								}
							],
							"type": {
								"type": "reference",
								"target": 1181,
								"name": "State",
								"package": "react-router",
								"qualifiedName": "Location.State",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1176,
								1177,
								1178,
								1179,
								1180
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/history.ts",
							"line": 59,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L59"
						}
					],
					"typeParameters": [
						{
							"id": 1181,
							"name": "State",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1568,
							"name": "Path",
							"package": "react-router"
						}
					]
				},
				{
					"id": 1182,
					"name": "MemoryRouterProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1183,
							"name": "basename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 471,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L471"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1184,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 472,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L472"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 1185,
							"name": "initialEntries",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 473,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L473"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2080,
									"name": "InitialEntry",
									"package": "react-router"
								}
							}
						},
						{
							"id": 1186,
							"name": "initialIndex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 474,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L474"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1183,
								1184,
								1185,
								1186
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 470,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L470"
						}
					]
				},
				{
					"id": 1187,
					"name": "MetaArgs",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1188,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
									"line": 146,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L146"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": 1193,
											"name": "Loader",
											"package": "react-router",
											"qualifiedName": "MetaArgs.Loader",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reference",
											"target": {
												"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
												"qualifiedName": "LoaderFunction"
											},
											"name": "LoaderFunction",
											"package": "react-router"
										},
										"trueType": {
											"type": "reference",
											"target": {
												"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
												"qualifiedName": "SerializeFrom"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 1193,
													"typeArguments": [
														{
															"type": "reference",
															"target": 1193,
															"name": "Loader",
															"package": "react-router",
															"qualifiedName": "MetaArgs.Loader",
															"refersToTypeParameter": true
														}
													],
													"name": "Loader",
													"package": "react-router",
													"qualifiedName": "MetaArgs.Loader",
													"refersToTypeParameter": true
												}
											],
											"name": "SerializeFrom",
											"package": "react-router"
										},
										"falseType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								]
							}
						},
						{
							"id": 1189,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
									"line": 152,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L152"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 1190,
							"name": "location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
									"line": 150,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L150"
								}
							],
							"type": {
								"type": "reference",
								"target": 1175,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Location",
								"package": "react-router"
							}
						},
						{
							"id": 1191,
							"name": "matches",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
									"line": 151,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L151"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
									"qualifiedName": "MetaMatches"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1194,
										"name": "MatchLoaders",
										"package": "react-router",
										"qualifiedName": "MetaArgs.MatchLoaders",
										"refersToTypeParameter": true
									}
								],
								"name": "MetaMatches",
								"package": "react-router"
							}
						},
						{
							"id": 1192,
							"name": "params",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L149"
								}
							],
							"type": {
								"type": "reference",
								"target": 2183,
								"name": "Params",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1188,
								1189,
								1190,
								1191,
								1192
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
							"line": 139,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L139"
						}
					],
					"typeParameters": [
						{
							"id": 1193,
							"name": "Loader",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"qualifiedName": "LoaderFunction"
										},
										"name": "LoaderFunction",
										"package": "react-router"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								]
							},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 1194,
							"name": "MatchLoaders",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"qualifiedName": "LoaderFunction"
												},
												"name": "LoaderFunction",
												"package": "react-router"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1195,
					"name": "MetaFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
							"line": 155,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L155"
						}
					],
					"typeParameters": [
						{
							"id": 1196,
							"name": "Loader",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"qualifiedName": "LoaderFunction"
										},
										"name": "LoaderFunction",
										"package": "react-router"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								]
							},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 1197,
							"name": "MatchLoaders",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"qualifiedName": "LoaderFunction"
												},
												"name": "LoaderFunction",
												"package": "react-router"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"signatures": [
						{
							"id": 1198,
							"name": "MetaFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
									"line": 162,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L162"
								}
							],
							"parameters": [
								{
									"id": 1199,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1187,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1196,
												"name": "Loader",
												"package": "react-router",
												"qualifiedName": "MetaFunction.Loader",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 1197,
												"name": "MatchLoaders",
												"package": "react-router",
												"qualifiedName": "MetaFunction.MatchLoaders",
												"refersToTypeParameter": true
											}
										],
										"name": "MetaArgs",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 2117,
											"name": "MetaDescriptor",
											"package": "react-router"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 1200,
					"name": "NavLinkProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1201,
							"name": "about",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1953,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.about"
							}
						},
						{
							"id": 1202,
							"name": "accessKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1927,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.accessKey"
							}
						},
						{
							"id": 1203,
							"name": "aria-activedescendant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1636,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-activedescendant"
							}
						},
						{
							"id": 1204,
							"name": "aria-atomic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1638,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-atomic"
							}
						},
						{
							"id": 1205,
							"name": "aria-autocomplete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1643,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "list"
									},
									{
										"type": "literal",
										"value": "inline"
									},
									{
										"type": "literal",
										"value": "both"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-autocomplete"
							}
						},
						{
							"id": 1206,
							"name": "aria-braillelabel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that labels the current element, which is intended to be converted into Braille."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-label."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1649,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-braillelabel"
							}
						},
						{
							"id": 1207,
							"name": "aria-brailleroledescription",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-roledescription."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1654,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-brailleroledescription"
							}
						},
						{
							"id": 1208,
							"name": "aria-busy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1655,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-busy"
							}
						},
						{
							"id": 1209,
							"name": "aria-checked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-pressed"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-selected."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1660,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "mixed"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-checked"
							}
						},
						{
							"id": 1210,
							"name": "aria-colcount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the total number of columns in a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-colindex."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1665,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-colcount"
							}
						},
						{
							"id": 1211,
							"name": "aria-colindex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colcount"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1670,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-colindex"
							}
						},
						{
							"id": 1212,
							"name": "aria-colindextext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human readable text alternative of aria-colindex."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-rowindextext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1675,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-colindextext"
							}
						},
						{
							"id": 1213,
							"name": "aria-colspan",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colindex"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1680,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-colspan"
							}
						},
						{
							"id": 1214,
							"name": "aria-controls",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-owns."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1685,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-controls"
							}
						},
						{
							"id": 1215,
							"name": "aria-current",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the element that represents the current item within a container or set of related elements."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1687,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "time"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "location"
									},
									{
										"type": "literal",
										"value": "page"
									},
									{
										"type": "literal",
										"value": "step"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "date"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-current"
							}
						},
						{
							"id": 1216,
							"name": "aria-describedby",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) that describes the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-labelledby"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1692,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-describedby"
							}
						},
						{
							"id": 1217,
							"name": "aria-description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that describes or annotates the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "related aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1697,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-description"
							}
						},
						{
							"id": 1218,
							"name": "aria-details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element that provides a detailed, extended description for the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1702,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-details"
							}
						},
						{
							"id": 1219,
							"name": "aria-disabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-hidden"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-readonly."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1707,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-disabled"
							}
						},
						{
							"id": 1220,
							"name": "aria-dropeffect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates what functions can be performed when a dragged object is released on the drop target."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in ARIA 1.1"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1712,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "link"
									},
									{
										"type": "literal",
										"value": "copy"
									},
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "execute"
									},
									{
										"type": "literal",
										"value": "move"
									},
									{
										"type": "literal",
										"value": "popup"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-dropeffect"
							}
						},
						{
							"id": 1221,
							"name": "aria-errormessage",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element that provides an error message for the object."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-invalid"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-describedby."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1717,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-errormessage"
							}
						},
						{
							"id": 1222,
							"name": "aria-expanded",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1719,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-expanded"
							}
						},
						{
							"id": 1223,
							"name": "aria-flowto",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1724,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-flowto"
							}
						},
						{
							"id": 1224,
							"name": "aria-grabbed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in ARIA 1.1"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1729,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-grabbed"
							}
						},
						{
							"id": 1225,
							"name": "aria-haspopup",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1731,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "dialog"
									},
									{
										"type": "literal",
										"value": "menu"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "grid"
									},
									{
										"type": "literal",
										"value": "listbox"
									},
									{
										"type": "literal",
										"value": "tree"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-haspopup"
							}
						},
						{
							"id": 1226,
							"name": "aria-hidden",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element is exposed to an accessibility API."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-disabled."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1736,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-hidden"
							}
						},
						{
							"id": 1227,
							"name": "aria-invalid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the entered value does not conform to the format expected by the application."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-errormessage."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1741,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "grammar"
									},
									{
										"type": "literal",
										"value": "spelling"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-invalid"
							}
						},
						{
							"id": 1228,
							"name": "aria-keyshortcuts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1743,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-keyshortcuts"
							}
						},
						{
							"id": 1229,
							"name": "aria-label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a string value that labels the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-labelledby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1748,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-label"
							}
						},
						{
							"id": 1230,
							"name": "aria-labelledby",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies the element (or elements) that labels the current element."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-describedby."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1753,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-labelledby"
							}
						},
						{
							"id": 1231,
							"name": "aria-level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the hierarchical level of an element within a structure."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1755,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-level"
							}
						},
						{
							"id": 1232,
							"name": "aria-live",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1757,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "off"
									},
									{
										"type": "literal",
										"value": "assertive"
									},
									{
										"type": "literal",
										"value": "polite"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-live"
							}
						},
						{
							"id": 1233,
							"name": "aria-modal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether an element is modal when displayed."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1759,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-modal"
							}
						},
						{
							"id": 1234,
							"name": "aria-multiline",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether a text box accepts multiple lines of input or only a single line."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1761,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-multiline"
							}
						},
						{
							"id": 1235,
							"name": "aria-multiselectable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the user may select more than one item from the current selectable descendants."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1763,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-multiselectable"
							}
						},
						{
							"id": 1236,
							"name": "aria-orientation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1765,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "horizontal"
									},
									{
										"type": "literal",
										"value": "vertical"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-orientation"
							}
						},
						{
							"id": 1237,
							"name": "aria-owns",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-controls."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1771,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-owns"
							}
						},
						{
							"id": 1238,
							"name": "aria-placeholder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1776,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-placeholder"
							}
						},
						{
							"id": 1239,
							"name": "aria-posinset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-setsize."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1781,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-posinset"
							}
						},
						{
							"id": 1240,
							"name": "aria-pressed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"pressed\" state of toggle buttons."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-checked"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-selected."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1786,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									},
									{
										"type": "literal",
										"value": "mixed"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-pressed"
							}
						},
						{
							"id": 1241,
							"name": "aria-readonly",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that the element is not editable, but is otherwise operable."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-disabled."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1791,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-readonly"
							}
						},
						{
							"id": 1242,
							"name": "aria-relevant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-atomic."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1796,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "text"
									},
									{
										"type": "literal",
										"value": "additions"
									},
									{
										"type": "literal",
										"value": "additions removals"
									},
									{
										"type": "literal",
										"value": "additions text"
									},
									{
										"type": "literal",
										"value": "all"
									},
									{
										"type": "literal",
										"value": "removals"
									},
									{
										"type": "literal",
										"value": "removals additions"
									},
									{
										"type": "literal",
										"value": "removals text"
									},
									{
										"type": "literal",
										"value": "text additions"
									},
									{
										"type": "literal",
										"value": "text removals"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-relevant"
							}
						},
						{
							"id": 1243,
							"name": "aria-required",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that user input is required on the element before a form may be submitted."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1798,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-required"
							}
						},
						{
							"id": 1244,
							"name": "aria-roledescription",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human-readable, author-localized description for the role of an element."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1800,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-roledescription"
							}
						},
						{
							"id": 1245,
							"name": "aria-rowcount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the total number of rows in a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-rowindex."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1805,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-rowcount"
							}
						},
						{
							"id": 1246,
							"name": "aria-rowindex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowcount"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1810,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-rowindex"
							}
						},
						{
							"id": 1247,
							"name": "aria-rowindextext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines a human readable text alternative of aria-rowindex."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-colindextext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1815,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-rowindextext"
							}
						},
						{
							"id": 1248,
							"name": "aria-rowspan",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-rowindex"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-colspan."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1820,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-rowspan"
							}
						},
						{
							"id": 1249,
							"name": "aria-selected",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates the current \"selected\" state of various widgets."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-checked"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "aria-pressed."
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1825,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-selected"
							}
						},
						{
							"id": 1250,
							"name": "aria-setsize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-posinset."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1830,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-setsize"
							}
						},
						{
							"id": 1251,
							"name": "aria-sort",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates if items in a table or grid are sorted in ascending or descending order."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1832,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "ascending"
									},
									{
										"type": "literal",
										"value": "descending"
									},
									{
										"type": "literal",
										"value": "other"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-sort"
							}
						},
						{
							"id": 1252,
							"name": "aria-valuemax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the maximum allowed value for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1834,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-valuemax"
							}
						},
						{
							"id": 1253,
							"name": "aria-valuemin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the minimum allowed value for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1836,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-valuemin"
							}
						},
						{
							"id": 1254,
							"name": "aria-valuenow",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the current value for a range widget."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "aria-valuetext."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1841,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-valuenow"
							}
						},
						{
							"id": 1255,
							"name": "aria-valuetext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the human readable text alternative of aria-valuenow for a range widget."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1843,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.aria-valuetext"
							}
						},
						{
							"id": 1256,
							"name": "autoCapitalize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1966,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.autoCapitalize"
							}
						},
						{
							"id": 1257,
							"name": "autoCorrect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1967,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.autoCorrect"
							}
						},
						{
							"id": 1258,
							"name": "autoFocus",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1928,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.autoFocus"
							}
						},
						{
							"id": 1259,
							"name": "autoSave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1968,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.autoSave"
							}
						},
						{
							"id": 1260,
							"name": "caseSensitive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Changes the matching logic to make it case-sensitive:\n\n| Link                                         | URL           | isActive |\n| -------------------------------------------- | ------------- | -------- |\n| "
									},
									{
										"kind": "code",
										"text": "`<NavLink to=\"/SpOnGe-bOB\" />`"
									},
									{
										"kind": "text",
										"text": "               | "
									},
									{
										"kind": "code",
										"text": "`/sponge-bob`"
									},
									{
										"kind": "text",
										"text": " | true     |\n| "
									},
									{
										"kind": "code",
										"text": "`<NavLink to=\"/SpOnGe-bOB\" caseSensitive />`"
									},
									{
										"kind": "text",
										"text": " | "
									},
									{
										"kind": "code",
										"text": "`/sponge-bob`"
									},
									{
										"kind": "text",
										"text": " | false    |"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 734,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L734"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1261,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Can be regular React children or a function that receives an object with the active and pending states of the link.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<NavLink to=\"/tasks\">\n  {({ isActive }) => (\n    <span className={isActive ? \"active\" : \"\"}>Tasks</span>\n  )}\n</NavLink>\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 724,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L724"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1262,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 724,
													"character": 32,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L724"
												}
											],
											"signatures": [
												{
													"id": 1263,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 724,
															"character": 32,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L724"
														}
													],
													"parameters": [
														{
															"id": 1264,
															"name": "props",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 2142,
																"name": "NavLinkRenderProps",
																"package": "react-router"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.ReactNode"
														},
														"name": "ReactNode",
														"package": "@types/react",
														"qualifiedName": "React.ReactNode"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1265,
							"name": "className",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Classes are automatically applied to NavLink that correspond to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NavLinkRenderProps",
										"target": 2142,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```css\na.active { color: red; }\na.pending { color: blue; }\na.transitioning {\n  view-transition-name: my-transition;\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 747,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L747"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1266,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 747,
													"character": 24,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L747"
												}
											],
											"signatures": [
												{
													"id": 1267,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 747,
															"character": 24,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L747"
														}
													],
													"parameters": [
														{
															"id": 1268,
															"name": "props",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 2142,
																"name": "NavLinkRenderProps",
																"package": "react-router"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1269,
							"name": "color",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1969,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.color"
							}
						},
						{
							"id": 1270,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1954,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.content"
							}
						},
						{
							"id": 1271,
							"name": "contentEditable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1930,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "inherit"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "Booleanish"
										},
										"name": "Booleanish",
										"package": "@types/react"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.contentEditable"
							}
						},
						{
							"id": 1272,
							"name": "contextMenu",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1931,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.contextMenu"
							}
						},
						{
							"id": 1273,
							"name": "dangerouslySetInnerHTML",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1421,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1274,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 1275,
											"name": "__html",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"line": 1424,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/global.d.ts",
															"qualifiedName": "TrustedHTML"
														},
														"name": "TrustedHTML",
														"package": "@types/react"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1275
											]
										}
									],
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"line": 1421,
											"character": 34
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.dangerouslySetInnerHTML"
							}
						},
						{
							"id": 1276,
							"name": "datatype",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1955,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.datatype"
							}
						},
						{
							"id": 1277,
							"name": "defaultChecked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1921,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.defaultChecked"
							}
						},
						{
							"id": 1278,
							"name": "defaultValue",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1922,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.defaultValue"
							}
						},
						{
							"id": 1279,
							"name": "dir",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1932,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.dir"
							}
						},
						{
							"id": 1280,
							"name": "discover",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the link discovery behavior\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link /> // default (\"render\")\n<Link discover=\"render\" />\n<Link discover=\"none\" />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n- **render** - default, discover the route when the link renders\n- **none** - don't eagerly discover, only discover if the link is clicked"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 395,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L395"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
									"qualifiedName": "DiscoverBehavior"
								},
								"name": "DiscoverBehavior",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.discover"
							}
						},
						{
							"id": 1281,
							"name": "download",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2130,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.download"
							}
						},
						{
							"id": 1282,
							"name": "draggable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1933,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.draggable"
							}
						},
						{
							"id": 1283,
							"name": "end",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Changes the matching logic for the "
									},
									{
										"kind": "code",
										"text": "`active`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`pending`"
									},
									{
										"kind": "text",
										"text": " states to only match to the \"end\" of the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NavLinkProps.to",
										"target": 1489,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ". If the URL is longer, it will no longer be considered active.\n\n| Link                          | URL          | isActive |\n| ----------------------------- | ------------ | -------- |\n| "
									},
									{
										"kind": "code",
										"text": "`<NavLink to=\"/tasks\" />`"
									},
									{
										"kind": "text",
										"text": "     | "
									},
									{
										"kind": "code",
										"text": "`/tasks`"
									},
									{
										"kind": "text",
										"text": "     | true     |\n| "
									},
									{
										"kind": "code",
										"text": "`<NavLink to=\"/tasks\" />`"
									},
									{
										"kind": "text",
										"text": "     | "
									},
									{
										"kind": "code",
										"text": "`/tasks/123`"
									},
									{
										"kind": "text",
										"text": " | true     |\n| "
									},
									{
										"kind": "code",
										"text": "`<NavLink to=\"/tasks\" end />`"
									},
									{
										"kind": "text",
										"text": " | "
									},
									{
										"kind": "code",
										"text": "`/tasks`"
									},
									{
										"kind": "text",
										"text": "     | true     |\n| "
									},
									{
										"kind": "code",
										"text": "`<NavLink to=\"/tasks\" end />`"
									},
									{
										"kind": "text",
										"text": " | "
									},
									{
										"kind": "code",
										"text": "`/tasks/123`"
									},
									{
										"kind": "text",
										"text": " | false    |\n\n"
									},
									{
										"kind": "code",
										"text": "`<NavLink to=\"/\">`"
									},
									{
										"kind": "text",
										"text": " is an exceptional case because _every_ URL matches "
									},
									{
										"kind": "code",
										"text": "`/`"
									},
									{
										"kind": "text",
										"text": ". To avoid this matching every single route by default, it effectively ignores the "
									},
									{
										"kind": "code",
										"text": "`end`"
									},
									{
										"kind": "text",
										"text": " prop and only matches when you're at the root route."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 761,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L761"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1284,
							"name": "hidden",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1934,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.hidden"
							}
						},
						{
							"id": 1285,
							"name": "hrefLang",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2132,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.hrefLang"
							}
						},
						{
							"id": 1286,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1935,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.id"
							}
						},
						{
							"id": 1287,
							"name": "inlist",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1956,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.inlist"
							}
						},
						{
							"id": 1288,
							"name": "inputMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1984,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "search"
									},
									{
										"type": "literal",
										"value": "text"
									},
									{
										"type": "literal",
										"value": "url"
									},
									{
										"type": "literal",
										"value": "none"
									},
									{
										"type": "literal",
										"value": "tel"
									},
									{
										"type": "literal",
										"value": "email"
									},
									{
										"type": "literal",
										"value": "numeric"
									},
									{
										"type": "literal",
										"value": "decimal"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.inputMode"
							}
						},
						{
							"id": 1289,
							"name": "is",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specify that a standard HTML element should behave like a defined custom built-in element"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1989,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.is"
							}
						},
						{
							"id": 1290,
							"name": "itemID",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1973,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.itemID"
							}
						},
						{
							"id": 1291,
							"name": "itemProp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1970,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.itemProp"
							}
						},
						{
							"id": 1292,
							"name": "itemRef",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1974,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.itemRef"
							}
						},
						{
							"id": 1293,
							"name": "itemScope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1971,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.itemScope"
							}
						},
						{
							"id": 1294,
							"name": "itemType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1972,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.itemType"
							}
						},
						{
							"id": 1295,
							"name": "lang",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1936,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.lang"
							}
						},
						{
							"id": 1296,
							"name": "media",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2133,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.media"
							}
						},
						{
							"id": 1297,
							"name": "nonce",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1937,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.nonce"
							}
						},
						{
							"id": 1298,
							"name": "onAbort",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1480,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAbort"
							}
						},
						{
							"id": 1299,
							"name": "onAbortCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1481,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAbortCapture"
							}
						},
						{
							"id": 1300,
							"name": "onAnimationEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1612,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationEnd"
							}
						},
						{
							"id": 1301,
							"name": "onAnimationEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1613,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationEndCapture"
							}
						},
						{
							"id": 1302,
							"name": "onAnimationIteration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1614,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationIteration"
							}
						},
						{
							"id": 1303,
							"name": "onAnimationIterationCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1615,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationIterationCapture"
							}
						},
						{
							"id": 1304,
							"name": "onAnimationStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1610,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationStart"
							}
						},
						{
							"id": 1305,
							"name": "onAnimationStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1611,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AnimationEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "AnimationEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.AnimationEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAnimationStartCapture"
							}
						},
						{
							"id": 1306,
							"name": "onAuxClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1528,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAuxClick"
							}
						},
						{
							"id": 1307,
							"name": "onAuxClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1529,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onAuxClickCapture"
							}
						},
						{
							"id": 1308,
							"name": "onBeforeInput",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1452,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onBeforeInput"
							}
						},
						{
							"id": 1309,
							"name": "onBeforeInputCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1453,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onBeforeInputCapture"
							}
						},
						{
							"id": 1310,
							"name": "onBlur",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1446,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onBlur"
							}
						},
						{
							"id": 1311,
							"name": "onBlurCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1447,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onBlurCapture"
							}
						},
						{
							"id": 1312,
							"name": "onCanPlay",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1482,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCanPlay"
							}
						},
						{
							"id": 1313,
							"name": "onCanPlayCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1483,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCanPlayCapture"
							}
						},
						{
							"id": 1314,
							"name": "onCanPlayThrough",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1484,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCanPlayThrough"
							}
						},
						{
							"id": 1315,
							"name": "onCanPlayThroughCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1485,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCanPlayThroughCapture"
							}
						},
						{
							"id": 1316,
							"name": "onChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1450,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onChange"
							}
						},
						{
							"id": 1317,
							"name": "onChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1451,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onChangeCapture"
							}
						},
						{
							"id": 1318,
							"name": "onClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1530,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onClick"
							}
						},
						{
							"id": 1319,
							"name": "onClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1531,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onClickCapture"
							}
						},
						{
							"id": 1320,
							"name": "onCompositionEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1436,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionEnd"
							}
						},
						{
							"id": 1321,
							"name": "onCompositionEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1437,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionEndCapture"
							}
						},
						{
							"id": 1322,
							"name": "onCompositionStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1438,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionStart"
							}
						},
						{
							"id": 1323,
							"name": "onCompositionStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1439,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionStartCapture"
							}
						},
						{
							"id": 1324,
							"name": "onCompositionUpdate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1440,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionUpdate"
							}
						},
						{
							"id": 1325,
							"name": "onCompositionUpdateCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1441,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CompositionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "CompositionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.CompositionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCompositionUpdateCapture"
							}
						},
						{
							"id": 1326,
							"name": "onContextMenu",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1532,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onContextMenu"
							}
						},
						{
							"id": 1327,
							"name": "onContextMenuCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1533,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onContextMenuCapture"
							}
						},
						{
							"id": 1328,
							"name": "onCopy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1428,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCopy"
							}
						},
						{
							"id": 1329,
							"name": "onCopyCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1429,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCopyCapture"
							}
						},
						{
							"id": 1330,
							"name": "onCut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1430,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCut"
							}
						},
						{
							"id": 1331,
							"name": "onCutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1431,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onCutCapture"
							}
						},
						{
							"id": 1332,
							"name": "onDoubleClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1534,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDoubleClick"
							}
						},
						{
							"id": 1333,
							"name": "onDoubleClickCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1535,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDoubleClickCapture"
							}
						},
						{
							"id": 1334,
							"name": "onDrag",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1536,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDrag"
							}
						},
						{
							"id": 1335,
							"name": "onDragCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1537,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragCapture"
							}
						},
						{
							"id": 1336,
							"name": "onDragEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1538,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragEnd"
							}
						},
						{
							"id": 1337,
							"name": "onDragEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1539,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragEndCapture"
							}
						},
						{
							"id": 1338,
							"name": "onDragEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1540,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragEnter"
							}
						},
						{
							"id": 1339,
							"name": "onDragEnterCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1541,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragEnterCapture"
							}
						},
						{
							"id": 1340,
							"name": "onDragExit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1542,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragExit"
							}
						},
						{
							"id": 1341,
							"name": "onDragExitCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1543,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragExitCapture"
							}
						},
						{
							"id": 1342,
							"name": "onDragLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1544,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragLeave"
							}
						},
						{
							"id": 1343,
							"name": "onDragLeaveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1545,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragLeaveCapture"
							}
						},
						{
							"id": 1344,
							"name": "onDragOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1546,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragOver"
							}
						},
						{
							"id": 1345,
							"name": "onDragOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1547,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragOverCapture"
							}
						},
						{
							"id": 1346,
							"name": "onDragStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1548,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragStart"
							}
						},
						{
							"id": 1347,
							"name": "onDragStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1549,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDragStartCapture"
							}
						},
						{
							"id": 1348,
							"name": "onDrop",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1550,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDrop"
							}
						},
						{
							"id": 1349,
							"name": "onDropCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1551,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.DragEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "DragEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.DragEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDropCapture"
							}
						},
						{
							"id": 1350,
							"name": "onDurationChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1486,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDurationChange"
							}
						},
						{
							"id": 1351,
							"name": "onDurationChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1487,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onDurationChangeCapture"
							}
						},
						{
							"id": 1352,
							"name": "onEmptied",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1488,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEmptied"
							}
						},
						{
							"id": 1353,
							"name": "onEmptiedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1489,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEmptiedCapture"
							}
						},
						{
							"id": 1354,
							"name": "onEncrypted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1490,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEncrypted"
							}
						},
						{
							"id": 1355,
							"name": "onEncryptedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1491,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEncryptedCapture"
							}
						},
						{
							"id": 1356,
							"name": "onEnded",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1492,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEnded"
							}
						},
						{
							"id": 1357,
							"name": "onEndedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1493,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onEndedCapture"
							}
						},
						{
							"id": 1358,
							"name": "onError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1466,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onError"
							}
						},
						{
							"id": 1359,
							"name": "onErrorCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1467,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onErrorCapture"
							}
						},
						{
							"id": 1360,
							"name": "onFocus",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1444,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onFocus"
							}
						},
						{
							"id": 1361,
							"name": "onFocusCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1445,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FocusEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FocusEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FocusEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onFocusCapture"
							}
						},
						{
							"id": 1362,
							"name": "onGotPointerCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1596,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onGotPointerCapture"
							}
						},
						{
							"id": 1363,
							"name": "onGotPointerCaptureCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1597,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onGotPointerCaptureCapture"
							}
						},
						{
							"id": 1364,
							"name": "onInput",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1454,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onInput"
							}
						},
						{
							"id": 1365,
							"name": "onInputCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1455,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onInputCapture"
							}
						},
						{
							"id": 1366,
							"name": "onInvalid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1460,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onInvalid"
							}
						},
						{
							"id": 1367,
							"name": "onInvalidCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1461,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onInvalidCapture"
							}
						},
						{
							"id": 1368,
							"name": "onKeyDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1470,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyDown"
							}
						},
						{
							"id": 1369,
							"name": "onKeyDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1471,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyDownCapture"
							}
						},
						{
							"id": 1370,
							"name": "onKeyPress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1473,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyPress"
							}
						},
						{
							"id": 1371,
							"name": "onKeyPressCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1475,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyPressCapture"
							}
						},
						{
							"id": 1372,
							"name": "onKeyUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1476,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyUp"
							}
						},
						{
							"id": 1373,
							"name": "onKeyUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1477,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.KeyboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "KeyboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.KeyboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onKeyUpCapture"
							}
						},
						{
							"id": 1374,
							"name": "onLoad",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1464,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoad"
							}
						},
						{
							"id": 1375,
							"name": "onLoadCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1465,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadCapture"
							}
						},
						{
							"id": 1376,
							"name": "onLoadStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1498,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadStart"
							}
						},
						{
							"id": 1377,
							"name": "onLoadStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1499,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadStartCapture"
							}
						},
						{
							"id": 1378,
							"name": "onLoadedData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1494,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadedData"
							}
						},
						{
							"id": 1379,
							"name": "onLoadedDataCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1495,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadedDataCapture"
							}
						},
						{
							"id": 1380,
							"name": "onLoadedMetadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1496,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadedMetadata"
							}
						},
						{
							"id": 1381,
							"name": "onLoadedMetadataCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1497,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLoadedMetadataCapture"
							}
						},
						{
							"id": 1382,
							"name": "onLostPointerCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1598,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLostPointerCapture"
							}
						},
						{
							"id": 1383,
							"name": "onLostPointerCaptureCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1599,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onLostPointerCaptureCapture"
							}
						},
						{
							"id": 1384,
							"name": "onMouseDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1552,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseDown"
							}
						},
						{
							"id": 1385,
							"name": "onMouseDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1553,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseDownCapture"
							}
						},
						{
							"id": 1386,
							"name": "onMouseEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1554,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseEnter"
							}
						},
						{
							"id": 1387,
							"name": "onMouseLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1555,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseLeave"
							}
						},
						{
							"id": 1388,
							"name": "onMouseMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1556,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseMove"
							}
						},
						{
							"id": 1389,
							"name": "onMouseMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1557,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseMoveCapture"
							}
						},
						{
							"id": 1390,
							"name": "onMouseOut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1558,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseOut"
							}
						},
						{
							"id": 1391,
							"name": "onMouseOutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1559,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseOutCapture"
							}
						},
						{
							"id": 1392,
							"name": "onMouseOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1560,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseOver"
							}
						},
						{
							"id": 1393,
							"name": "onMouseOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1561,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseOverCapture"
							}
						},
						{
							"id": 1394,
							"name": "onMouseUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1562,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseUp"
							}
						},
						{
							"id": 1395,
							"name": "onMouseUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1563,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.MouseEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "MouseEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.MouseEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onMouseUpCapture"
							}
						},
						{
							"id": 1396,
							"name": "onPaste",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1432,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPaste"
							}
						},
						{
							"id": 1397,
							"name": "onPasteCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1433,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ClipboardEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ClipboardEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ClipboardEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPasteCapture"
							}
						},
						{
							"id": 1398,
							"name": "onPause",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1500,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPause"
							}
						},
						{
							"id": 1399,
							"name": "onPauseCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1501,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPauseCapture"
							}
						},
						{
							"id": 1400,
							"name": "onPlay",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1502,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPlay"
							}
						},
						{
							"id": 1401,
							"name": "onPlayCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1503,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPlayCapture"
							}
						},
						{
							"id": 1402,
							"name": "onPlaying",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1504,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPlaying"
							}
						},
						{
							"id": 1403,
							"name": "onPlayingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1505,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPlayingCapture"
							}
						},
						{
							"id": 1404,
							"name": "onPointerCancel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1586,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerCancel"
							}
						},
						{
							"id": 1405,
							"name": "onPointerCancelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1587,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerCancelCapture"
							}
						},
						{
							"id": 1406,
							"name": "onPointerDown",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1580,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerDown"
							}
						},
						{
							"id": 1407,
							"name": "onPointerDownCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1581,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerDownCapture"
							}
						},
						{
							"id": 1408,
							"name": "onPointerEnter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1588,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerEnter"
							}
						},
						{
							"id": 1409,
							"name": "onPointerEnterCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1589,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerEnterCapture"
							}
						},
						{
							"id": 1410,
							"name": "onPointerLeave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1590,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerLeave"
							}
						},
						{
							"id": 1411,
							"name": "onPointerLeaveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1591,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerLeaveCapture"
							}
						},
						{
							"id": 1412,
							"name": "onPointerMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1582,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerMove"
							}
						},
						{
							"id": 1413,
							"name": "onPointerMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1583,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerMoveCapture"
							}
						},
						{
							"id": 1414,
							"name": "onPointerOut",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1594,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerOut"
							}
						},
						{
							"id": 1415,
							"name": "onPointerOutCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1595,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerOutCapture"
							}
						},
						{
							"id": 1416,
							"name": "onPointerOver",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1592,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerOver"
							}
						},
						{
							"id": 1417,
							"name": "onPointerOverCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1593,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerOverCapture"
							}
						},
						{
							"id": 1418,
							"name": "onPointerUp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1584,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerUp"
							}
						},
						{
							"id": 1419,
							"name": "onPointerUpCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1585,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PointerEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "PointerEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.PointerEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onPointerUpCapture"
							}
						},
						{
							"id": 1420,
							"name": "onProgress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1506,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onProgress"
							}
						},
						{
							"id": 1421,
							"name": "onProgressCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1507,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onProgressCapture"
							}
						},
						{
							"id": 1422,
							"name": "onRateChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1508,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onRateChange"
							}
						},
						{
							"id": 1423,
							"name": "onRateChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1509,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onRateChangeCapture"
							}
						},
						{
							"id": 1424,
							"name": "onReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1456,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onReset"
							}
						},
						{
							"id": 1425,
							"name": "onResetCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1457,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onResetCapture"
							}
						},
						{
							"id": 1426,
							"name": "onResize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1510,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onResize"
							}
						},
						{
							"id": 1427,
							"name": "onResizeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1511,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onResizeCapture"
							}
						},
						{
							"id": 1428,
							"name": "onScroll",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1602,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.UIEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "UIEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.UIEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onScroll"
							}
						},
						{
							"id": 1429,
							"name": "onScrollCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1603,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.UIEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "UIEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.UIEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onScrollCapture"
							}
						},
						{
							"id": 1430,
							"name": "onSeeked",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1512,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSeeked"
							}
						},
						{
							"id": 1431,
							"name": "onSeekedCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1513,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSeekedCapture"
							}
						},
						{
							"id": 1432,
							"name": "onSeeking",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1514,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSeeking"
							}
						},
						{
							"id": 1433,
							"name": "onSeekingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1515,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSeekingCapture"
							}
						},
						{
							"id": 1434,
							"name": "onSelect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1566,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSelect"
							}
						},
						{
							"id": 1435,
							"name": "onSelectCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1567,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSelectCapture"
							}
						},
						{
							"id": 1436,
							"name": "onStalled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1516,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onStalled"
							}
						},
						{
							"id": 1437,
							"name": "onStalledCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1517,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onStalledCapture"
							}
						},
						{
							"id": 1438,
							"name": "onSubmit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1458,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSubmit"
							}
						},
						{
							"id": 1439,
							"name": "onSubmitCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1459,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FormEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "FormEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.FormEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSubmitCapture"
							}
						},
						{
							"id": 1440,
							"name": "onSuspend",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1518,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSuspend"
							}
						},
						{
							"id": 1441,
							"name": "onSuspendCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1519,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onSuspendCapture"
							}
						},
						{
							"id": 1442,
							"name": "onTimeUpdate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1520,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTimeUpdate"
							}
						},
						{
							"id": 1443,
							"name": "onTimeUpdateCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1521,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTimeUpdateCapture"
							}
						},
						{
							"id": 1444,
							"name": "onTouchCancel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1570,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchCancel"
							}
						},
						{
							"id": 1445,
							"name": "onTouchCancelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1571,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchCancelCapture"
							}
						},
						{
							"id": 1446,
							"name": "onTouchEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1572,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchEnd"
							}
						},
						{
							"id": 1447,
							"name": "onTouchEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1573,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchEndCapture"
							}
						},
						{
							"id": 1448,
							"name": "onTouchMove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1574,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchMove"
							}
						},
						{
							"id": 1449,
							"name": "onTouchMoveCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1575,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchMoveCapture"
							}
						},
						{
							"id": 1450,
							"name": "onTouchStart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1576,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchStart"
							}
						},
						{
							"id": 1451,
							"name": "onTouchStartCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1577,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TouchEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TouchEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TouchEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTouchStartCapture"
							}
						},
						{
							"id": 1452,
							"name": "onTransitionEnd",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1618,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TransitionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TransitionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TransitionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTransitionEnd"
							}
						},
						{
							"id": 1453,
							"name": "onTransitionEndCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1619,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.TransitionEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "TransitionEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.TransitionEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onTransitionEndCapture"
							}
						},
						{
							"id": 1454,
							"name": "onVolumeChange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1522,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onVolumeChange"
							}
						},
						{
							"id": 1455,
							"name": "onVolumeChangeCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1523,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onVolumeChangeCapture"
							}
						},
						{
							"id": 1456,
							"name": "onWaiting",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1524,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onWaiting"
							}
						},
						{
							"id": 1457,
							"name": "onWaitingCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1525,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "ReactEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.ReactEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onWaitingCapture"
							}
						},
						{
							"id": 1458,
							"name": "onWheel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1606,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.WheelEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "WheelEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.WheelEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onWheel"
							}
						},
						{
							"id": 1459,
							"name": "onWheelCapture",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1607,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.WheelEventHandler"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								],
								"name": "WheelEventHandler",
								"package": "@types/react",
								"qualifiedName": "React.WheelEventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.onWheelCapture"
							}
						},
						{
							"id": 1460,
							"name": "ping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2134,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.ping"
							}
						},
						{
							"id": 1461,
							"name": "placeholder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1938,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.placeholder"
							}
						},
						{
							"id": 1462,
							"name": "prefetch",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the data and module prefetching behavior for the link.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link /> // default\n<Link prefetch=\"none\" />\n<Link prefetch=\"intent\" />\n<Link prefetch=\"render\" />\n<Link prefetch=\"viewport\" />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n- **none** - default, no prefetching\n- **intent** - prefetches when the user hovers or focuses the link\n- **render** - prefetches when the link renders\n- **viewport** - prefetches when the link is in the viewport, very useful for mobile\n\nPrefetching is done with HTML "
									},
									{
										"kind": "code",
										"text": "`<link rel=\"prefetch\">`"
									},
									{
										"kind": "text",
										"text": " tags. They are inserted after the link.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<a href=\"...\" />\n<a href=\"...\" />\n<link rel=\"prefetch\" /> // might conditionally render\n```"
									},
									{
										"kind": "text",
										"text": "\n\nBecause of this, if you are using "
									},
									{
										"kind": "code",
										"text": "`nav :last-child`"
									},
									{
										"kind": "text",
										"text": " you will need to use "
									},
									{
										"kind": "code",
										"text": "`nav :last-of-type`"
									},
									{
										"kind": "text",
										"text": " so the styles don't conditionally fall off your last link (and any other similar selectors)."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 423,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L423"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
									"qualifiedName": "PrefetchBehavior"
								},
								"name": "PrefetchBehavior",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.prefetch"
							}
						},
						{
							"id": 1463,
							"name": "prefix",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1957,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.prefix"
							}
						},
						{
							"id": 1464,
							"name": "preventScrollReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prevents the scroll position from being reset to the top of the window when the link is clicked and the app is using "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ScrollRestoration",
										"target": 2317,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ". This only prevents new locations reseting scroll to the top, scroll position will be restored for back/forward button navigation.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link to=\"?tab=one\" preventScrollReset />\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 481,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L481"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.preventScrollReset"
							}
						},
						{
							"id": 1465,
							"name": "property",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1958,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.property"
							}
						},
						{
							"id": 1466,
							"name": "radioGroup",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1947,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.radioGroup"
							}
						},
						{
							"id": 1467,
							"name": "referrerPolicy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2137,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.HTMLAttributeReferrerPolicy"
								},
								"name": "HTMLAttributeReferrerPolicy",
								"package": "@types/react",
								"qualifiedName": "React.HTMLAttributeReferrerPolicy"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.referrerPolicy"
							}
						},
						{
							"id": 1468,
							"name": "rel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1959,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.rel"
							}
						},
						{
							"id": 1469,
							"name": "relative",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the relative path behavior for the link.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link to=\"..\" /> // default: \"route\"\n<Link relative=\"route\" />\n<Link relative=\"path\" />\n```"
									},
									{
										"kind": "text",
										"text": "\n\nConsider a route hierarchy where a parent route pattern is \"blog\" and a child route pattern is \"blog/:slug/edit\".\n\n- **route** - default, resolves the link relative to the route pattern. In the example above a relative link of "
									},
									{
										"kind": "code",
										"text": "`\"..\"`"
									},
									{
										"kind": "text",
										"text": " will remove both "
									},
									{
										"kind": "code",
										"text": "`:slug/edit`"
									},
									{
										"kind": "text",
										"text": " segments back to \"/blog\".\n- **path** - relative to the path so "
									},
									{
										"kind": "code",
										"text": "`..`"
									},
									{
										"kind": "text",
										"text": " will only remove one URL segment up to \"/blog/:slug\""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 497,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L497"
								}
							],
							"type": {
								"type": "reference",
								"target": 2192,
								"name": "RelativeRoutingType",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.relative"
							}
						},
						{
							"id": 1470,
							"name": "reloadDocument",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Will use document navigation instead of client side routing when the link is clicked: the browser will handle the transition normally (as if it were an "
									},
									{
										"kind": "code",
										"text": "`<a href>`"
									},
									{
										"kind": "text",
										"text": ").\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link to=\"/logout\" reloadDocument />\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 432,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L432"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.reloadDocument"
							}
						},
						{
							"id": 1471,
							"name": "replace",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replaces the current entry in the history stack instead of pushing a new one onto it.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link replace />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n"
									},
									{
										"kind": "code",
										"text": "```\n# with a history stack like this\nA -> B\n\n# normal link click pushes a new entry\nA -> B -> C\n\n# but with `replace`, B is replaced by C\nA -> C\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 452,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L452"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.replace"
							}
						},
						{
							"id": 1472,
							"name": "resource",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1960,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.resource"
							}
						},
						{
							"id": 1473,
							"name": "results",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1975,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.results"
							}
						},
						{
							"id": 1474,
							"name": "rev",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1961,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.rev"
							}
						},
						{
							"id": 1475,
							"name": "role",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1950,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.AriaRole"
								},
								"name": "AriaRole",
								"package": "@types/react",
								"qualifiedName": "React.AriaRole"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.role"
							}
						},
						{
							"id": 1476,
							"name": "security",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1976,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.security"
							}
						},
						{
							"id": 1477,
							"name": "slot",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1939,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.slot"
							}
						},
						{
							"id": 1478,
							"name": "spellCheck",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1940,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "Booleanish"
								},
								"name": "Booleanish",
								"package": "@types/react"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.spellCheck"
							}
						},
						{
							"id": 1479,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds persistent client side routing state to the next location.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link to=\"/somewhere/else\" state={{ some: \"value\" }} />\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe location state is accessed from the "
									},
									{
										"kind": "code",
										"text": "`location`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nfunction SomeComp() {\n  const location = useLocation()\n  location.state; // { some: \"value\" }\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThis state is inaccessible on the server as it is implemented on top of ["
									},
									{
										"kind": "code",
										"text": "`history.state`"
									},
									{
										"kind": "text",
										"text": "](https://developer.mozilla.org/en-US/docs/Web/API/History/state)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 472,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L472"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.state"
							}
						},
						{
							"id": 1480,
							"name": "style",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 763,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L763"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.CSSProperties"
										},
										"name": "CSSProperties",
										"package": "@types/react",
										"qualifiedName": "React.CSSProperties"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1481,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 765,
													"character": 7,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L765"
												}
											],
											"signatures": [
												{
													"id": 1482,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 765,
															"character": 7,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L765"
														}
													],
													"parameters": [
														{
															"id": 1483,
															"name": "props",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 2142,
																"name": "NavLinkRenderProps",
																"package": "react-router"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
																	"qualifiedName": "React.CSSProperties"
																},
																"name": "CSSProperties",
																"package": "@types/react",
																"qualifiedName": "React.CSSProperties"
															}
														]
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1484,
							"name": "suppressContentEditableWarning",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1923,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.suppressContentEditableWarning"
							}
						},
						{
							"id": 1485,
							"name": "suppressHydrationWarning",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1924,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.suppressHydrationWarning"
							}
						},
						{
							"id": 1486,
							"name": "tabIndex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1942,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.tabIndex"
							}
						},
						{
							"id": 1487,
							"name": "target",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2135,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.HTMLAttributeAnchorTarget"
								},
								"name": "HTMLAttributeAnchorTarget",
								"package": "@types/react",
								"qualifiedName": "React.HTMLAttributeAnchorTarget"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.target"
							}
						},
						{
							"id": 1488,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1943,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.title"
							}
						},
						{
							"id": 1489,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Can be a string or a partial "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Path",
										"target": 1568
									},
									{
										"kind": "text",
										"text": ":\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Link to=\"/some/path\" />\n\n<Link\n  to={{\n    pathname: \"/some/path\",\n    search: \"?query=string\",\n    hash: \"#hash\",\n  }}\n/>\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 514,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L514"
								}
							],
							"type": {
								"type": "reference",
								"target": 2222,
								"name": "To",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.to"
							}
						},
						{
							"id": 1490,
							"name": "translate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1944,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "yes"
									},
									{
										"type": "literal",
										"value": "no"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.translate"
							}
						},
						{
							"id": 1491,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 2136,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.type"
							}
						},
						{
							"id": 1492,
							"name": "typeof",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1962,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.typeof"
							}
						},
						{
							"id": 1493,
							"name": "unselectable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1977,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "on"
									},
									{
										"type": "literal",
										"value": "off"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.unselectable"
							}
						},
						{
							"id": 1494,
							"name": "unstable_viewTransition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enables a [View Transition](https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API) for this navigation.\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\n<Link to={to} unstable_viewTransition>\n  Click me\n</Link>\n```"
									},
									{
										"kind": "text",
										"text": "\n\nTo apply specific styles for the transition, see "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useViewTransitionState",
										"target": 2564,
										"tsLinkText": ""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 527,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L527"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.unstable_viewTransition"
							}
						},
						{
							"id": 1495,
							"name": "vocab",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 1963,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.vocab"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1201,
								1202,
								1203,
								1204,
								1205,
								1206,
								1207,
								1208,
								1209,
								1210,
								1211,
								1212,
								1213,
								1214,
								1215,
								1216,
								1217,
								1218,
								1219,
								1220,
								1221,
								1222,
								1223,
								1224,
								1225,
								1226,
								1227,
								1228,
								1229,
								1230,
								1231,
								1232,
								1233,
								1234,
								1235,
								1236,
								1237,
								1238,
								1239,
								1240,
								1241,
								1242,
								1243,
								1244,
								1245,
								1246,
								1247,
								1248,
								1249,
								1250,
								1251,
								1252,
								1253,
								1254,
								1255,
								1256,
								1257,
								1258,
								1259,
								1260,
								1261,
								1265,
								1269,
								1270,
								1271,
								1272,
								1273,
								1276,
								1277,
								1278,
								1279,
								1280,
								1281,
								1282,
								1283,
								1284,
								1285,
								1286,
								1287,
								1288,
								1289,
								1290,
								1291,
								1292,
								1293,
								1294,
								1295,
								1296,
								1297,
								1298,
								1299,
								1300,
								1301,
								1302,
								1303,
								1304,
								1305,
								1306,
								1307,
								1308,
								1309,
								1310,
								1311,
								1312,
								1313,
								1314,
								1315,
								1316,
								1317,
								1318,
								1319,
								1320,
								1321,
								1322,
								1323,
								1324,
								1325,
								1326,
								1327,
								1328,
								1329,
								1330,
								1331,
								1332,
								1333,
								1334,
								1335,
								1336,
								1337,
								1338,
								1339,
								1340,
								1341,
								1342,
								1343,
								1344,
								1345,
								1346,
								1347,
								1348,
								1349,
								1350,
								1351,
								1352,
								1353,
								1354,
								1355,
								1356,
								1357,
								1358,
								1359,
								1360,
								1361,
								1362,
								1363,
								1364,
								1365,
								1366,
								1367,
								1368,
								1369,
								1370,
								1371,
								1372,
								1373,
								1374,
								1375,
								1376,
								1377,
								1378,
								1379,
								1380,
								1381,
								1382,
								1383,
								1384,
								1385,
								1386,
								1387,
								1388,
								1389,
								1390,
								1391,
								1392,
								1393,
								1394,
								1395,
								1396,
								1397,
								1398,
								1399,
								1400,
								1401,
								1402,
								1403,
								1404,
								1405,
								1406,
								1407,
								1408,
								1409,
								1410,
								1411,
								1412,
								1413,
								1414,
								1415,
								1416,
								1417,
								1418,
								1419,
								1420,
								1421,
								1422,
								1423,
								1424,
								1425,
								1426,
								1427,
								1428,
								1429,
								1430,
								1431,
								1432,
								1433,
								1434,
								1435,
								1436,
								1437,
								1438,
								1439,
								1440,
								1441,
								1442,
								1443,
								1444,
								1445,
								1446,
								1447,
								1448,
								1449,
								1450,
								1451,
								1452,
								1453,
								1454,
								1455,
								1456,
								1457,
								1458,
								1459,
								1460,
								1461,
								1462,
								1463,
								1464,
								1465,
								1466,
								1467,
								1468,
								1469,
								1470,
								1471,
								1472,
								1473,
								1474,
								1475,
								1476,
								1477,
								1478,
								1479,
								1480,
								1484,
								1485,
								1486,
								1487,
								1488,
								1489,
								1490,
								1491,
								1492,
								1493,
								1494,
								1495
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 711,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L711"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 883,
									"name": "LinkProps",
									"package": "react-router"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "className"
										},
										{
											"type": "literal",
											"value": "style"
										},
										{
											"type": "literal",
											"value": "children"
										}
									]
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					]
				},
				{
					"id": 1496,
					"name": "NavigateFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The interface for the navigate() function returned from useNavigate()."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 180,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L180"
						}
					],
					"signatures": [
						{
							"id": 1497,
							"name": "NavigateFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 181,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L181"
								}
							],
							"parameters": [
								{
									"id": 1498,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2222,
										"name": "To",
										"package": "react-router"
									}
								},
								{
									"id": 1499,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1502,
										"name": "NavigateOptions",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 1500,
							"name": "NavigateFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 182,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L182"
								}
							],
							"parameters": [
								{
									"id": 1501,
									"name": "delta",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				},
				{
					"id": 1502,
					"name": "NavigateOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1503,
							"name": "preventScrollReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 125,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L125"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1504,
							"name": "relative",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 126,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L126"
								}
							],
							"type": {
								"type": "reference",
								"target": 2192,
								"name": "RelativeRoutingType",
								"package": "react-router"
							}
						},
						{
							"id": 1505,
							"name": "replace",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 123,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L123"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1506,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 124,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L124"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1507,
							"name": "unstable_flushSync",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1508,
							"name": "unstable_viewTransition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 128,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L128"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1503,
								1504,
								1505,
								1506,
								1507,
								1508
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 122,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L122"
						}
					]
				},
				{
					"id": 1509,
					"name": "NavigateProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1510,
							"name": "relative",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 529,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L529"
								}
							],
							"type": {
								"type": "reference",
								"target": 2192,
								"name": "RelativeRoutingType",
								"package": "react-router"
							}
						},
						{
							"id": 1511,
							"name": "replace",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 527,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L527"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1512,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 528,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L528"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1513,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 526,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L526"
								}
							],
							"type": {
								"type": "reference",
								"target": 2222,
								"name": "To",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1510,
								1511,
								1512,
								1513
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 525,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L525"
						}
					]
				},
				{
					"id": 1514,
					"name": "Navigator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A Navigator is a \"location changer\"; it's how you get to different locations.\n\nEvery history instance conforms to the Navigator interface, but the\ndistinction is useful primarily when it comes to the low-level "
							},
							{
								"kind": "code",
								"text": "`<Router>`"
							},
							{
								"kind": "text",
								"text": " API\nwhere both the location and a navigator must be provided separately in order\nto avoid \"tearing\" that may occur in a suspense-enabled app if the action\nand/or location were to be read directly from the history instance."
							}
						]
					},
					"children": [
						{
							"id": 1515,
							"name": "createHref",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 141,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L141"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1516,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/history.ts",
											"line": 133,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L133"
										}
									],
									"signatures": [
										{
											"id": 1517,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Returns a valid href for the given "
													},
													{
														"kind": "code",
														"text": "`to`"
													},
													{
														"kind": "text",
														"text": " value that may be used as\nthe value of an <a href> attribute."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/history.ts",
													"line": 133,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L133"
												}
											],
											"parameters": [
												{
													"id": 1518,
													"name": "to",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The destination URL"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": 2222,
														"name": "To",
														"package": "react-router"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 1519,
							"name": "encodeLocation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L143"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1520,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/history.ts",
											"line": 149,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L149"
										}
									],
									"signatures": [
										{
											"id": 1521,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Encode a location the same way window.history would do (no-op for memory\nhistory) so we ensure our PUSH/REPLACE navigations for data routers\nbehave the same as POP"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/history.ts",
													"line": 149,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L149"
												}
											],
											"parameters": [
												{
													"id": 1522,
													"name": "to",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Unencoded path"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": 2222,
														"name": "To",
														"package": "react-router"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 1568,
												"name": "Path",
												"package": "react-router"
											}
										}
									]
								}
							}
						},
						{
							"id": 1523,
							"name": "go",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 144,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L144"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1524,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/history.ts",
											"line": 176,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L176"
										}
									],
									"signatures": [
										{
											"id": 1525,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Navigates "
													},
													{
														"kind": "code",
														"text": "`n`"
													},
													{
														"kind": "text",
														"text": " entries backward/forward in the history stack relative to the\ncurrent index. For example, a \"back\" navigation would use go(-1)."
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/history.ts",
													"line": 176,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L176"
												}
											],
											"parameters": [
												{
													"id": 1526,
													"name": "delta",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The delta in the stack index"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 1527,
							"name": "push",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 145,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L145"
								}
							],
							"signatures": [
								{
									"id": 1528,
									"name": "push",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/context.ts",
											"line": 145,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L145"
										}
									],
									"parameters": [
										{
											"id": 1529,
											"name": "to",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2222,
												"name": "To",
												"package": "react-router"
											}
										},
										{
											"id": 1530,
											"name": "state",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1531,
											"name": "opts",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1502,
												"name": "NavigateOptions",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 1532,
							"name": "replace",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 146,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L146"
								}
							],
							"signatures": [
								{
									"id": 1533,
									"name": "replace",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/context.ts",
											"line": 146,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L146"
										}
									],
									"parameters": [
										{
											"id": 1534,
											"name": "to",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2222,
												"name": "To",
												"package": "react-router"
											}
										},
										{
											"id": 1535,
											"name": "state",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1536,
											"name": "opts",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1502,
												"name": "NavigateOptions",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1515,
								1519,
								1523
							]
						},
						{
							"title": "Methods",
							"children": [
								1527,
								1532
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 140,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L140"
						}
					]
				},
				{
					"id": 1537,
					"name": "NonIndexRouteObject",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1538,
							"name": "Component",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 57,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L57"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1539,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 1540,
							"name": "ErrorBoundary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 59,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L59"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1541,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 1542,
							"name": "HydrateFallback",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 58,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L58"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1543,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 1544,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 48,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L48"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 129,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ActionFunction",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 1545,
							"name": "caseSensitive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 44,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L44"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1546,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 53,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L53"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2199,
									"name": "RouteObject",
									"package": "react-router"
								}
							}
						},
						{
							"id": 1547,
							"name": "element",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 54,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L54"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 1548,
							"name": "errorElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 56,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L56"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 1549,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 51,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L51"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1550,
							"name": "hasErrorBoundary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 49,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L49"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1551,
							"name": "hydrateFallbackElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 55,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L55"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 1552,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 46,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L46"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1553,
							"name": "index",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 52,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L52"
								}
							],
							"type": {
								"type": "literal",
								"value": false
							}
						},
						{
							"id": 1554,
							"name": "lazy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 60,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L60"
								}
							],
							"type": {
								"type": "reference",
								"target": 880,
								"typeArguments": [
									{
										"type": "reference",
										"target": 2199,
										"name": "RouteObject",
										"package": "react-router"
									}
								],
								"name": "LazyRouteFunction",
								"package": "react-router"
							}
						},
						{
							"id": 1555,
							"name": "loader",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 47,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L47"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 2096,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "LoaderFunction",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 1556,
							"name": "path",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 45,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L45"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1557,
							"name": "shouldRevalidate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/context.ts",
									"line": 50,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L50"
								}
							],
							"type": {
								"type": "reference",
								"target": 1835,
								"name": "ShouldRevalidateFunction",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1538,
								1540,
								1542,
								1544,
								1545,
								1546,
								1547,
								1548,
								1549,
								1550,
								1551,
								1552,
								1553,
								1554,
								1555,
								1556,
								1557
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 43,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L43"
						}
					]
				},
				{
					"id": 1558,
					"name": "OutletProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1559,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Provides a context value to the element tree below the outlet. Use when the parent route needs to provide values to child routes.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<Outlet context={myContextValue} />\n```"
									},
									{
										"kind": "text",
										"text": "\n\nAccess the context with "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useOutletContext",
										"target": 2647
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 597,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L597"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1559
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 587,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L587"
						}
					]
				},
				{
					"id": 1560,
					"name": "PageLinkDescriptor",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1561,
							"name": "crossOrigin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "How the element handles crossorigin requests"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/links.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/links.ts#L16"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "anonymous"
									},
									{
										"type": "literal",
										"value": "use-credentials"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.crossOrigin"
							}
						},
						{
							"id": 1562,
							"name": "disabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the link is disabled"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/links.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/links.ts#L113"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.disabled"
							}
						},
						{
							"id": 1563,
							"name": "hrefLang",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Language of the linked resource"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/links.ts",
									"line": 51,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/links.ts#L51"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.hrefLang"
							}
						},
						{
							"id": 1564,
							"name": "integrity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integrity metadata used in Subresource Integrity checks"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/links.ts",
									"line": 46,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/links.ts#L46"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.integrity"
							}
						},
						{
							"id": 1565,
							"name": "media",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Applicable media: \"screen\", \"print\", \"(max-width: 764px)\""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/links.ts",
									"line": 41,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/links.ts#L41"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.media"
							}
						},
						{
							"id": 1566,
							"name": "page",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The absolute path of the page to prefetch."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/links.ts",
									"line": 189,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/links.ts#L189"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1567,
							"name": "referrerPolicy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Referrer policy for fetches initiated by the element"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/links.ts",
									"line": 61,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/links.ts#L61"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": ""
									},
									{
										"type": "literal",
										"value": "no-referrer"
									},
									{
										"type": "literal",
										"value": "no-referrer-when-downgrade"
									},
									{
										"type": "literal",
										"value": "same-origin"
									},
									{
										"type": "literal",
										"value": "origin"
									},
									{
										"type": "literal",
										"value": "strict-origin"
									},
									{
										"type": "literal",
										"value": "origin-when-cross-origin"
									},
									{
										"type": "literal",
										"value": "strict-origin-when-cross-origin"
									},
									{
										"type": "literal",
										"value": "unsafe-url"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.referrerPolicy"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1561,
								1562,
								1563,
								1564,
								1565,
								1566,
								1567
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/links.ts",
							"line": 173,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/links.ts#L173"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "packages/react-router/lib/server-runtime/links.ts",
										"qualifiedName": "HtmlLinkDescriptor"
									},
									"name": "HtmlLinkDescriptor",
									"package": "react-router"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "href"
										},
										{
											"type": "literal",
											"value": "rel"
										},
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "sizes"
										},
										{
											"type": "literal",
											"value": "imageSrcSet"
										},
										{
											"type": "literal",
											"value": "imageSizes"
										},
										{
											"type": "literal",
											"value": "as"
										},
										{
											"type": "literal",
											"value": "color"
										},
										{
											"type": "literal",
											"value": "title"
										}
									]
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					]
				},
				{
					"id": 1568,
					"name": "Path",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The pathname, search, and hash values of a URL."
							}
						]
					},
					"children": [
						{
							"id": 1569,
							"name": "hash",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A URL fragment identifier, beginning with a #."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 49,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L49"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1570,
							"name": "pathname",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A URL pathname, beginning with a /."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1571,
							"name": "search",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A URL search string, beginning with a ?."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 44,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L44"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1569,
								1570,
								1571
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/history.ts",
							"line": 35,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L35"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 1175,
							"name": "Location"
						}
					]
				},
				{
					"id": 1572,
					"name": "PathMatch",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A PathMatch contains info about how a PathPattern matched on a URL pathname."
							}
						]
					},
					"children": [
						{
							"id": 1573,
							"name": "params",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The names and values of dynamic parameters in the URL."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 911,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L911"
								}
							],
							"type": {
								"type": "reference",
								"target": 2183,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1577,
										"name": "ParamKey",
										"package": "react-router",
										"qualifiedName": "PathMatch.ParamKey",
										"refersToTypeParameter": true
									}
								],
								"name": "Params",
								"package": "react-router"
							}
						},
						{
							"id": 1574,
							"name": "pathname",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The portion of the URL pathname that was matched."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 915,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L915"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1575,
							"name": "pathnameBase",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The portion of the URL pathname that was matched before child routes."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 919,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L919"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1576,
							"name": "pattern",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The pattern that was used to match."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 923,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L923"
								}
							],
							"type": {
								"type": "reference",
								"target": 1578,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "PathPattern",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1573,
								1574,
								1575,
								1576
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 907,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L907"
						}
					],
					"typeParameters": [
						{
							"id": 1577,
							"name": "ParamKey",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1578,
					"name": "PathPattern",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A PathPattern is used to match on some portion of a URL pathname."
							}
						]
					},
					"children": [
						{
							"id": 1579,
							"name": "caseSensitive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Should be "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if the static portions of the "
									},
									{
										"kind": "code",
										"text": "`path`"
									},
									{
										"kind": "text",
										"text": " should be matched in\nthe same case."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 897,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L897"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1580,
							"name": "end",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Should be "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if this pattern should match the entire URL pathname."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 901,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L901"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1581,
							"name": "path",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A string to match against a URL pathname. May contain "
									},
									{
										"kind": "code",
										"text": "`:id`"
									},
									{
										"kind": "text",
										"text": "-style segments\nto indicate placeholders for dynamic parameters. May also end with "
									},
									{
										"kind": "code",
										"text": "`/*`"
									},
									{
										"kind": "text",
										"text": " to\nindicate matching the rest of the URL pathname."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 892,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L892"
								}
							],
							"type": {
								"type": "reference",
								"target": 1582,
								"name": "Path",
								"package": "react-router",
								"qualifiedName": "PathPattern.Path",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1579,
								1580,
								1581
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 886,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L886"
						}
					],
					"typeParameters": [
						{
							"id": 1582,
							"name": "Path",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1583,
					"name": "PathRouteProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1584,
							"name": "Component",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 640,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L640"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1585,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 1586,
							"name": "ErrorBoundary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 642,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L642"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1587,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 1588,
							"name": "HydrateFallback",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 641,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L641"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ComponentType"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 1589,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ComponentType",
										"package": "@types/react",
										"qualifiedName": "React.ComponentType"
									}
								]
							}
						},
						{
							"id": 1590,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 631,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L631"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 129,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ActionFunction",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 1591,
							"name": "caseSensitive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 626,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L626"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1592,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 636,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L636"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 1593,
							"name": "element",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 637,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L637"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 1594,
							"name": "errorElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 639,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L639"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 1595,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 634,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L634"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1596,
							"name": "hasErrorBoundary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 632,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L632"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1597,
							"name": "hydrateFallbackElement",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 638,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L638"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 1598,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 628,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L628"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1599,
							"name": "index",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 635,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L635"
								}
							],
							"type": {
								"type": "literal",
								"value": false
							}
						},
						{
							"id": 1600,
							"name": "lazy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 629,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L629"
								}
							],
							"type": {
								"type": "reference",
								"target": 880,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1537,
										"name": "NonIndexRouteObject",
										"package": "react-router"
									}
								],
								"name": "LazyRouteFunction",
								"package": "react-router"
							}
						},
						{
							"id": 1601,
							"name": "loader",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 630,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L630"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": 2096,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "LoaderFunction",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 1602,
							"name": "path",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 627,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L627"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1603,
							"name": "shouldRevalidate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 633,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L633"
								}
							],
							"type": {
								"type": "reference",
								"target": 1835,
								"name": "ShouldRevalidateFunction",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1584,
								1586,
								1588,
								1590,
								1591,
								1592,
								1593,
								1594,
								1595,
								1596,
								1597,
								1598,
								1599,
								1600,
								1601,
								1602,
								1603
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 625,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L625"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 859,
							"name": "LayoutRouteProps"
						}
					]
				},
				{
					"id": 1604,
					"name": "PrefetchPageDescriptor",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1605,
							"name": "crossOrigin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "How the element handles crossorigin requests"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/links.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/links.ts#L25"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "anonymous"
									},
									{
										"type": "literal",
										"value": "use-credentials"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.crossOrigin"
							}
						},
						{
							"id": 1606,
							"name": "disabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the link is disabled"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/links.ts",
									"line": 122,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/links.ts#L122"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.disabled"
							}
						},
						{
							"id": 1607,
							"name": "hrefLang",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Language of the linked resource"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/links.ts",
									"line": 60,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/links.ts#L60"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.hrefLang"
							}
						},
						{
							"id": 1608,
							"name": "integrity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Integrity metadata used in Subresource Integrity checks"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/links.ts",
									"line": 55,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/links.ts#L55"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.integrity"
							}
						},
						{
							"id": 1609,
							"name": "media",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Applicable media: \"screen\", \"print\", \"(max-width: 764px)\""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/links.ts",
									"line": 50,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/links.ts#L50"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.media"
							}
						},
						{
							"id": 1610,
							"name": "page",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The absolute path of the page to prefetch."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/links.ts",
									"line": 198,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/links.ts#L198"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1611,
							"name": "referrerPolicy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Referrer policy for fetches initiated by the element"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/links.ts",
									"line": 70,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/links.ts#L70"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": ""
									},
									{
										"type": "literal",
										"value": "no-referrer"
									},
									{
										"type": "literal",
										"value": "no-referrer-when-downgrade"
									},
									{
										"type": "literal",
										"value": "same-origin"
									},
									{
										"type": "literal",
										"value": "origin"
									},
									{
										"type": "literal",
										"value": "strict-origin"
									},
									{
										"type": "literal",
										"value": "origin-when-cross-origin"
									},
									{
										"type": "literal",
										"value": "strict-origin-when-cross-origin"
									},
									{
										"type": "literal",
										"value": "unsafe-url"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.referrerPolicy"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1605,
								1606,
								1607,
								1608,
								1609,
								1610,
								1611
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/links.ts",
							"line": 182,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/links.ts#L182"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 2076,
									"name": "HtmlLinkDescriptor",
									"package": "react-router"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "href"
										},
										{
											"type": "literal",
											"value": "rel"
										},
										{
											"type": "literal",
											"value": "type"
										},
										{
											"type": "literal",
											"value": "sizes"
										},
										{
											"type": "literal",
											"value": "imageSrcSet"
										},
										{
											"type": "literal",
											"value": "imageSizes"
										},
										{
											"type": "literal",
											"value": "as"
										},
										{
											"type": "literal",
											"value": "color"
										},
										{
											"type": "literal",
											"value": "title"
										}
									]
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					]
				},
				{
					"id": 1612,
					"name": "RemixRouter",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A Router instance manages all navigation and data loading/mutations"
							}
						]
					},
					"children": [
						{
							"id": 1613,
							"name": "_internalFetchControllers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "PRIVATE - DO NOT USE\n\nInternal fetch AbortControllers accessed by unit tests"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 268,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L268"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2015.collection.d.ts",
									"qualifiedName": "Map"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "AbortController"
										},
										"name": "AbortController",
										"package": "typescript"
									}
								],
								"name": "Map",
								"package": "typescript"
							}
						},
						{
							"id": 1614,
							"name": "basename",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 65,
									"character": 6,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L65"
								}
							],
							"getSignature": {
								"id": 1615,
								"name": "basename",
								"variant": "signature",
								"kind": 524288,
								"flags": {
									"isPrivate": true
								},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "PRIVATE - DO NOT USE\n\nReturn the basename for the router"
										}
									]
								},
								"sources": [
									{
										"fileName": "packages/react-router/lib/router/router.ts",
										"line": 65,
										"character": 6,
										"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L65"
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "undefined"
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								}
							}
						},
						{
							"id": 1616,
							"name": "future",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 73,
									"character": 6,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L73"
								}
							],
							"getSignature": {
								"id": 1617,
								"name": "future",
								"variant": "signature",
								"kind": 524288,
								"flags": {
									"isPrivate": true
								},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "PRIVATE - DO NOT USE\n\nReturn the future config for the router"
										}
									]
								},
								"sources": [
									{
										"fileName": "packages/react-router/lib/router/router.ts",
										"line": 73,
										"character": 6,
										"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L73"
									}
								],
								"type": {
									"type": "reference",
									"target": {
										"sourceFileName": "packages/react-router/lib/router/router.ts",
										"qualifiedName": "FutureConfig"
									},
									"name": "FutureConfig",
									"package": "react-router"
								}
							}
						},
						{
							"id": 1618,
							"name": "routes",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 89,
									"character": 6,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L89"
								}
							],
							"getSignature": {
								"id": 1619,
								"name": "routes",
								"variant": "signature",
								"kind": 524288,
								"flags": {
									"isPrivate": true
								},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "PRIVATE - DO NOT USE\n\nReturn the routes for this router instance"
										}
									]
								},
								"sources": [
									{
										"fileName": "packages/react-router/lib/router/router.ts",
										"line": 89,
										"character": 6,
										"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L89"
									}
								],
								"type": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/utils.ts",
											"qualifiedName": "AgnosticDataRouteObject"
										},
										"name": "AgnosticDataRouteObject",
										"package": "react-router"
									}
								}
							}
						},
						{
							"id": 1620,
							"name": "state",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 81,
									"character": 6,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L81"
								}
							],
							"getSignature": {
								"id": 1621,
								"name": "state",
								"variant": "signature",
								"kind": 524288,
								"flags": {
									"isPrivate": true
								},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "PRIVATE - DO NOT USE\n\nReturn the current state of the router"
										}
									]
								},
								"sources": [
									{
										"fileName": "packages/react-router/lib/router/router.ts",
										"line": 81,
										"character": 6,
										"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L81"
									}
								],
								"type": {
									"type": "reference",
									"target": 1713,
									"name": "RouterState",
									"package": "react-router"
								}
							}
						},
						{
							"id": 1622,
							"name": "window",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 97,
									"character": 6,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L97"
								}
							],
							"getSignature": {
								"id": 1623,
								"name": "window",
								"variant": "signature",
								"kind": 524288,
								"flags": {
									"isPrivate": true
								},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "PRIVATE - DO NOT USE\n\nReturn the window associated with the router"
										}
									]
								},
								"sources": [
									{
										"fileName": "packages/react-router/lib/router/router.ts",
										"line": 97,
										"character": 6,
										"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L97"
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "undefined"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
												"qualifiedName": "Window"
											},
											"name": "Window",
											"package": "typescript"
										}
									]
								}
							}
						},
						{
							"id": 1624,
							"name": "_internalSetRoutes",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 260,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L260"
								}
							],
							"signatures": [
								{
									"id": 1625,
									"name": "_internalSetRoutes",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "PRIVATE - DO NOT USE\n\nHMR needs to pass in-flight route updates to React Router\nTODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 260,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L260"
										}
									],
									"parameters": [
										{
											"id": 1626,
											"name": "routes",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "packages/react-router/lib/router/utils.ts",
														"qualifiedName": "AgnosticRouteObject"
													},
													"name": "AgnosticRouteObject",
													"package": "react-router"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 1627,
							"name": "createHref",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 185,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L185"
								}
							],
							"signatures": [
								{
									"id": 1628,
									"name": "createHref",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "PRIVATE - DO NOT USE\n\nUtility function to create an href for the given location"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 185,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L185"
										}
									],
									"parameters": [
										{
											"id": 1629,
											"name": "location",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 1175,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Location",
														"package": "react-router"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "URL"
														},
														"name": "URL",
														"package": "typescript"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 1630,
							"name": "deleteBlocker",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 240,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L240"
								}
							],
							"signatures": [
								{
									"id": 1631,
									"name": "deleteBlocker",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "PRIVATE - DO NOT USE\n\nDelete a navigation blocker"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 240,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L240"
										}
									],
									"parameters": [
										{
											"id": 1632,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The identifier for the blocker"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 1633,
							"name": "deleteFetcher",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 213,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L213"
								}
							],
							"signatures": [
								{
									"id": 1634,
									"name": "deleteFetcher",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "PRIVATE - DO NOT USE\n\nDelete the fetcher for a given key"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 213,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L213"
										}
									],
									"parameters": [
										{
											"id": 1635,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 1636,
							"name": "dispose",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 221,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L221"
								}
							],
							"signatures": [
								{
									"id": 1637,
									"name": "dispose",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "PRIVATE - DO NOT USE\n\nCleanup listeners and abort any in-progress loads"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 221,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L221"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 1638,
							"name": "enableScrollRestoration",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 130,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L130"
								}
							],
							"signatures": [
								{
									"id": 1639,
									"name": "enableScrollRestoration",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "PRIVATE - DO NOT USE\n\nEnable scroll restoration behavior in the router"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 130,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L130"
										}
									],
									"parameters": [
										{
											"id": 1640,
											"name": "savedScrollPositions",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Object that will manage positions, in case\n                            it's being restored from sessionStorage"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 1641,
											"name": "getScrollPosition",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Function to get the active Y scroll position"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 785,
												"name": "GetScrollPositionFunction",
												"package": "react-router"
											}
										},
										{
											"id": 1642,
											"name": "getKey",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Function to get the key to use for restoration"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 787,
												"name": "GetScrollRestorationKeyFunction",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1643,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/router.ts",
													"line": 134,
													"character": 5,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L134"
												}
											],
											"signatures": [
												{
													"id": 1644,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 134,
															"character": 5,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L134"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 1645,
							"name": "encodeLocation",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 195,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L195"
								}
							],
							"signatures": [
								{
									"id": 1646,
									"name": "encodeLocation",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "PRIVATE - DO NOT USE\n\nUtility function to URL encode a destination path according to the internal\nhistory implementation"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 195,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L195"
										}
									],
									"parameters": [
										{
											"id": 1647,
											"name": "to",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2222,
												"name": "To",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1568,
										"name": "Path",
										"package": "react-router"
									}
								}
							]
						},
						{
							"id": 1648,
							"name": "fetch",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L163"
								}
							],
							"signatures": [
								{
									"id": 1649,
									"name": "fetch",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "PRIVATE - DO NOT USE\n\nTrigger a fetcher load/submission"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 163,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L163"
										}
									],
									"parameters": [
										{
											"id": 1650,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Fetcher key"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1651,
											"name": "routeId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Route that owns the fetcher"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1652,
											"name": "href",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "href to fetch"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 1653,
											"name": "opts",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Fetcher options, (method, submission, etc.)"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2201,
												"name": "RouterFetchOptions",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1654,
							"name": "getBlocker",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 231,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L231"
								}
							],
							"signatures": [
								{
									"id": 1655,
									"name": "getBlocker",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "PRIVATE - DO NOT USE\n\nGet a navigation blocker"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 231,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L231"
										}
									],
									"parameters": [
										{
											"id": 1656,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The identifier for the blocker"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1657,
											"name": "fn",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The blocker function implementation"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1970,
												"name": "BlockerFunction",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1969,
										"name": "Blocker",
										"package": "react-router"
									}
								}
							]
						},
						{
							"id": 1658,
							"name": "getFetcher",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 204,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L204"
								}
							],
							"signatures": [
								{
									"id": 1659,
									"name": "getFetcher",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "PRIVATE - DO NOT USE\n\nGet/create a fetcher for the given key"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 204,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L204"
										}
									],
									"typeParameter": [
										{
											"id": 1660,
											"name": "TData",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"parameters": [
										{
											"id": 1661,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2050,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1660,
												"name": "TData",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										],
										"name": "Fetcher",
										"package": "react-router"
									}
								}
							]
						},
						{
							"id": 1662,
							"name": "initialize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 107,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L107"
								}
							],
							"signatures": [
								{
									"id": 1663,
									"name": "initialize",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "PRIVATE - DO NOT USE\n\nInitialize the router, including adding history listeners and kicking off\ninitial data fetches.  Returns a function to cleanup listeners and abort\nany in-progress loads"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 107,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L107"
										}
									],
									"type": {
										"type": "reference",
										"target": 1612,
										"name": "Router",
										"package": "react-router"
									}
								}
							]
						},
						{
							"id": 1664,
							"name": "navigate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L143"
								},
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 150,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L150"
								}
							],
							"signatures": [
								{
									"id": 1665,
									"name": "navigate",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "PRIVATE - DO NOT USE\n\nNavigate forward/backward in the history stack"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 143,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L143"
										}
									],
									"parameters": [
										{
											"id": 1666,
											"name": "to",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Delta to move in the history stack"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 1667,
									"name": "navigate",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Navigate to the given path"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 150,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L150"
										}
									],
									"parameters": [
										{
											"id": 1668,
											"name": "to",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Path to navigate to"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": 2222,
														"name": "To",
														"package": "react-router"
													}
												]
											}
										},
										{
											"id": 1669,
											"name": "opts",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Navigation options (method, submission, etc.)"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2202,
												"name": "RouterNavigateOptions",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1670,
							"name": "patchRoutes",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 251,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L251"
								}
							],
							"signatures": [
								{
									"id": 1671,
									"name": "patchRoutes",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "PRIVATE DO NOT USE\n\nPatch additional children routes into an existing parent route"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 251,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L251"
										}
									],
									"parameters": [
										{
											"id": 1672,
											"name": "routeId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The parent route id or a callback function accepting "
													},
													{
														"kind": "code",
														"text": "`patch`"
													},
													{
														"kind": "text",
														"text": "\n               to perform batch patching"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 1673,
											"name": "children",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The additional children routes"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "packages/react-router/lib/router/utils.ts",
														"qualifiedName": "AgnosticRouteObject"
													},
													"name": "AgnosticRouteObject",
													"package": "react-router"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 1674,
							"name": "revalidate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 176,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L176"
								}
							],
							"signatures": [
								{
									"id": 1675,
									"name": "revalidate",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "PRIVATE - DO NOT USE\n\nTrigger a revalidation of all current route loaders and fetcher loads"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 176,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L176"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1676,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 117,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L117"
								}
							],
							"signatures": [
								{
									"id": 1677,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "PRIVATE - DO NOT USE\n\nSubscribe to router.state updates"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 117,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L117"
										}
									],
									"parameters": [
										{
											"id": 1678,
											"name": "fn",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "function to call with the new state"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1727,
												"name": "RouterSubscriber",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1679,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/router.ts",
													"line": 117,
													"character": 35,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L117"
												}
											],
											"signatures": [
												{
													"id": 1680,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 117,
															"character": 35,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L117"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1613
							]
						},
						{
							"title": "Accessors",
							"children": [
								1614,
								1616,
								1618,
								1620,
								1622
							]
						},
						{
							"title": "Methods",
							"children": [
								1624,
								1627,
								1630,
								1633,
								1636,
								1638,
								1645,
								1648,
								1654,
								1658,
								1662,
								1664,
								1670,
								1674,
								1676
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 58,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L58"
						}
					]
				},
				{
					"id": 1681,
					"name": "RouteMatch",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1682,
							"name": "params",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The names and values of dynamic parameters in the URL."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 396,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L396"
								}
							],
							"type": {
								"type": "reference",
								"target": 2183,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1686,
										"name": "ParamKey",
										"package": "react-router",
										"qualifiedName": "RouteMatch.ParamKey",
										"refersToTypeParameter": true
									}
								],
								"name": "Params",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AgnosticRouteMatch.params"
							}
						},
						{
							"id": 1683,
							"name": "pathname",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The portion of the URL pathname that was matched."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 400,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L400"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AgnosticRouteMatch.pathname"
							}
						},
						{
							"id": 1684,
							"name": "pathnameBase",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The portion of the URL pathname that was matched before child routes."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 404,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L404"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AgnosticRouteMatch.pathnameBase"
							}
						},
						{
							"id": 1685,
							"name": "route",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The route object that was used to match."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 408,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L408"
								}
							],
							"type": {
								"type": "reference",
								"target": 1687,
								"name": "RouteObjectType",
								"package": "react-router",
								"qualifiedName": "RouteMatch.RouteObjectType",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AgnosticRouteMatch.route"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1682,
								1683,
								1684,
								1685
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 70,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L70"
						}
					],
					"typeParameters": [
						{
							"id": 1686,
							"name": "ParamKey",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1687,
							"name": "RouteObjectType",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2199,
								"name": "RouteObject",
								"package": "react-router"
							},
							"default": {
								"type": "reference",
								"target": 2199,
								"name": "RouteObject",
								"package": "react-router"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/router/utils.ts",
								"qualifiedName": "AgnosticRouteMatch"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 1686,
									"name": "ParamKey",
									"package": "react-router",
									"qualifiedName": "RouteMatch.ParamKey",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": 1687,
									"name": "RouteObjectType",
									"package": "react-router",
									"qualifiedName": "RouteMatch.RouteObjectType",
									"refersToTypeParameter": true
								}
							],
							"name": "AgnosticRouteMatch",
							"package": "react-router"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 181,
							"name": "DataRouteMatch"
						}
					]
				},
				{
					"id": 1688,
					"name": "RouterInit",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Initialization options for createRouter"
							}
						]
					},
					"children": [
						{
							"id": 1689,
							"name": "basename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 366,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L366"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1690,
							"name": "future",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 368,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L368"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/router.ts",
											"qualifiedName": "FutureConfig"
										},
										"name": "FutureConfig",
										"package": "react-router"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 1691,
							"name": "history",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 365,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L365"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/history.ts",
									"qualifiedName": "History"
								},
								"name": "History",
								"package": "react-router"
							}
						},
						{
							"id": 1692,
							"name": "hydrationData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 369,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L369"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Pick"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1713,
												"name": "RouterState",
												"package": "react-router"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "loaderData"
													},
													{
														"type": "literal",
														"value": "actionData"
													},
													{
														"type": "literal",
														"value": "errors"
													}
												]
											}
										],
										"name": "Pick",
										"package": "typescript"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 1693,
							"name": "mapRouteProperties",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 367,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L367"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "MapRoutePropertiesFunction"
								},
								"name": "MapRoutePropertiesFunction",
								"package": "react-router"
							}
						},
						{
							"id": 1694,
							"name": "routes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 364,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L364"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "packages/react-router/lib/router/utils.ts",
										"qualifiedName": "AgnosticRouteObject"
									},
									"name": "AgnosticRouteObject",
									"package": "react-router"
								}
							}
						},
						{
							"id": 1695,
							"name": "unstable_dataStrategy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 372,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L372"
								}
							],
							"type": {
								"type": "reference",
								"target": 1929,
								"name": "DataStrategyFunction",
								"package": "react-router"
							}
						},
						{
							"id": 1696,
							"name": "unstable_patchRoutesOnMiss",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 371,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L371"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "AgnosticPatchRoutesOnMissFunction"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/utils.ts",
											"qualifiedName": "AgnosticRouteMatch"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/router/utils.ts",
													"qualifiedName": "AgnosticRouteObject"
												},
												"name": "AgnosticRouteObject",
												"package": "react-router"
											}
										],
										"name": "AgnosticRouteMatch",
										"package": "react-router"
									}
								],
								"name": "AgnosticPatchRoutesOnMissFunction",
								"package": "react-router"
							}
						},
						{
							"id": 1697,
							"name": "window",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 370,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L370"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Window"
								},
								"name": "Window",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1689,
								1690,
								1691,
								1692,
								1693,
								1694,
								1695,
								1696,
								1697
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 363,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L363"
						}
					]
				},
				{
					"id": 1698,
					"name": "RouterProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1699,
							"name": "basename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 695,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L695"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1700,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 696,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L696"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 1701,
							"name": "location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 697,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L697"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1175,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Location",
												"package": "react-router"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 1702,
							"name": "navigationType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 698,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L698"
								}
							],
							"type": {
								"type": "reference",
								"target": 3,
								"name": "Action",
								"package": "react-router"
							}
						},
						{
							"id": 1703,
							"name": "navigator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 699,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L699"
								}
							],
							"type": {
								"type": "reference",
								"target": 1514,
								"name": "Navigator",
								"package": "react-router"
							}
						},
						{
							"id": 1704,
							"name": "static",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 700,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L700"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1699,
								1700,
								1701,
								1702,
								1703,
								1704
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 694,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L694"
						}
					]
				},
				{
					"id": 1705,
					"name": "RouterProviderProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1706,
							"name": "flushSync",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 194,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L194"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1707,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/components.tsx",
											"line": 194,
											"character": 14,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L194"
										}
									],
									"signatures": [
										{
											"id": 1708,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/components.tsx",
													"line": 194,
													"character": 14,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L194"
												}
											],
											"parameters": [
												{
													"id": 1709,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1710,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/components.tsx",
																	"line": 194,
																	"character": 19,
																	"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L194"
																}
															],
															"signatures": [
																{
																	"id": 1711,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react-router/lib/components.tsx",
																			"line": 194,
																			"character": 19,
																			"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L194"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									]
								}
							}
						},
						{
							"id": 1712,
							"name": "router",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 193,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L193"
								}
							],
							"type": {
								"type": "reference",
								"target": 1612,
								"name": "Router",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1706,
								1712
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 192,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L192"
						}
					]
				},
				{
					"id": 1713,
					"name": "RouterState",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "State maintained internally by the router.  During a navigation, all states\nreflect the the \"old\" location unless otherwise noted."
							}
						]
					},
					"children": [
						{
							"id": 1714,
							"name": "actionData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Data from the action for the current matches"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 330,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L330"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/utils.ts",
											"qualifiedName": "RouteData"
										},
										"name": "RouteData",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 1715,
							"name": "blockers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Map of current blockers"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 345,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L345"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2015.collection.d.ts",
									"qualifiedName": "Map"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 1969,
										"name": "Blocker",
										"package": "react-router"
									}
								],
								"name": "Map",
								"package": "typescript"
							}
						},
						{
							"id": 1716,
							"name": "errors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Errors caught from loaders for the current matches"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 335,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L335"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/utils.ts",
											"qualifiedName": "RouteData"
										},
										"name": "RouteData",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 1717,
							"name": "fetchers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Map of current fetchers"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 340,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L340"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2015.collection.d.ts",
									"qualifiedName": "Map"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 2050,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Fetcher",
										"package": "react-router"
									}
								],
								"name": "Map",
								"package": "typescript"
							}
						},
						{
							"id": 1718,
							"name": "historyAction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The action of the most recent navigation"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 281,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L281"
								}
							],
							"type": {
								"type": "reference",
								"target": 3,
								"name": "Action",
								"package": "react-router"
							}
						},
						{
							"id": 1719,
							"name": "initialized",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Tracks whether we've completed our initial data load"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 296,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L296"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1720,
							"name": "loaderData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Data from the loaders for the current matches"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 325,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L325"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "RouteData"
								},
								"name": "RouteData",
								"package": "react-router"
							}
						},
						{
							"id": 1721,
							"name": "location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The current location reflected by the router"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 286,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L286"
								}
							],
							"type": {
								"type": "reference",
								"target": 1175,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Location",
								"package": "react-router"
							}
						},
						{
							"id": 1722,
							"name": "matches",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The current set of route matches"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 291,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L291"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "packages/react-router/lib/router/utils.ts",
										"qualifiedName": "AgnosticDataRouteMatch"
									},
									"name": "AgnosticDataRouteMatch",
									"package": "react-router"
								}
							}
						},
						{
							"id": 1723,
							"name": "navigation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Tracks the state of the current navigation"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 315,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L315"
								}
							],
							"type": {
								"type": "reference",
								"target": 2147,
								"name": "Navigation",
								"package": "react-router"
							}
						},
						{
							"id": 1724,
							"name": "preventScrollReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicate whether this navigation should skip resetting the scroll position\nif we are unable to restore the scroll position"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 310,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L310"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1725,
							"name": "restoreScrollPosition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Current scroll position we should start at for a new view\n - number -> scroll position to restore to\n - false -> do not restore scroll at all (used during submissions)\n - null -> don't have a saved position, scroll to hash or top of page"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 304,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L304"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": false
									}
								]
							}
						},
						{
							"id": 1726,
							"name": "revalidation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Tracks any in-progress revalidations"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 320,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L320"
								}
							],
							"type": {
								"type": "reference",
								"target": 2198,
								"name": "RevalidationState",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1714,
								1715,
								1716,
								1717,
								1718,
								1719,
								1720,
								1721,
								1722,
								1723,
								1724,
								1725,
								1726
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 275,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L275"
						}
					]
				},
				{
					"id": 1727,
					"name": "RouterSubscriber",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Subscriber function signature for changes to router state"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 422,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L422"
						}
					],
					"signatures": [
						{
							"id": 1728,
							"name": "RouterSubscriber",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 423,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L423"
								}
							],
							"parameters": [
								{
									"id": 1729,
									"name": "state",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1713,
										"name": "RouterState",
										"package": "react-router"
									}
								},
								{
									"id": 1730,
									"name": "opts",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1731,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1732,
													"name": "deletedFetchers",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 426,
															"character": 6,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L426"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 1733,
													"name": "unstable_flushSync",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 428,
															"character": 6,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L428"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1734,
													"name": "unstable_viewTransitionOpts",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 427,
															"character": 6,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L427"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/router/router.ts",
															"qualifiedName": "ViewTransitionOpts"
														},
														"name": "ViewTransitionOpts",
														"package": "react-router"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1732,
														1733,
														1734
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/router.ts",
													"line": 425,
													"character": 10,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L425"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1735,
					"name": "RoutesProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1736,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Nested "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Route",
										"target": 2302,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " elements"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 795,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L795"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 1737,
							"name": "location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The location to match against. Defaults to the current location."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 800,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L800"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1175,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Location",
												"package": "react-router"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1736,
								1737
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 791,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L791"
						}
					]
				},
				{
					"id": 1738,
					"name": "RoutesTestStubProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1739,
							"name": "future",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Future flags mimicking the settings in remix.config.js"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
									"line": 86,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L86"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
											"qualifiedName": "FutureConfig"
										},
										"name": "FutureConfig",
										"package": "react-router"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 1740,
							"name": "hydrationData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Used to set the route's initial loader and action data.\n e.g. hydrationData={{\n  loaderData: { \"/contact\": { locale: \"en-US\" } },\n  actionData: { \"/login\": { errors: { email: \"invalid email\" } }}\n }}"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
									"line": 81,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L81"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Pick"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1713,
												"name": "RouterState",
												"package": "react-router"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "loaderData"
													},
													{
														"type": "literal",
														"value": "actionData"
													},
													{
														"type": "literal",
														"value": "errors"
													}
												]
											}
										],
										"name": "Pick",
										"package": "typescript"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 1741,
							"name": "initialEntries",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The initial entries in the history stack. This allows you to start a test with\n multiple locations already in the history stack (for testing a back navigation, etc.)\n The test will default to the last entry in initialEntries if no initialIndex is provided.\n e.g. initialEntries={[\"/home\", \"/about\", \"/contact\"]}"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
									"line": 63,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L63"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2080,
									"name": "InitialEntry",
									"package": "react-router"
								}
							}
						},
						{
							"id": 1742,
							"name": "initialIndex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The initial index in the history stack to render. This allows you to start a test at a specific entry.\nIt defaults to the last entry in initialEntries.\ne.g.\n  initialEntries: [\"/\", \"/events/123\"]\n  initialIndex: 1 // start at \"/events/123\""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
									"line": 72,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L72"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1739,
								1740,
								1741,
								1742
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
							"line": 56,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L56"
						}
					]
				},
				{
					"id": 1743,
					"name": "ServerBuild",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The output of the compiler for the server build."
							}
						]
					},
					"children": [
						{
							"id": 1744,
							"name": "assets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/build.ts#L18"
								}
							],
							"type": {
								"type": "reference",
								"target": 1914,
								"name": "AssetsManifest",
								"package": "react-router"
							}
						},
						{
							"id": 1745,
							"name": "assetsBuildDirectory",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/build.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1746,
							"name": "basename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/build.ts#L19"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1747,
							"name": "entry",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/build.ts#L14"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1748,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1749,
											"name": "module",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/server-runtime/build.ts",
													"line": 15,
													"character": 4,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/build.ts#L15"
												}
											],
											"type": {
												"type": "reference",
												"target": 1754,
												"name": "ServerEntryModule",
												"package": "react-router"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1749
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/build.ts",
											"line": 14,
											"character": 9,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/build.ts#L14"
										}
									]
								}
							}
						},
						{
							"id": 1750,
							"name": "future",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/build.ts#L22"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"qualifiedName": "FutureConfig"
								},
								"name": "FutureConfig",
								"package": "react-router"
							}
						},
						{
							"id": 1751,
							"name": "isSpaMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/build.ts#L23"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1752,
							"name": "publicPath",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/build.ts#L20"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1753,
							"name": "routes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/build.ts#L17"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/server-runtime/routes.ts",
									"qualifiedName": "ServerRouteManifest"
								},
								"name": "ServerRouteManifest",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1744,
								1745,
								1746,
								1747,
								1750,
								1751,
								1752,
								1753
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/build.ts",
							"line": 13,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/build.ts#L13"
						}
					]
				},
				{
					"id": 1754,
					"name": "ServerEntryModule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A module that serves as the entry point for a Remix app during server\nrendering."
							}
						]
					},
					"children": [
						{
							"id": 1755,
							"name": "default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 51,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/build.ts#L51"
								}
							],
							"type": {
								"type": "reference",
								"target": 795,
								"name": "HandleDocumentRequestFunction",
								"package": "react-router"
							}
						},
						{
							"id": 1756,
							"name": "handleDataRequest",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 52,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/build.ts#L52"
								}
							],
							"type": {
								"type": "reference",
								"target": 791,
								"name": "HandleDataRequestFunction",
								"package": "react-router"
							}
						},
						{
							"id": 1757,
							"name": "handleError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 53,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/build.ts#L53"
								}
							],
							"type": {
								"type": "reference",
								"target": 802,
								"name": "HandleErrorFunction",
								"package": "react-router"
							}
						},
						{
							"id": 1758,
							"name": "streamTimeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/build.ts",
									"line": 54,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/build.ts#L54"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1755,
								1756,
								1757,
								1758
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/build.ts",
							"line": 50,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/build.ts#L50"
						}
					]
				},
				{
					"id": 1759,
					"name": "ServerRouterProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1760,
							"name": "abortDelay",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/server.tsx",
									"line": 14,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/server.tsx#L14"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1761,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/server.tsx",
									"line": 12,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/server.tsx#L12"
								}
							],
							"type": {
								"type": "reference",
								"target": 186,
								"name": "EntryContext",
								"package": "react-router"
							}
						},
						{
							"id": 1762,
							"name": "nonce",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/server.tsx",
									"line": 15,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/server.tsx#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1763,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/server.tsx",
									"line": 13,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/server.tsx#L13"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "URL"
										},
										"name": "URL",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1760,
								1761,
								1762,
								1763
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/server.tsx",
							"line": 11,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/server.tsx#L11"
						}
					]
				},
				{
					"id": 1764,
					"name": "Session",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Session persists data across HTTP requests."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://remix.run/utils/sessions#session-api"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 1765,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The raw data contained in this session.\n\nThis is useful mostly for SessionStorage internally to access the raw\nsession data to persist."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 34,
									"character": 11,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L34"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 1787,
												"name": "Data",
												"package": "react-router",
												"qualifiedName": "Session.Data",
												"refersToTypeParameter": true
											},
											{
												"type": "mapped",
												"parameter": "Key",
												"parameterType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													]
												},
												"templateType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": 1774,
														"name": "Key",
														"package": "react-router",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 1788,
														"name": "FlashData",
														"package": "react-router",
														"qualifiedName": "Session.FlashData",
														"refersToTypeParameter": true
													}
												},
												"nameType": {
													"type": "templateLiteral",
													"head": "__flash_",
													"tail": [
														[
															{
																"type": "intersection",
																"types": [
																	{
																		"type": "reference",
																		"target": 1774,
																		"name": "Key",
																		"package": "react-router",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															},
															"__"
														]
													]
												}
											}
										]
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 1766,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique identifier for this session.\n\nNote: This will be the empty string for newly created sessions and\nsessions that are not backed by a database (i.e. cookie-based sessions)."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 26,
									"character": 11,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L26"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1767,
							"name": "flash",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 61,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L61"
								}
							],
							"signatures": [
								{
									"id": 1768,
									"name": "flash",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Sets a value in the session that is only valid until the next "
											},
											{
												"kind": "code",
												"text": "`get()`"
											},
											{
												"kind": "text",
												"text": ".\nThis can be useful for temporary values, like error messages."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 61,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L61"
										}
									],
									"typeParameter": [
										{
											"id": 1769,
											"name": "Key",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1770,
											"name": "name",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1769,
												"name": "Key",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 1771,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 1769,
													"name": "Key",
													"package": "react-router",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 1788,
													"name": "FlashData",
													"package": "react-router",
													"qualifiedName": "Session.FlashData",
													"refersToTypeParameter": true
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 1772,
							"name": "get",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 45,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L45"
								}
							],
							"signatures": [
								{
									"id": 1773,
									"name": "get",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the value for the given "
											},
											{
												"kind": "code",
												"text": "`name`"
											},
											{
												"kind": "text",
												"text": " in this session."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 45,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L45"
										}
									],
									"typeParameter": [
										{
											"id": 1774,
											"name": "Key",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1775,
											"name": "name",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1774,
												"name": "Key",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 1774,
													"name": "Key",
													"package": "react-router",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": 1787,
														"name": "Data",
														"package": "react-router",
														"qualifiedName": "Session.Data",
														"refersToTypeParameter": true
													}
												},
												"trueType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": 1774,
														"typeArguments": [
															{
																"type": "reference",
																"target": 1774,
																"name": "Key",
																"package": "react-router",
																"refersToTypeParameter": true
															}
														],
														"name": "Key",
														"package": "react-router",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 1787,
														"name": "Data",
														"package": "react-router",
														"qualifiedName": "Session.Data",
														"refersToTypeParameter": true
													}
												},
												"falseType": {
													"type": "intrinsic",
													"name": "undefined"
												}
											},
											{
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 1774,
													"name": "Key",
													"package": "react-router",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": 1788,
														"name": "FlashData",
														"package": "react-router",
														"qualifiedName": "Session.FlashData",
														"refersToTypeParameter": true
													}
												},
												"trueType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": 1774,
														"typeArguments": [
															{
																"type": "reference",
																"target": 1774,
																"name": "Key",
																"package": "react-router",
																"refersToTypeParameter": true
															}
														],
														"name": "Key",
														"package": "react-router",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 1788,
														"name": "FlashData",
														"package": "react-router",
														"qualifiedName": "Session.FlashData",
														"refersToTypeParameter": true
													}
												},
												"falseType": {
													"type": "intrinsic",
													"name": "undefined"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 1776,
							"name": "has",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L40"
								}
							],
							"signatures": [
								{
									"id": 1777,
									"name": "has",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the session has a value for the given "
											},
											{
												"kind": "code",
												"text": "`name`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "\notherwise."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 40,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L40"
										}
									],
									"parameters": [
										{
											"id": 1778,
											"name": "name",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "union",
														"types": [
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"target": 1788,
																	"name": "FlashData",
																	"package": "react-router",
																	"qualifiedName": "Session.FlashData",
																	"refersToTypeParameter": true
																}
															},
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"target": 1787,
																	"name": "Data",
																	"package": "react-router",
																	"qualifiedName": "Session.Data",
																	"refersToTypeParameter": true
																}
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 1779,
							"name": "set",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 55,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L55"
								}
							],
							"signatures": [
								{
									"id": 1780,
									"name": "set",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Sets a value in the session for the given "
											},
											{
												"kind": "code",
												"text": "`name`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 55,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L55"
										}
									],
									"typeParameter": [
										{
											"id": 1781,
											"name": "Key",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 1782,
											"name": "name",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1781,
												"name": "Key",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 1783,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 1781,
													"name": "Key",
													"package": "react-router",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 1787,
													"name": "Data",
													"package": "react-router",
													"qualifiedName": "Session.Data",
													"refersToTypeParameter": true
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 1784,
							"name": "unset",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 69,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L69"
								}
							],
							"signatures": [
								{
									"id": 1785,
									"name": "unset",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Removes a value from the session."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 69,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L69"
										}
									],
									"parameters": [
										{
											"id": 1786,
											"name": "name",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "reference",
															"target": 1787,
															"name": "Data",
															"package": "react-router",
															"qualifiedName": "Session.Data",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1765,
								1766
							]
						},
						{
							"title": "Methods",
							"children": [
								1767,
								1772,
								1776,
								1779,
								1784
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
							"line": 19,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L19"
						}
					],
					"typeParameters": [
						{
							"id": 1787,
							"name": "Data",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": 1789,
								"name": "SessionData",
								"package": "react-router"
							}
						},
						{
							"id": 1788,
							"name": "FlashData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": 1787,
								"name": "Data",
								"package": "react-router",
								"qualifiedName": "Session.Data",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 1789,
					"name": "SessionData",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object of name/value pairs to be used in the session."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
							"line": 10,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L10"
						}
					],
					"indexSignature": {
						"id": 1790,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"sources": [
							{
								"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
								"line": 11,
								"character": 2,
								"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L11"
							}
						],
						"parameters": [
							{
								"id": 1791,
								"name": "name",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				},
				{
					"id": 1792,
					"name": "SessionIdStorageStrategy",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "SessionIdStorageStrategy is designed to allow anyone to easily build their\nown SessionStorage using "
							},
							{
								"kind": "code",
								"text": "`createSessionStorage(strategy)`"
							},
							{
								"kind": "text",
								"text": ".\n\nThis strategy describes a common scenario where the session id is stored in\na cookie but the actual session data is stored elsewhere, usually in a\ndatabase or on disk. A set of create, read, update, and delete operations\nare provided for managing the session data."
							}
						]
					},
					"children": [
						{
							"id": 1793,
							"name": "cookie",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Cookie used to store the session id, or options used to automatically\ncreate one."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 218,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L218"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 150,
										"name": "Cookie",
										"package": "react-router"
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 162,
												"name": "CookieParseOptions",
												"package": "@types/cookie"
											},
											{
												"type": "reference",
												"target": 166,
												"name": "CookieSerializeOptions",
												"package": "@types/cookie"
											},
											{
												"type": "reference",
												"target": 179,
												"name": "CookieSignatureOptions",
												"package": "react-router"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1794,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1795,
															"name": "name",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
																	"line": 218,
																	"character": 39,
																	"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L218"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1795
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
															"line": 218,
															"character": 37,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L218"
														}
													]
												}
											}
										]
									}
								]
							}
						},
						{
							"id": 1796,
							"name": "createData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new record with the given data and returns the session id."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 223,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L223"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1797,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 223,
											"character": 14,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L223"
										}
									],
									"signatures": [
										{
											"id": 1798,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
													"line": 223,
													"character": 14,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L223"
												}
											],
											"parameters": [
												{
													"id": 1799,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "intersection",
																"types": [
																	{
																		"type": "reference",
																		"target": 1815,
																		"name": "Data",
																		"package": "react-router",
																		"qualifiedName": "SessionIdStorageStrategy.Data",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "mapped",
																		"parameter": "Key",
																		"parameterType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				},
																				{
																					"type": "intrinsic",
																					"name": "symbol"
																				}
																			]
																		},
																		"templateType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"target": 1774,
																				"name": "Key",
																				"package": "react-router",
																				"refersToTypeParameter": true
																			},
																			"objectType": {
																				"type": "reference",
																				"target": 1816,
																				"name": "FlashData",
																				"package": "react-router",
																				"qualifiedName": "SessionIdStorageStrategy.FlashData",
																				"refersToTypeParameter": true
																			}
																		},
																		"nameType": {
																			"type": "templateLiteral",
																			"head": "__flash_",
																			"tail": [
																				[
																					{
																						"type": "intersection",
																						"types": [
																							{
																								"type": "reference",
																								"target": 1774,
																								"name": "Key",
																								"package": "react-router",
																								"refersToTypeParameter": true
																							},
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						]
																					},
																					"__"
																				]
																			]
																		}
																	}
																]
															}
														],
														"name": "Partial",
														"package": "typescript"
													}
												},
												{
													"id": 1800,
													"name": "expires",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Date"
														},
														"name": "Date",
														"package": "typescript"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 1801,
							"name": "deleteData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Deletes data for a given session id from the data store."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 245,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L245"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1802,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 245,
											"character": 14,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L245"
										}
									],
									"signatures": [
										{
											"id": 1803,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
													"line": 245,
													"character": 14,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L245"
												}
											],
											"parameters": [
												{
													"id": 1804,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 1805,
							"name": "readData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns data for a given session id, or "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": " if there isn't any."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 231,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L231"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1806,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 231,
											"character": 12,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L231"
										}
									],
									"signatures": [
										{
											"id": 1807,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
													"line": 231,
													"character": 12,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L231"
												}
											],
											"parameters": [
												{
													"id": 1808,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Partial"
																},
																"typeArguments": [
																	{
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": 1815,
																				"name": "Data",
																				"package": "react-router",
																				"qualifiedName": "SessionIdStorageStrategy.Data",
																				"refersToTypeParameter": true
																			},
																			{
																				"type": "mapped",
																				"parameter": "Key",
																				"parameterType": {
																					"type": "union",
																					"types": [
																						{
																							"type": "intrinsic",
																							"name": "string"
																						},
																						{
																							"type": "intrinsic",
																							"name": "number"
																						},
																						{
																							"type": "intrinsic",
																							"name": "symbol"
																						}
																					]
																				},
																				"templateType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "reference",
																						"target": 1774,
																						"name": "Key",
																						"package": "react-router",
																						"refersToTypeParameter": true
																					},
																					"objectType": {
																						"type": "reference",
																						"target": 1816,
																						"name": "FlashData",
																						"package": "react-router",
																						"qualifiedName": "SessionIdStorageStrategy.FlashData",
																						"refersToTypeParameter": true
																					}
																				},
																				"nameType": {
																					"type": "templateLiteral",
																					"head": "__flash_",
																					"tail": [
																						[
																							{
																								"type": "intersection",
																								"types": [
																									{
																										"type": "reference",
																										"target": 1774,
																										"name": "Key",
																										"package": "react-router",
																										"refersToTypeParameter": true
																									},
																									{
																										"type": "intrinsic",
																										"name": "string"
																									}
																								]
																							},
																							"__"
																						]
																					]
																				}
																			}
																		]
																	}
																],
																"name": "Partial",
																"package": "typescript"
															}
														]
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 1809,
							"name": "updateData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Updates data for the given session id."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 236,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L236"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1810,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 236,
											"character": 14,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L236"
										}
									],
									"signatures": [
										{
											"id": 1811,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
													"line": 236,
													"character": 14,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L236"
												}
											],
											"parameters": [
												{
													"id": 1812,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1813,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "intersection",
																"types": [
																	{
																		"type": "reference",
																		"target": 1815,
																		"name": "Data",
																		"package": "react-router",
																		"qualifiedName": "SessionIdStorageStrategy.Data",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "mapped",
																		"parameter": "Key",
																		"parameterType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				},
																				{
																					"type": "intrinsic",
																					"name": "symbol"
																				}
																			]
																		},
																		"templateType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"target": 1774,
																				"name": "Key",
																				"package": "react-router",
																				"refersToTypeParameter": true
																			},
																			"objectType": {
																				"type": "reference",
																				"target": 1816,
																				"name": "FlashData",
																				"package": "react-router",
																				"qualifiedName": "SessionIdStorageStrategy.FlashData",
																				"refersToTypeParameter": true
																			}
																		},
																		"nameType": {
																			"type": "templateLiteral",
																			"head": "__flash_",
																			"tail": [
																				[
																					{
																						"type": "intersection",
																						"types": [
																							{
																								"type": "reference",
																								"target": 1774,
																								"name": "Key",
																								"package": "react-router",
																								"refersToTypeParameter": true
																							},
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						]
																					},
																					"__"
																				]
																			]
																		}
																	}
																]
															}
														],
														"name": "Partial",
														"package": "typescript"
													}
												},
												{
													"id": 1814,
													"name": "expires",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Date"
														},
														"name": "Date",
														"package": "typescript"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1793,
								1796,
								1801,
								1805,
								1809
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
							"line": 210,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L210"
						}
					],
					"typeParameters": [
						{
							"id": 1815,
							"name": "Data",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": 1789,
								"name": "SessionData",
								"package": "react-router"
							}
						},
						{
							"id": 1816,
							"name": "FlashData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": 1815,
								"name": "Data",
								"package": "react-router",
								"qualifiedName": "SessionIdStorageStrategy.Data",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 1817,
					"name": "SessionStorage",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "SessionStorage stores session data between HTTP requests and knows how to\nparse and create cookies.\n\nA SessionStorage creates Session objects using a "
							},
							{
								"kind": "code",
								"text": "`Cookie`"
							},
							{
								"kind": "text",
								"text": " header as input.\nThen, later it generates the "
							},
							{
								"kind": "code",
								"text": "`Set-Cookie`"
							},
							{
								"kind": "text",
								"text": " header to be used in the response."
							}
						]
					},
					"children": [
						{
							"id": 1818,
							"name": "commitSession",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stores all data in the Session and returns the Set-Cookie header to be\nused in the HTTP response."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 186,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L186"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1819,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 186,
											"character": 17,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L186"
										}
									],
									"signatures": [
										{
											"id": 1820,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
													"line": 186,
													"character": 17,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L186"
												}
											],
											"parameters": [
												{
													"id": 1821,
													"name": "session",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1764,
														"typeArguments": [
															{
																"type": "reference",
																"target": 1833,
																"name": "Data",
																"package": "react-router",
																"qualifiedName": "SessionStorage.Data",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 1834,
																"name": "FlashData",
																"package": "react-router",
																"qualifiedName": "SessionStorage.FlashData",
																"refersToTypeParameter": true
															}
														],
														"name": "Session",
														"package": "react-router"
													}
												},
												{
													"id": 1822,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 166,
														"name": "CookieSerializeOptions",
														"package": "@types/cookie"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 1823,
							"name": "destroySession",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Deletes all data associated with the Session and returns the Set-Cookie\nheader to be used in the HTTP response."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 195,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L195"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1824,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 195,
											"character": 18,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L195"
										}
									],
									"signatures": [
										{
											"id": 1825,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
													"line": 195,
													"character": 18,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L195"
												}
											],
											"parameters": [
												{
													"id": 1826,
													"name": "session",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1764,
														"typeArguments": [
															{
																"type": "reference",
																"target": 1833,
																"name": "Data",
																"package": "react-router",
																"qualifiedName": "SessionStorage.Data",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 1834,
																"name": "FlashData",
																"package": "react-router",
																"qualifiedName": "SessionStorage.FlashData",
																"refersToTypeParameter": true
															}
														],
														"name": "Session",
														"package": "react-router"
													}
												},
												{
													"id": 1827,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 166,
														"name": "CookieSerializeOptions",
														"package": "@types/cookie"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 1828,
							"name": "getSession",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Parses a Cookie header from a HTTP request and returns the associated\nSession. If there is no session associated with the cookie, this will\nreturn a new Session with no data."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 177,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L177"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1829,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
											"line": 177,
											"character": 14,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L177"
										}
									],
									"signatures": [
										{
											"id": 1830,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
													"line": 177,
													"character": 14,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L177"
												}
											],
											"parameters": [
												{
													"id": 1831,
													"name": "cookieHeader",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 1832,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 162,
														"name": "CookieParseOptions",
														"package": "@types/cookie"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1764,
														"typeArguments": [
															{
																"type": "reference",
																"target": 1833,
																"name": "Data",
																"package": "react-router",
																"qualifiedName": "SessionStorage.Data",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 1834,
																"name": "FlashData",
																"package": "react-router",
																"qualifiedName": "SessionStorage.FlashData",
																"refersToTypeParameter": true
															}
														],
														"name": "Session",
														"package": "react-router"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1818,
								1823,
								1828
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
							"line": 171,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L171"
						}
					],
					"typeParameters": [
						{
							"id": 1833,
							"name": "Data",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": 1789,
								"name": "SessionData",
								"package": "react-router"
							}
						},
						{
							"id": 1834,
							"name": "FlashData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": 1833,
								"name": "Data",
								"package": "react-router",
								"qualifiedName": "SessionStorage.Data",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 1835,
					"name": "ShouldRevalidateFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Route shouldRevalidate function signature.  This runs after any submission\n(navigation or fetcher), so we flatten the navigation/fetcher submission\nonto the arguments.  It shouldn't matter whether it came from a navigation\nor a fetcher, what really matters is the URLs and the formData since loaders\nhave to re-run based on the data models that were potentially mutated."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 203,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L203"
						}
					],
					"signatures": [
						{
							"id": 1836,
							"name": "ShouldRevalidateFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 204,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L204"
								}
							],
							"parameters": [
								{
									"id": 1837,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1838,
										"name": "ShouldRevalidateFunctionArgs",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1838,
					"name": "ShouldRevalidateFunctionArgs",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Arguments passed to shouldRevalidate function"
							}
						]
					},
					"children": [
						{
							"id": 1839,
							"name": "actionResult",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 192,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L192"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1840,
							"name": "actionStatus",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 191,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L191"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1841,
							"name": "currentParams",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 182,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L182"
								}
							],
							"type": {
								"type": "reference",
								"target": 2183,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Params",
								"package": "react-router"
							}
						},
						{
							"id": 1842,
							"name": "currentUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 181,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L181"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "URL"
								},
								"name": "URL",
								"package": "typescript"
							}
						},
						{
							"id": 1843,
							"name": "defaultShouldRevalidate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 193,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L193"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1844,
							"name": "formAction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 186,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L186"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1845,
							"name": "formData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 189,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L189"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "FormData"
								},
								"name": "FormData",
								"package": "typescript"
							}
						},
						{
							"id": 1846,
							"name": "formEncType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 187,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L187"
								}
							],
							"type": {
								"type": "reference",
								"target": 2067,
								"name": "FormEncType",
								"package": "react-router"
							}
						},
						{
							"id": 1847,
							"name": "formMethod",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 185,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L185"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "GET"
									},
									{
										"type": "literal",
										"value": "POST"
									},
									{
										"type": "literal",
										"value": "PUT"
									},
									{
										"type": "literal",
										"value": "PATCH"
									},
									{
										"type": "literal",
										"value": "DELETE"
									}
								]
							}
						},
						{
							"id": 1848,
							"name": "json",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 190,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L190"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "JsonValue"
								},
								"name": "JsonValue",
								"package": "react-router"
							}
						},
						{
							"id": 1849,
							"name": "nextParams",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 184,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L184"
								}
							],
							"type": {
								"type": "reference",
								"target": 2183,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Params",
								"package": "react-router"
							}
						},
						{
							"id": 1850,
							"name": "nextUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 183,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L183"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "URL"
								},
								"name": "URL",
								"package": "typescript"
							}
						},
						{
							"id": 1851,
							"name": "text",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 188,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L188"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1839,
								1840,
								1841,
								1842,
								1843,
								1844,
								1845,
								1846,
								1847,
								1848,
								1849,
								1850,
								1851
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 180,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L180"
						}
					]
				},
				{
					"id": 1852,
					"name": "StaticHandler",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A StaticHandler instance manages a singular SSR navigation/fetch event"
							}
						]
					},
					"children": [
						{
							"id": 1853,
							"name": "dataRoutes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 395,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L395"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "packages/react-router/lib/router/utils.ts",
										"qualifiedName": "AgnosticDataRouteObject"
									},
									"name": "AgnosticDataRouteObject",
									"package": "react-router"
								}
							}
						},
						{
							"id": 1854,
							"name": "query",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 396,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L396"
								}
							],
							"signatures": [
								{
									"id": 1855,
									"name": "query",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 396,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L396"
										}
									],
									"parameters": [
										{
											"id": 1856,
											"name": "request",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Request"
												},
												"name": "Request",
												"package": "typescript"
											}
										},
										{
											"id": 1857,
											"name": "opts",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1858,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1859,
															"name": "requestContext",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/router/router.ts",
																	"line": 399,
																	"character": 6,
																	"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L399"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "unknown"
															}
														},
														{
															"id": 1860,
															"name": "skipLoaderErrorBubbling",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/router/router.ts",
																	"line": 400,
																	"character": 6,
																	"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L400"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 1861,
															"name": "unstable_dataStrategy",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/router/router.ts",
																	"line": 401,
																	"character": 6,
																	"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L401"
																}
															],
															"type": {
																"type": "reference",
																"target": 1929,
																"name": "DataStrategyFunction",
																"package": "react-router"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1859,
																1860,
																1861
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 398,
															"character": 11,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L398"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Response"
														},
														"name": "Response",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 1870,
														"name": "StaticHandlerContext",
														"package": "react-router"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1862,
							"name": "queryRoute",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 404,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L404"
								}
							],
							"signatures": [
								{
									"id": 1863,
									"name": "queryRoute",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 404,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L404"
										}
									],
									"parameters": [
										{
											"id": 1864,
											"name": "request",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Request"
												},
												"name": "Request",
												"package": "typescript"
											}
										},
										{
											"id": 1865,
											"name": "opts",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1866,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1867,
															"name": "requestContext",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/router/router.ts",
																	"line": 408,
																	"character": 6,
																	"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L408"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "unknown"
															}
														},
														{
															"id": 1868,
															"name": "routeId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/router/router.ts",
																	"line": 407,
																	"character": 6,
																	"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L407"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1869,
															"name": "unstable_dataStrategy",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/router/router.ts",
																	"line": 409,
																	"character": 6,
																	"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L409"
																}
															],
															"type": {
																"type": "reference",
																"target": 1929,
																"name": "DataStrategyFunction",
																"package": "react-router"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1867,
																1868,
																1869
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 406,
															"character": 11,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L406"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1853
							]
						},
						{
							"title": "Methods",
							"children": [
								1854,
								1862
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 394,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L394"
						}
					]
				},
				{
					"id": 1870,
					"name": "StaticHandlerContext",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "State returned from a server-side query() call"
							}
						]
					},
					"children": [
						{
							"id": 1871,
							"name": "_deepestRenderedBoundaryId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 388,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L388"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1872,
							"name": "actionData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 383,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L383"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/utils.ts",
											"qualifiedName": "RouteData"
										},
										"name": "RouteData",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 1873,
							"name": "actionHeaders",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 387,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L387"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Headers"
										},
										"name": "Headers",
										"package": "typescript"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 1874,
							"name": "basename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 379,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L379"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1875,
							"name": "errors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 384,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L384"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/utils.ts",
											"qualifiedName": "RouteData"
										},
										"name": "RouteData",
										"package": "react-router"
									}
								]
							}
						},
						{
							"id": 1876,
							"name": "loaderData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 382,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L382"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "RouteData"
								},
								"name": "RouteData",
								"package": "react-router"
							}
						},
						{
							"id": 1877,
							"name": "loaderHeaders",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 386,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L386"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Headers"
										},
										"name": "Headers",
										"package": "typescript"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 1878,
							"name": "location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 380,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L380"
								}
							],
							"type": {
								"type": "reference",
								"target": 1175,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Location",
								"package": "react-router"
							}
						},
						{
							"id": 1879,
							"name": "matches",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 381,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L381"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "packages/react-router/lib/router/utils.ts",
										"qualifiedName": "AgnosticDataRouteMatch"
									},
									"name": "AgnosticDataRouteMatch",
									"package": "react-router"
								}
							}
						},
						{
							"id": 1880,
							"name": "statusCode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 385,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L385"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1871,
								1872,
								1873,
								1874,
								1875,
								1876,
								1877,
								1878,
								1879,
								1880
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 378,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L378"
						}
					]
				},
				{
					"id": 1881,
					"name": "StaticRouterProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1882,
							"name": "basename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/server.tsx",
									"line": 40,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/server.tsx#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1883,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/server.tsx",
									"line": 41,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/server.tsx#L41"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						},
						{
							"id": 1884,
							"name": "location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/server.tsx",
									"line": 42,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/server.tsx#L42"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1175,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Location",
												"package": "react-router"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1882,
								1883,
								1884
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/server.tsx",
							"line": 39,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/server.tsx#L39"
						}
					]
				},
				{
					"id": 1885,
					"name": "StaticRouterProviderProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1886,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/server.tsx",
									"line": 83,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/server.tsx#L83"
								}
							],
							"type": {
								"type": "reference",
								"target": 1870,
								"name": "StaticHandlerContext",
								"package": "react-router"
							}
						},
						{
							"id": 1887,
							"name": "hydrate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/server.tsx",
									"line": 85,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/server.tsx#L85"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1888,
							"name": "nonce",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/server.tsx",
									"line": 86,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/server.tsx#L86"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1889,
							"name": "router",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/server.tsx",
									"line": 84,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/server.tsx#L84"
								}
							],
							"type": {
								"type": "reference",
								"target": 1612,
								"name": "Router",
								"package": "react-router"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1886,
								1887,
								1888,
								1889
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/server.tsx",
							"line": 82,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/server.tsx#L82"
						}
					]
				},
				{
					"id": 1890,
					"name": "SubmitFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Submits a HTML "
							},
							{
								"kind": "code",
								"text": "`<form>`"
							},
							{
								"kind": "text",
								"text": " to the server without reloading the page."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1423,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1423"
						}
					],
					"signatures": [
						{
							"id": 1891,
							"name": "SubmitFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1424,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1424"
								}
							],
							"parameters": [
								{
									"id": 1892,
									"name": "target",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Can be multiple types of elements and objects\n\n**"
											},
											{
												"kind": "code",
												"text": "`HTMLFormElement`"
											},
											{
												"kind": "text",
												"text": "**\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\n<Form\n  onSubmit={(event) => {\n    submit(event.currentTarget);\n  }}\n/>\n```"
											},
											{
												"kind": "text",
												"text": "\n\n**"
											},
											{
												"kind": "code",
												"text": "`FormData`"
											},
											{
												"kind": "text",
												"text": "**\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\nconst formData = new FormData();\nformData.append(\"myKey\", \"myValue\");\nsubmit(formData, { method: \"post\" });\n```"
											},
											{
												"kind": "text",
												"text": "\n\n**Plain object that will be serialized as "
											},
											{
												"kind": "code",
												"text": "`FormData`"
											},
											{
												"kind": "text",
												"text": "**\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\nsubmit({ myKey: \"myValue\" }, { method: \"post\" });\n```"
											},
											{
												"kind": "text",
												"text": "\n\n**Plain object that will be serialized as JSON**\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\nsubmit(\n  { myKey: \"myValue\" },\n  { method: \"post\", encType: \"application/json\" }\n);\n```"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 2221,
										"name": "SubmitTarget",
										"package": "react-router"
									}
								},
								{
									"id": 1893,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options that override the "
											},
											{
												"kind": "code",
												"text": "`<form>`"
											},
											{
												"kind": "text",
												"text": "'s own attributes. Required when\nsubmitting arbitrary data without a backing "
											},
											{
												"kind": "code",
												"text": "`<form>`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1894,
										"name": "SubmitOptions",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1894,
					"name": "SubmitOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Submit options available to navigations"
							}
						]
					},
					"children": [
						{
							"id": 1895,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The action URL path used to submit the form. Overrides "
									},
									{
										"kind": "code",
										"text": "`<form action>`"
									},
									{
										"kind": "text",
										"text": ".\nDefaults to the path of the current route."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 170,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L170"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 493,
								"name": "FetcherSubmitOptions.action"
							}
						},
						{
							"id": 1896,
							"name": "encType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The encoding used to submit the form. Overrides "
									},
									{
										"kind": "code",
										"text": "`<form encType>`"
									},
									{
										"kind": "text",
										"text": ".\nDefaults to \"application/x-www-form-urlencoded\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 176,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L176"
								}
							],
							"type": {
								"type": "reference",
								"target": 2067,
								"name": "FormEncType",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 494,
								"name": "FetcherSubmitOptions.encType"
							}
						},
						{
							"id": 1897,
							"name": "fetcherKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicate a specific fetcherKey to use when using navigate=false"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 221,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L221"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1898,
							"name": "method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HTTP method used to submit the form. Overrides "
									},
									{
										"kind": "code",
										"text": "`<form method>`"
									},
									{
										"kind": "text",
										"text": ".\nDefaults to \"GET\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 164,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L164"
								}
							],
							"type": {
								"type": "reference",
								"target": 2069,
								"name": "HTMLFormMethod",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 495,
								"name": "FetcherSubmitOptions.method"
							}
						},
						{
							"id": 1899,
							"name": "navigate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "navigate=false will use a fetcher instead of a navigation"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 226,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L226"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1900,
							"name": "preventScrollReset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In browser-based environments, prevent resetting scroll after this\nnavigation when using the <ScrollRestoration> component"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 189,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L189"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 496,
								"name": "FetcherSubmitOptions.preventScrollReset"
							}
						},
						{
							"id": 1901,
							"name": "relative",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether the form action is relative to the route hierarchy or\nthe pathname.  Use this if you want to opt out of navigating the route\nhierarchy and want to instead route based on /-delimited URL segments"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 183,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L183"
								}
							],
							"type": {
								"type": "reference",
								"target": 2192,
								"name": "RelativeRoutingType",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 497,
								"name": "FetcherSubmitOptions.relative"
							}
						},
						{
							"id": 1902,
							"name": "replace",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " to replace the current entry in the browser's history stack\ninstead of creating a new one (i.e. stay on \"the same page\"). Defaults\nto "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 211,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L211"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1903,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "State object to add to the history stack entry for this navigation"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 216,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L216"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1904,
							"name": "unstable_flushSync",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable flushSync for this submission's state updates"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 194,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L194"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 498,
								"name": "FetcherSubmitOptions.unstable_flushSync"
							}
						},
						{
							"id": 1905,
							"name": "unstable_viewTransition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable view transitions on this submission navigation"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 231,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L231"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1895,
								1896,
								1897,
								1898,
								1899,
								1900,
								1901,
								1902,
								1903,
								1904,
								1905
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/dom.ts",
							"line": 205,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L205"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 492,
							"name": "FetcherSubmitOptions",
							"package": "react-router"
						}
					]
				},
				{
					"id": 1906,
					"name": "UIMatch",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1907,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 530,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L530"
								}
							],
							"type": {
								"type": "reference",
								"target": 1912,
								"name": "Data",
								"package": "react-router",
								"qualifiedName": "UIMatch.Data",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 1908,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 531,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L531"
								}
							],
							"type": {
								"type": "reference",
								"target": 1913,
								"name": "Handle",
								"package": "react-router",
								"qualifiedName": "UIMatch.Handle",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 1909,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 527,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L527"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1910,
							"name": "params",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 529,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L529"
								}
							],
							"type": {
								"type": "reference",
								"target": 2183,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Params",
								"package": "react-router"
							}
						},
						{
							"id": 1911,
							"name": "pathname",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 528,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L528"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1907,
								1908,
								1909,
								1910,
								1911
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 526,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L526"
						}
					],
					"typeParameters": [
						{
							"id": 1912,
							"name": "Data",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 1913,
							"name": "Handle",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 1914,
					"name": "UNSAFE_AssetsManifest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1915,
							"name": "entry",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 46,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L46"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1916,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1917,
											"name": "imports",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
													"line": 47,
													"character": 4,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L47"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 1918,
											"name": "module",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
													"line": 48,
													"character": 4,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L48"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1917,
												1918
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
											"line": 46,
											"character": 9,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L46"
										}
									]
								}
							}
						},
						{
							"id": 1919,
							"name": "hmr",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 53,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L53"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1920,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1921,
											"name": "runtime",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
													"line": 55,
													"character": 4,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L55"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1922,
											"name": "timestamp",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
													"line": 54,
													"character": 4,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L54"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1921,
												1922
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
											"line": 53,
											"character": 8,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L53"
										}
									]
								}
							}
						},
						{
							"id": 1923,
							"name": "routes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 50,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L50"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
									"qualifiedName": "RouteManifest"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
											"qualifiedName": "EntryRoute"
										},
										"name": "EntryRoute",
										"package": "react-router"
									}
								],
								"name": "RouteManifest",
								"package": "react-router"
							}
						},
						{
							"id": 1924,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 51,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L51"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1925,
							"name": "version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
									"line": 52,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L52"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1915,
								1919,
								1923,
								1924,
								1925
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/entry.ts",
							"line": 45,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/entry.ts#L45"
						}
					]
				},
				{
					"id": 1926,
					"name": "UNSAFE_RouteModules",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
							"line": 19,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L19"
						}
					],
					"indexSignature": {
						"id": 1927,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"sources": [
							{
								"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
								"line": 20,
								"character": 2,
								"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L20"
							}
						],
						"parameters": [
							{
								"id": 1928,
								"name": "routeId",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
										"qualifiedName": "RouteModule"
									},
									"name": "RouteModule",
									"package": "react-router"
								},
								{
									"type": "intrinsic",
									"name": "undefined"
								}
							]
						}
					}
				},
				{
					"id": 1929,
					"name": "unstable_DataStrategyFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 222,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L222"
						}
					],
					"signatures": [
						{
							"id": 1930,
							"name": "unstable_DataStrategyFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 223,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L223"
								}
							],
							"parameters": [
								{
									"id": 1931,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1932,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "DataStrategyFunctionArgs",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1954,
											"name": "HandlerResult",
											"package": "react-router"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1932,
					"name": "unstable_DataStrategyFunctionArgs",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1933,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 129,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L129"
								}
							],
							"type": {
								"type": "reference",
								"target": 1937,
								"name": "Context",
								"package": "react-router",
								"qualifiedName": "DataStrategyFunctionArgs.Context",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DataFunctionArgs.context"
							}
						},
						{
							"id": 1934,
							"name": "matches",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 219,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L219"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1938,
									"name": "DataStrategyMatch",
									"package": "react-router"
								}
							}
						},
						{
							"id": 1935,
							"name": "params",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 128,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L128"
								}
							],
							"type": {
								"type": "reference",
								"target": 2183,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Params",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DataFunctionArgs.params"
							}
						},
						{
							"id": 1936,
							"name": "request",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L127"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Request"
								},
								"name": "Request",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DataFunctionArgs.request"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1933,
								1934,
								1935,
								1936
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 217,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L217"
						}
					],
					"typeParameters": [
						{
							"id": 1937,
							"name": "Context",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/router/utils.ts",
								"qualifiedName": "DataFunctionArgs"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 1937,
									"name": "Context",
									"package": "react-router",
									"qualifiedName": "DataStrategyFunctionArgs.Context",
									"refersToTypeParameter": true
								}
							],
							"name": "DataFunctionArgs",
							"package": "react-router"
						}
					]
				},
				{
					"id": 1938,
					"name": "unstable_DataStrategyMatch",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 1939,
							"name": "params",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The names and values of dynamic parameters in the URL."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 396,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L396"
								}
							],
							"type": {
								"type": "reference",
								"target": 2183,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Params",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AgnosticRouteMatch.params"
							}
						},
						{
							"id": 1940,
							"name": "pathname",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The portion of the URL pathname that was matched."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 400,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L400"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AgnosticRouteMatch.pathname"
							}
						},
						{
							"id": 1941,
							"name": "pathnameBase",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The portion of the URL pathname that was matched before child routes."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 404,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L404"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AgnosticRouteMatch.pathnameBase"
							}
						},
						{
							"id": 1942,
							"name": "resolve",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 210,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L210"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1943,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/utils.ts",
											"line": 210,
											"character": 11,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L210"
										}
									],
									"signatures": [
										{
											"id": 1944,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/utils.ts",
													"line": 210,
													"character": 11,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L210"
												}
											],
											"parameters": [
												{
													"id": 1945,
													"name": "handlerOverride",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1946,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/router/utils.ts",
																	"line": 211,
																	"character": 22,
																	"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L211"
																}
															],
															"signatures": [
																{
																	"id": 1947,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react-router/lib/router/utils.ts",
																			"line": 211,
																			"character": 22,
																			"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L211"
																		}
																	],
																	"parameters": [
																		{
																			"id": 1948,
																			"name": "handler",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reflection",
																				"declaration": {
																					"id": 1949,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "packages/react-router/lib/router/utils.ts",
																							"line": 212,
																							"character": 15,
																							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L212"
																						}
																					],
																					"signatures": [
																						{
																							"id": 1950,
																							"name": "__type",
																							"variant": "signature",
																							"kind": 4096,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "packages/react-router/lib/router/utils.ts",
																									"line": 212,
																									"character": 15,
																									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L212"
																								}
																							],
																							"parameters": [
																								{
																									"id": 1951,
																									"name": "ctx",
																									"variant": "param",
																									"kind": 32768,
																									"flags": {
																										"isOptional": true
																									},
																									"type": {
																										"type": "intrinsic",
																										"name": "unknown"
																									}
																								}
																							],
																							"type": {
																								"type": "reference",
																								"target": {
																									"sourceFileName": "packages/react-router/lib/router/utils.ts",
																									"qualifiedName": "DataFunctionReturnValue"
																								},
																								"name": "DataFunctionReturnValue",
																								"package": "react-router"
																							}
																						}
																					]
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 1954,
																				"name": "HandlerResult",
																				"package": "react-router"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1954,
														"name": "HandlerResult",
														"package": "react-router"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 1952,
							"name": "route",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The route object that was used to match."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 408,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L408"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "AgnosticDataRouteObject"
								},
								"name": "AgnosticDataRouteObject",
								"package": "react-router"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AgnosticRouteMatch.route"
							}
						},
						{
							"id": 1953,
							"name": "shouldLoad",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 209,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L209"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1939,
								1940,
								1941,
								1942,
								1952,
								1953
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 207,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L207"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/router/utils.ts",
								"qualifiedName": "AgnosticRouteMatch"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "packages/react-router/lib/router/utils.ts",
										"qualifiedName": "AgnosticDataRouteObject"
									},
									"name": "AgnosticDataRouteObject",
									"package": "react-router"
								}
							],
							"name": "AgnosticRouteMatch",
							"package": "react-router"
						}
					]
				},
				{
					"id": 1954,
					"name": "unstable_HandlerResult",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Result from a loader or action called via dataStrategy"
							}
						]
					},
					"children": [
						{
							"id": 1955,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 56,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L56"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 1956,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 57,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L57"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1957,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 55,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L55"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "data"
									},
									{
										"type": "literal",
										"value": "error"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1955,
								1956,
								1957
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 54,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L54"
						}
					]
				},
				{
					"id": 1958,
					"name": "unstable_PatchRoutesOnMissFunction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 133,
							"character": 17,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L133"
						}
					],
					"signatures": [
						{
							"id": 1959,
							"name": "unstable_PatchRoutesOnMissFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 133,
									"character": 17,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L133"
								}
							],
							"parameters": [
								{
									"id": 1960,
									"name": "opts",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1961,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1962,
													"name": "matches",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/utils.ts",
															"line": 231,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L231"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1681,
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "reference",
																	"target": 2199,
																	"name": "RouteObject",
																	"package": "react-router"
																}
															],
															"name": "RouteMatch",
															"package": "react-router"
														}
													}
												},
												{
													"id": 1963,
													"name": "patch",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/utils.ts",
															"line": 232,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L232"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1964,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/router/utils.ts",
																	"line": 232,
																	"character": 11,
																	"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L232"
																}
															],
															"signatures": [
																{
																	"id": 1965,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react-router/lib/router/utils.ts",
																			"line": 232,
																			"character": 11,
																			"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L232"
																		}
																	],
																	"parameters": [
																		{
																			"id": 1966,
																			"name": "routeId",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": null
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				]
																			}
																		},
																		{
																			"id": 1967,
																			"name": "children",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "packages/react-router/lib/router/utils.ts",
																						"qualifiedName": "AgnosticRouteObject"
																					},
																					"name": "AgnosticRouteObject",
																					"package": "react-router"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												},
												{
													"id": 1968,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/utils.ts",
															"line": 230,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L230"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1962,
														1963,
														1968
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/utils.ts",
													"line": 229,
													"character": 9,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L229"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/router/utils.ts",
								"qualifiedName": "AgnosticPatchRoutesOnMissFunction"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 1681,
									"name": "RouteMatch",
									"package": "react-router"
								}
							],
							"name": "AgnosticPatchRoutesOnMissFunction",
							"package": "react-router"
						}
					]
				},
				{
					"id": 1969,
					"name": "Blocker",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 652,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L652"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/router.ts",
									"qualifiedName": "BlockerUnblocked"
								},
								"name": "BlockerUnblocked",
								"package": "react-router"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/router.ts",
									"qualifiedName": "BlockerBlocked"
								},
								"name": "BlockerBlocked",
								"package": "react-router"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/router.ts",
									"qualifiedName": "BlockerProceeding"
								},
								"name": "BlockerProceeding",
								"package": "react-router"
							}
						]
					}
				},
				{
					"id": 1970,
					"name": "BlockerFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 654,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L654"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1971,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 654,
									"character": 30,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L654"
								}
							],
							"signatures": [
								{
									"id": 1972,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1973,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1974,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1975,
															"name": "currentLocation",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/router/router.ts",
																	"line": 655,
																	"character": 2,
																	"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L655"
																}
															],
															"type": {
																"type": "reference",
																"target": 1175,
																"name": "Location",
																"package": "react-router"
															}
														},
														{
															"id": 1976,
															"name": "historyAction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/router/router.ts",
																	"line": 657,
																	"character": 2,
																	"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L657"
																}
															],
															"type": {
																"type": "reference",
																"target": 3,
																"name": "NavigationType",
																"package": "react-router",
																"qualifiedName": "Action"
															}
														},
														{
															"id": 1977,
															"name": "nextLocation",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/router/router.ts",
																	"line": 656,
																	"character": 2,
																	"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L656"
																}
															],
															"type": {
																"type": "reference",
																"target": 1175,
																"name": "Location",
																"package": "react-router"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1975,
																1976,
																1977
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 654,
															"character": 37,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L654"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 1978,
					"name": "ClientActionFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that handles data mutations for a route on the client"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
							"line": 39,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L39"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1979,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
									"line": 39,
									"character": 35,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L39"
								}
							],
							"signatures": [
								{
									"id": 1980,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1981,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1982,
												"name": "ClientActionFunctionArgs",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "ReturnType"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 129,
												"name": "RRActionFunction",
												"package": "react-router",
												"qualifiedName": "ActionFunction"
											}
										],
										"name": "ReturnType",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 1982,
					"name": "ClientActionFunctionArgs",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Arguments passed to a route "
							},
							{
								"kind": "code",
								"text": "`clientAction`"
							},
							{
								"kind": "text",
								"text": " function"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
							"line": 46,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L46"
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 134,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								],
								"name": "RRActionFunctionArgs",
								"package": "react-router",
								"qualifiedName": "ActionFunctionArgs"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1983,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1984,
											"name": "serverAction",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 47,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L47"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1985,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
															"line": 47,
															"character": 16,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L47"
														}
													],
													"signatures": [
														{
															"id": 1986,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"typeParameter": [
																{
																	"id": 1987,
																	"name": "T",
																	"variant": "typeParam",
																	"kind": 131072,
																	"flags": {},
																	"default": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "packages/react-router/lib/dom/ssr/data.ts",
																			"qualifiedName": "AppData"
																		},
																		"name": "AppData",
																		"package": "react-router"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
																			"qualifiedName": "SerializeFrom"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 1987,
																				"name": "T",
																				"package": "react-router",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "SerializeFrom",
																		"package": "react-router"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1984
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 46,
											"character": 73,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L46"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 1988,
					"name": "ClientLoaderFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that loads data for a route on the client"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
							"line": 53,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L53"
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 1989,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 53,
											"character": 36,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L53"
										}
									],
									"signatures": [
										{
											"id": 1990,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 1991,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1994,
														"name": "ClientLoaderFunctionArgs",
														"package": "react-router"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ReturnType"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 2096,
														"name": "RRLoaderFunction",
														"package": "react-router",
														"qualifiedName": "LoaderFunction"
													}
												],
												"name": "ReturnType",
												"package": "typescript"
											}
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1992,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1993,
											"name": "hydrate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 56,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L56"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1993
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 55,
											"character": 37,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L55"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 1994,
					"name": "ClientLoaderFunctionArgs",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Arguments passed to a route "
							},
							{
								"kind": "code",
								"text": "`clientLoader`"
							},
							{
								"kind": "text",
								"text": " function"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
							"line": 62,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L62"
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 1170,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								],
								"name": "RRLoaderFunctionArgs",
								"package": "react-router",
								"qualifiedName": "LoaderFunctionArgs"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1995,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1996,
											"name": "serverLoader",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 63,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L63"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1997,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
															"line": 63,
															"character": 16,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L63"
														}
													],
													"signatures": [
														{
															"id": 1998,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"typeParameter": [
																{
																	"id": 1999,
																	"name": "T",
																	"variant": "typeParam",
																	"kind": 131072,
																	"flags": {},
																	"default": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "packages/react-router/lib/dom/ssr/data.ts",
																			"qualifiedName": "AppData"
																		},
																		"name": "AppData",
																		"package": "react-router"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
																			"qualifiedName": "SerializeFrom"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 1999,
																				"name": "T",
																				"package": "react-router",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "SerializeFrom",
																		"package": "react-router"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1996
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 62,
											"character": 73,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L62"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2000,
					"name": "CookieOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
							"line": 21,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/cookies.ts#L21"
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 162,
								"name": "CookieParseOptions",
								"package": "@types/cookie"
							},
							{
								"type": "reference",
								"target": 166,
								"name": "CookieSerializeOptions",
								"package": "@types/cookie"
							},
							{
								"type": "reference",
								"target": 179,
								"name": "CookieSignatureOptions",
								"package": "react-router"
							}
						]
					}
				},
				{
					"id": 2001,
					"name": "CreateCookieFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
							"line": 70,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/cookies.ts#L70"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2002,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
									"line": 70,
									"character": 35,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/cookies.ts#L70"
								}
							],
							"signatures": [
								{
									"id": 2003,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2004,
											"name": "name",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2005,
											"name": "cookieOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2000,
												"name": "CookieOptions",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 150,
										"name": "Cookie",
										"package": "react-router"
									}
								}
							]
						}
					}
				},
				{
					"id": 2006,
					"name": "CreateCookieSessionStorageFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
							"line": 18,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions/cookieStorage.ts#L18"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2007,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
									"line": 18,
									"character": 49,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions/cookieStorage.ts#L18"
								}
							],
							"signatures": [
								{
									"id": 2008,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 2009,
											"name": "Data",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "reference",
												"target": 1789,
												"name": "SessionData",
												"package": "react-router"
											}
										},
										{
											"id": 2010,
											"name": "FlashData",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "reference",
												"target": 2009,
												"name": "Data",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										}
									],
									"parameters": [
										{
											"id": 2011,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
													"qualifiedName": "CookieSessionStorageOptions"
												},
												"name": "CookieSessionStorageOptions",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1817,
										"typeArguments": [
											{
												"type": "reference",
												"target": 2009,
												"name": "Data",
												"package": "react-router",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 2010,
												"name": "FlashData",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										],
										"name": "SessionStorage",
										"package": "react-router"
									}
								}
							]
						}
					}
				},
				{
					"id": 2012,
					"name": "CreateMemorySessionStorageFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
							"line": 17,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions/memoryStorage.ts#L17"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2013,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
									"line": 17,
									"character": 49,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions/memoryStorage.ts#L17"
								}
							],
							"signatures": [
								{
									"id": 2014,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 2015,
											"name": "Data",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "reference",
												"target": 1789,
												"name": "SessionData",
												"package": "react-router"
											}
										},
										{
											"id": 2016,
											"name": "FlashData",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "reference",
												"target": 2015,
												"name": "Data",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										}
									],
									"parameters": [
										{
											"id": 2017,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
													"qualifiedName": "MemorySessionStorageOptions"
												},
												"name": "MemorySessionStorageOptions",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1817,
										"typeArguments": [
											{
												"type": "reference",
												"target": 2015,
												"name": "Data",
												"package": "react-router",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 2016,
												"name": "FlashData",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										],
										"name": "SessionStorage",
										"package": "react-router"
									}
								}
							]
						}
					}
				},
				{
					"id": 2018,
					"name": "CreateRequestHandlerFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/server.ts",
							"line": 52,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/server.ts#L52"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2019,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/server.ts",
									"line": 52,
									"character": 43,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/server.ts#L52"
								}
							],
							"signatures": [
								{
									"id": 2020,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2021,
											"name": "build",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 1743,
														"name": "ServerBuild",
														"package": "react-router"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2022,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/server-runtime/server.ts",
																	"line": 53,
																	"character": 24,
																	"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/server.ts#L53"
																}
															],
															"signatures": [
																{
																	"id": 2023,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"target": 1743,
																				"name": "ServerBuild",
																				"package": "react-router"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 1743,
																						"name": "ServerBuild",
																						"package": "react-router"
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 2024,
											"name": "mode",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2193,
										"name": "RequestHandler",
										"package": "react-router"
									}
								}
							]
						}
					}
				},
				{
					"id": 2025,
					"name": "CreateSessionFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
							"line": 82,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L82"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2026,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 82,
									"character": 36,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L82"
								}
							],
							"signatures": [
								{
									"id": 2027,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 2028,
											"name": "Data",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "reference",
												"target": 1789,
												"name": "SessionData",
												"package": "react-router"
											}
										},
										{
											"id": 2029,
											"name": "FlashData",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "reference",
												"target": 2463,
												"name": "Data",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										}
									],
									"parameters": [
										{
											"id": 2030,
											"name": "initialData",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2463,
												"name": "Data",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 2031,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1764,
										"typeArguments": [
											{
												"type": "reference",
												"target": 2463,
												"name": "Data",
												"package": "react-router",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 2464,
												"name": "FlashData",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										],
										"name": "Session",
										"package": "react-router"
									}
								}
							]
						}
					}
				},
				{
					"id": 2032,
					"name": "CreateSessionStorageFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
							"line": 248,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L248"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2033,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 248,
									"character": 43,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L248"
								}
							],
							"signatures": [
								{
									"id": 2034,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 2035,
											"name": "Data",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "reference",
												"target": 1789,
												"name": "SessionData",
												"package": "react-router"
											}
										},
										{
											"id": 2036,
											"name": "FlashData",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "reference",
												"target": 2035,
												"name": "Data",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										}
									],
									"parameters": [
										{
											"id": 2037,
											"name": "strategy",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1792,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2035,
														"name": "Data",
														"package": "react-router",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 2036,
														"name": "FlashData",
														"package": "react-router",
														"refersToTypeParameter": true
													}
												],
												"name": "SessionIdStorageStrategy",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1817,
										"typeArguments": [
											{
												"type": "reference",
												"target": 2035,
												"name": "Data",
												"package": "react-router",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 2036,
												"name": "FlashData",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										],
										"name": "SessionStorage",
										"package": "react-router"
									}
								}
							]
						}
					}
				},
				{
					"id": 2038,
					"name": "DataFunctionArgs",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "Use "
									},
									{
										"kind": "code",
										"text": "`LoaderFunctionArgs`"
									},
									{
										"kind": "text",
										"text": "/"
									},
									{
										"kind": "code",
										"text": "`ActionFunctionArgs`"
									},
									{
										"kind": "text",
										"text": " instead"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
							"line": 22,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/routeModules.ts#L22"
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 134,
								"typeArguments": [
									{
										"type": "reference",
										"target": 139,
										"name": "AppLoadContext",
										"package": "react-router"
									}
								],
								"name": "RRActionFunctionArgs",
								"package": "react-router",
								"qualifiedName": "ActionFunctionArgs"
							},
							{
								"type": "reference",
								"target": 1170,
								"typeArguments": [
									{
										"type": "reference",
										"target": 139,
										"name": "AppLoadContext",
										"package": "react-router"
									}
								],
								"name": "RRLoaderFunctionArgs",
								"package": "react-router",
								"qualifiedName": "LoaderFunctionArgs"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2039,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2040,
											"name": "context",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
													"line": 27,
													"character": 4,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/routeModules.ts#L27"
												}
											],
											"type": {
												"type": "reference",
												"target": 139,
												"name": "AppLoadContext",
												"package": "react-router"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2040
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
											"line": 23,
											"character": 41,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/routeModules.ts#L23"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2041,
					"name": "DataRouteObject",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 65,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L65"
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 2199,
								"name": "RouteObject",
								"package": "react-router"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2042,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2043,
											"name": "children",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/context.ts",
													"line": 66,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L66"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2041,
													"name": "DataRouteObject",
													"package": "react-router"
												}
											}
										},
										{
											"id": 2044,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/context.ts",
													"line": 67,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L67"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2043,
												2044
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/context.ts",
											"line": 65,
											"character": 44,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L65"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2045,
					"name": "ErrorResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 1378,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1378"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2046,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2047,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/utils.ts",
											"line": 1381,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1381"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2048,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/utils.ts",
											"line": 1379,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1379"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2049,
									"name": "statusText",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/utils.ts",
											"line": 1380,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1380"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2047,
										2048,
										2049
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1378,
									"character": 28,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1378"
								}
							]
						}
					},
					"implementedBy": [
						{
							"type": "reference",
							"target": 31,
							"name": "UNSAFE_ErrorResponseImpl"
						}
					]
				},
				{
					"id": 2050,
					"name": "Fetcher",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 628,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L628"
						}
					],
					"typeParameters": [
						{
							"id": 2051,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/router.ts",
									"qualifiedName": "FetcherStates"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2051,
										"name": "TData",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								],
								"name": "FetcherStates",
								"package": "react-router"
							}
						},
						"objectType": {
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/router/router.ts",
								"qualifiedName": "FetcherStates"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 2051,
									"name": "TData",
									"package": "react-router",
									"refersToTypeParameter": true
								}
							],
							"name": "FetcherStates",
							"package": "react-router"
						}
					}
				},
				{
					"id": 2052,
					"name": "FetcherWithComponents",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The return value of "
							},
							{
								"kind": "code",
								"text": "`useFetcher`"
							},
							{
								"kind": "text",
								"text": " that keeps track of the state of a fetcher.\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\nlet fetcher = useFetcher();\n```"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1665,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1665"
						}
					],
					"typeParameters": [
						{
							"id": 2053,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 2050,
								"typeArguments": [
									{
										"type": "reference",
										"target": 2053,
										"name": "TData",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								],
								"name": "Fetcher",
								"package": "react-router"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2054,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2055,
											"name": "Form",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Just like "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Form",
														"target": 2262,
														"tsLinkText": ""
													},
													{
														"kind": "text",
														"text": " except it doesn't cause a navigation.\n\n"
													},
													{
														"kind": "code",
														"text": "```tsx\nfunction SomeComponent() {\n  const fetcher = useFetcher()\n  return (\n    <fetcher.Form method=\"post\" action=\"/some/route\">\n      <input type=\"text\" />\n    </fetcher.Form>\n  )\n}\n```"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 1680,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1680"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.ForwardRefExoticComponent"
												},
												"typeArguments": [
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": 209,
																"name": "FetcherFormProps",
																"package": "react-router"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
																	"qualifiedName": "React.RefAttributes"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
																			"qualifiedName": "HTMLFormElement"
																		},
																		"name": "HTMLFormElement",
																		"package": "typescript"
																	}
																],
																"name": "React.RefAttributes",
																"package": "@types/react"
															}
														]
													}
												],
												"name": "React.ForwardRefExoticComponent",
												"package": "@types/react"
											}
										},
										{
											"id": 2056,
											"name": "load",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Loads data from a route. Useful for loading data imperatively inside of user events outside of a normal button or form, like a combobox or search input.\n\n"
													},
													{
														"kind": "code",
														"text": "```tsx\nlet fetcher = useFetcher()\n\n<input onChange={e => {\n  fetcher.load(`/search?q=${e.target.value}`)\n}} />\n```"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 1740,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1740"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2057,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 1740,
															"character": 8,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1740"
														}
													],
													"signatures": [
														{
															"id": 2058,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 2059,
																	"name": "href",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 2060,
																	"name": "opts",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 2061,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 2062,
																					"name": "unstable_flushSync",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"comment": {
																						"summary": [
																							{
																								"kind": "text",
																								"text": "Wraps the initial state update for this "
																							},
																							{
																								"kind": "code",
																								"text": "`fetcher.load`"
																							},
																							{
																								"kind": "text",
																								"text": " in a\n"
																							},
																							{
																								"kind": "code",
																								"text": "`ReactDOM.flushSync`"
																							},
																							{
																								"kind": "text",
																								"text": " call instead of the default "
																							},
																							{
																								"kind": "code",
																								"text": "`React.startTransition`"
																							},
																							{
																								"kind": "text",
																								"text": ".\nThis allows you to perform synchronous DOM actions immediately after the\nupdate is flushed to the DOM."
																							}
																						]
																					},
																					"sources": [
																						{
																							"fileName": "packages/react-router/lib/dom/lib.tsx",
																							"line": 1749,
																							"character": 6,
																							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1749"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "boolean"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						2062
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "packages/react-router/lib/dom/lib.tsx",
																					"line": 1742,
																					"character": 11,
																					"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1742"
																				}
																			]
																		}
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 2063,
											"name": "submit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Submits form data to a route. While multiple nested routes can match a URL, only the leaf route will be called.\n\nThe "
													},
													{
														"kind": "code",
														"text": "`formData`"
													},
													{
														"kind": "text",
														"text": " can be multiple types:\n\n- ["
													},
													{
														"kind": "code",
														"text": "`FormData`"
													},
													{
														"kind": "text",
														"text": "][form_data] - A "
													},
													{
														"kind": "code",
														"text": "`FormData`"
													},
													{
														"kind": "text",
														"text": " instance.\n- ["
													},
													{
														"kind": "code",
														"text": "`HTMLFormElement`"
													},
													{
														"kind": "text",
														"text": "][html_form_element] - A ["
													},
													{
														"kind": "code",
														"text": "`<form>`"
													},
													{
														"kind": "text",
														"text": "][form_element] DOM element.\n- "
													},
													{
														"kind": "code",
														"text": "`Object`"
													},
													{
														"kind": "text",
														"text": " - An object of key/value pairs that will be converted to a "
													},
													{
														"kind": "code",
														"text": "`FormData`"
													},
													{
														"kind": "text",
														"text": " instance by default. You can pass a more complex object and serialize it as JSON by specifying "
													},
													{
														"kind": "code",
														"text": "`encType: \"application/json\"`"
													},
													{
														"kind": "text",
														"text": ". See ["
													},
													{
														"kind": "code",
														"text": "`useSubmit`"
													},
													{
														"kind": "text",
														"text": "][use-submit] for more details.\n\nIf the method is "
													},
													{
														"kind": "code",
														"text": "`GET`"
													},
													{
														"kind": "text",
														"text": ", then the route ["
													},
													{
														"kind": "code",
														"text": "`loader`"
													},
													{
														"kind": "text",
														"text": "][loader] is being called and with the "
													},
													{
														"kind": "code",
														"text": "`formData`"
													},
													{
														"kind": "text",
														"text": " serialized to the url as ["
													},
													{
														"kind": "code",
														"text": "`URLSearchParams`"
													},
													{
														"kind": "text",
														"text": "][url_search_params]. If "
													},
													{
														"kind": "code",
														"text": "`DELETE`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`PATCH`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`POST`"
													},
													{
														"kind": "text",
														"text": ", or "
													},
													{
														"kind": "code",
														"text": "`PUT`"
													},
													{
														"kind": "text",
														"text": ", then the route ["
													},
													{
														"kind": "code",
														"text": "`action`"
													},
													{
														"kind": "text",
														"text": "][action] is being called with "
													},
													{
														"kind": "code",
														"text": "`formData`"
													},
													{
														"kind": "text",
														"text": " as the body.\n\n"
													},
													{
														"kind": "code",
														"text": "```tsx\n// Submit a FormData instance (GET request)\nconst formData = new FormData();\nfetcher.submit(formData);\n\n// Submit the HTML form element\nfetcher.submit(event.currentTarget.form, {\n  method: \"POST\",\n});\n\n// Submit key/value JSON as a FormData instance\nfetcher.submit(\n  { serialized: \"values\" },\n  { method: \"POST\" }\n);\n\n// Submit raw JSON\nfetcher.submit(\n  {\n    deeply: {\n      nested: {\n        json: \"values\",\n      },\n    },\n  },\n  {\n    method: \"POST\",\n    encType: \"application/json\",\n  }\n);\n```"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 1727,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1727"
												}
											],
											"type": {
												"type": "reference",
												"target": 488,
												"name": "FetcherSubmitFunction",
												"package": "react-router"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2055,
												2056,
												2063
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/lib.tsx",
											"line": 1665,
											"character": 60,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1665"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2064,
					"name": "FlashSessionData",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
							"line": 72,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L72"
						}
					],
					"typeParameters": [
						{
							"id": 2065,
							"name": "Data",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 2066,
							"name": "FlashData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 2065,
										"name": "Data",
										"package": "react-router",
										"refersToTypeParameter": true
									},
									{
										"type": "mapped",
										"parameter": "Key",
										"parameterType": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 2066,
												"name": "FlashData",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										},
										"templateType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": 1774,
												"name": "Key",
												"package": "react-router",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 2066,
												"name": "FlashData",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										},
										"nameType": {
											"type": "reference",
											"target": {
												"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
												"qualifiedName": "FlashDataKey"
											},
											"typeArguments": [
												{
													"type": "intersection",
													"types": [
														{
															"type": "reference",
															"target": 1774,
															"name": "Key",
															"package": "react-router",
															"refersToTypeParameter": true
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											],
											"name": "FlashDataKey",
											"package": "react-router"
										}
									}
								]
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 2067,
					"name": "FormEncType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 76,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L76"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"type": "literal",
								"value": "multipart/form-data"
							},
							{
								"type": "literal",
								"value": "application/json"
							},
							{
								"type": "literal",
								"value": "text/plain"
							}
						]
					}
				},
				{
					"id": 2068,
					"name": "FormMethod",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Active navigation/fetcher form methods are exposed in uppercase on the\nRouterState. This is to align with the normalization done via fetch()."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 73,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L73"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "packages/react-router/lib/router/utils.ts",
							"qualifiedName": "UpperCaseFormMethod"
						},
						"name": "UpperCaseFormMethod",
						"package": "react-router"
					}
				},
				{
					"id": 2069,
					"name": "HTMLFormMethod",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Users can specify either lowercase or uppercase form methods on "
							},
							{
								"kind": "code",
								"text": "`<Form>`"
							},
							{
								"kind": "text",
								"text": ",\nuseSubmit(), "
							},
							{
								"kind": "code",
								"text": "`<fetcher.Form>`"
							},
							{
								"kind": "text",
								"text": ", etc."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 67,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L67"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "LowerCaseFormMethod"
								},
								"name": "LowerCaseFormMethod",
								"package": "react-router"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "UpperCaseFormMethod"
								},
								"name": "UpperCaseFormMethod",
								"package": "react-router"
							}
						]
					}
				},
				{
					"id": 2070,
					"name": "HeadersArgs",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
							"line": 98,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/routeModules.ts#L98"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2071,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2072,
									"name": "actionHeaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
											"line": 101,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/routeModules.ts#L101"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Headers"
										},
										"name": "Headers",
										"package": "typescript"
									}
								},
								{
									"id": 2073,
									"name": "errorHeaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
											"line": 102,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/routeModules.ts#L102"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Headers"
												},
												"name": "Headers",
												"package": "typescript"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 2074,
									"name": "loaderHeaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
											"line": 99,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/routeModules.ts#L99"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Headers"
										},
										"name": "Headers",
										"package": "typescript"
									}
								},
								{
									"id": 2075,
									"name": "parentHeaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
											"line": 100,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/routeModules.ts#L100"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Headers"
										},
										"name": "Headers",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2072,
										2073,
										2074,
										2075
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
									"line": 98,
									"character": 26,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/routeModules.ts#L98"
								}
							]
						}
					}
				},
				{
					"id": 2076,
					"name": "HtmlLinkDescriptor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents a "
							},
							{
								"kind": "code",
								"text": "`<link>`"
							},
							{
								"kind": "text",
								"text": " element.\n\nWHATWG Specification: https://html.spec.whatwg.org/multipage/semantics.html#the-link-element"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/links.ts",
							"line": 174,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/links.ts#L174"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
											"qualifiedName": "HtmlLinkProps"
										},
										"name": "HtmlLinkProps",
										"package": "react-router"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Pick"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Required"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
															"qualifiedName": "HtmlLinkProps"
														},
														"name": "HtmlLinkProps",
														"package": "react-router"
													}
												],
												"name": "Required",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": "href"
											}
										],
										"name": "Pick",
										"package": "typescript"
									}
								]
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
											"qualifiedName": "HtmlLinkPreloadImage"
										},
										"name": "HtmlLinkPreloadImage",
										"package": "react-router"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Pick"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Required"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
															"qualifiedName": "HtmlLinkPreloadImage"
														},
														"name": "HtmlLinkPreloadImage",
														"package": "react-router"
													}
												],
												"name": "Required",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": "imageSizes"
											}
										],
										"name": "Pick",
										"package": "typescript"
									}
								]
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
											"qualifiedName": "HtmlLinkPreloadImage"
										},
										"name": "HtmlLinkPreloadImage",
										"package": "react-router"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Pick"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Required"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
															"qualifiedName": "HtmlLinkPreloadImage"
														},
														"name": "HtmlLinkPreloadImage",
														"package": "react-router"
													}
												],
												"name": "Required",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": "href"
											}
										],
										"name": "Pick",
										"package": "typescript"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2077,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2078,
													"name": "imageSizes",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/ssr/links.ts",
															"line": 180,
															"character": 55,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/links.ts#L180"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "never"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2078
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/links.ts",
													"line": 180,
													"character": 53,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/links.ts#L180"
												}
											]
										}
									}
								]
							}
						]
					}
				},
				{
					"id": 2079,
					"name": "HydrationState",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data that can be passed into hydrate a Router from SSR"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 351,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L351"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1713,
										"name": "RouterState",
										"package": "react-router"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "loaderData"
											},
											{
												"type": "literal",
												"value": "actionData"
											},
											{
												"type": "literal",
												"value": "errors"
											}
										]
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 2080,
					"name": "InitialEntry",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A user-supplied object that describes a location. Used when providing\nentries to "
							},
							{
								"kind": "code",
								"text": "`createMemoryHistory`"
							},
							{
								"kind": "text",
								"text": " via its "
							},
							{
								"kind": "code",
								"text": "`initialEntries`"
							},
							{
								"kind": "text",
								"text": " option."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/history.ts",
							"line": 205,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L205"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1175,
										"name": "Location",
										"package": "react-router"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 2081,
					"name": "IsCookieFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
							"line": 132,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/cookies.ts#L132"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2082,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
									"line": 132,
									"character": 31,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/cookies.ts#L132"
								}
							],
							"signatures": [
								{
									"id": 2083,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2084,
											"name": "object",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "object",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"target": 150,
											"name": "Cookie",
											"package": "react-router"
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 2085,
					"name": "IsSessionFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
							"line": 144,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L144"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2086,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 144,
									"character": 32,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L144"
								}
							],
							"signatures": [
								{
									"id": 2087,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2088,
											"name": "object",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "object",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"target": 1764,
											"name": "Session",
											"package": "react-router"
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 2089,
					"name": "JsonFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 1306,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1306"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2090,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1306,
									"character": 27,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1306"
								}
							],
							"signatures": [
								{
									"id": 2091,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 2092,
											"name": "Data",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2093,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2092,
												"name": "Data",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 2094,
											"name": "init",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "ResponseInit"
														},
														"name": "ResponseInit",
														"package": "typescript"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Response"
										},
										"name": "Response",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 2095,
					"name": "LinkDescriptor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/links.ts",
							"line": 201,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/links.ts#L201"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 2076,
								"name": "HtmlLinkDescriptor",
								"package": "react-router"
							},
							{
								"type": "reference",
								"target": 1604,
								"name": "PrefetchPageDescriptor",
								"package": "react-router"
							}
						]
					}
				},
				{
					"id": 2096,
					"name": "LoaderFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Route loader function signature"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 160,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L160"
						}
					],
					"typeParameters": [
						{
							"id": 2097,
							"name": "Context",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 2098,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/utils.ts",
											"line": 160,
											"character": 44,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L160"
										}
									],
									"signatures": [
										{
											"id": 2099,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/utils.ts",
													"line": 161,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L161"
												}
											],
											"parameters": [
												{
													"id": 2100,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1170,
														"typeArguments": [
															{
																"type": "reference",
																"target": 2097,
																"name": "Context",
																"package": "react-router",
																"refersToTypeParameter": true
															}
														],
														"name": "LoaderFunctionArgs",
														"package": "react-router"
													}
												},
												{
													"id": 2101,
													"name": "handlerCtx",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/router/utils.ts",
													"qualifiedName": "DataFunctionReturnValue"
												},
												"name": "DataFunctionReturnValue",
												"package": "react-router"
											}
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2102,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2103,
											"name": "hydrate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/utils.ts",
													"line": 165,
													"character": 6,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L165"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2103
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/utils.ts",
											"line": 165,
											"character": 4,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L165"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2104,
					"name": "Match",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/define-route.ts",
							"line": 261,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/define-route.ts#L261"
						}
					],
					"typeParameters": [
						{
							"id": 2105,
							"name": "R",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/define-route.ts",
									"qualifiedName": "Route"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Route",
								"package": "react-router"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "packages/react-router/lib/router/define-route.ts",
							"qualifiedName": "Pretty"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 1906,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/define-route.ts",
											"qualifiedName": "LoaderDataFromRoute"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2105,
												"name": "R",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										],
										"name": "LoaderDataFromRoute",
										"package": "react-router"
									}
								],
								"name": "UIMatch",
								"package": "react-router"
							}
						],
						"name": "Pretty",
						"package": "react-router"
					}
				},
				{
					"id": 2106,
					"name": "MemoryUploadHandlerFilterArgs",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
							"line": 4,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L4"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2107,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2108,
									"name": "contentType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
											"line": 6,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L6"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2109,
									"name": "filename",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
											"line": 5,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L5"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2110,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
											"line": 7,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L7"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2108,
										2109,
										2110
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
									"line": 4,
									"character": 44,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L4"
								}
							]
						}
					}
				},
				{
					"id": 2111,
					"name": "MemoryUploadHandlerOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
							"line": 10,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L10"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2112,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2113,
									"name": "maxPartSize",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The maximum upload size allowed. If the size is exceeded an error will be thrown.\nDefaults to 3000000B (3MB)."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
											"line": 15,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L15"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2114,
									"name": "filter",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
											"line": 22,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L22"
										}
									],
									"signatures": [
										{
											"id": 2115,
											"name": "filter",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
													"line": 22,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L22"
												}
											],
											"parameters": [
												{
													"id": 2116,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2106,
														"name": "MemoryUploadHandlerFilterArgs",
														"package": "react-router"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "boolean"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2113
									]
								},
								{
									"title": "Methods",
									"children": [
										2114
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
									"line": 10,
									"character": 41,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L10"
								}
							]
						}
					}
				},
				{
					"id": 2117,
					"name": "MetaDescriptor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
							"line": 165,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L165"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 2118,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2119,
											"name": "charSet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 166,
													"character": 6,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L166"
												}
											],
											"type": {
												"type": "literal",
												"value": "utf-8"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2119
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 166,
											"character": 4,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L166"
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2120,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2121,
											"name": "title",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 167,
													"character": 6,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L167"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2121
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 167,
											"character": 4,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L167"
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2122,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2123,
											"name": "content",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 168,
													"character": 20,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L168"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2124,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 168,
													"character": 6,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L168"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2123,
												2124
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 168,
											"character": 4,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L168"
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2125,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2126,
											"name": "content",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 169,
													"character": 24,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L169"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2127,
											"name": "property",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 169,
													"character": 6,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L169"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2126,
												2127
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 169,
											"character": 4,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L169"
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2128,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2129,
											"name": "content",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 170,
													"character": 25,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L170"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2130,
											"name": "httpEquiv",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 170,
													"character": 6,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L170"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2129,
												2130
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 170,
											"character": 4,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L170"
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2131,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2132,
											"name": "script:ld+json",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 171,
													"character": 6,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L171"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"qualifiedName": "LdJsonObject"
												},
												"name": "LdJsonObject",
												"package": "react-router"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2132
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 171,
											"character": 4,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L171"
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2133,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2134,
											"name": "tagName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
													"line": 172,
													"character": 6,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L172"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "meta"
													},
													{
														"type": "literal",
														"value": "link"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2134
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 172,
											"character": 4,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L172"
										}
									],
									"indexSignature": {
										"id": 2135,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"sources": [
											{
												"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
												"line": 172,
												"character": 32,
												"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L172"
											}
										],
										"parameters": [
											{
												"id": 2136,
												"name": "name",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2137,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"line": 173,
											"character": 4,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L173"
										}
									],
									"indexSignature": {
										"id": 2138,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"sources": [
											{
												"fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
												"line": 173,
												"character": 6,
												"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routeModules.ts#L173"
											}
										],
										"parameters": [
											{
												"id": 2139,
												"name": "name",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							}
						]
					}
				},
				{
					"id": 2140,
					"name": "MetaMatch",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/define-route.ts",
							"line": 258,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/define-route.ts#L258"
						}
					],
					"typeParameters": [
						{
							"id": 2141,
							"name": "R",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/define-route.ts",
									"qualifiedName": "Route"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Route",
								"package": "react-router"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
							"qualifiedName": "MetaMatch"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/define-route.ts",
									"qualifiedName": "LoaderDataFromRoute"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2141,
										"name": "R",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								],
								"name": "LoaderDataFromRoute",
								"package": "react-router"
							}
						],
						"name": "_MetaMatch",
						"package": "react-router",
						"qualifiedName": "MetaMatch"
					}
				},
				{
					"id": 2142,
					"name": "NavLinkRenderProps",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The object passed to "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "NavLink",
								"target": 2286,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`children`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`className`"
							},
							{
								"kind": "text",
								"text": ", and "
							},
							{
								"kind": "code",
								"text": "`style`"
							},
							{
								"kind": "text",
								"text": " prop callbacks to render and style the link based on its state.\n\n"
							},
							{
								"kind": "code",
								"text": "```\n// className\n<NavLink\n  to=\"/messages\"\n  className={({ isActive, isPending }) =>\n    isPending ? \"pending\" : isActive ? \"active\" : \"\"\n  }\n>\n  Messages\n</NavLink>\n\n// style\n<NavLink\n  to=\"/messages\"\n  style={({ isActive, isPending }) => {\n    return {\n      fontWeight: isActive ? \"bold\" : \"\",\n      color: isPending ? \"red\" : \"black\",\n    }\n  )}\n/>\n\n// children\n<NavLink to=\"/tasks\">\n  {({ isActive, isPending }) => (\n    <span className={isActive ? \"active\" : \"\"}>Tasks</span>\n  )}\n</NavLink>\n```"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 691,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L691"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2143,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2144,
									"name": "isActive",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Indicates if the link's URL matches the current location."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/lib.tsx",
											"line": 695,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L695"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2145,
									"name": "isPending",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Indicates if the pending location matches the link's URL."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/lib.tsx",
											"line": 700,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L700"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2146,
									"name": "isTransitioning",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Indicates if a view transition to the link's URL is in progress. See "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "useViewTransitionState",
												"target": 2564,
												"tsLinkText": ""
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/lib.tsx",
											"line": 705,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L705"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2144,
										2145,
										2146
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 691,
									"character": 33,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L691"
								}
							]
						}
					}
				},
				{
					"id": 2147,
					"name": "Navigation",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 546,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L546"
						}
					],
					"type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 2148,
								"name": "NavigationStates",
								"package": "react-router"
							}
						},
						"objectType": {
							"type": "reference",
							"target": 2148,
							"name": "NavigationStates",
							"package": "react-router"
						}
					}
				},
				{
					"id": 2148,
					"name": "NavigationStates",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Potential states for state.navigation"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 513,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L513"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2149,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2150,
									"name": "Idle",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 514,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L514"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2151,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2152,
													"name": "formAction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 518,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L518"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "undefined"
													}
												},
												{
													"id": 2153,
													"name": "formData",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 520,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L520"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "undefined"
													}
												},
												{
													"id": 2154,
													"name": "formEncType",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 519,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L519"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "undefined"
													}
												},
												{
													"id": 2155,
													"name": "formMethod",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 517,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L517"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "undefined"
													}
												},
												{
													"id": 2156,
													"name": "json",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 521,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L521"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "undefined"
													}
												},
												{
													"id": 2157,
													"name": "location",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 516,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L516"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "undefined"
													}
												},
												{
													"id": 2158,
													"name": "state",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 515,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L515"
														}
													],
													"type": {
														"type": "literal",
														"value": "idle"
													}
												},
												{
													"id": 2159,
													"name": "text",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 522,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L522"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "undefined"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2152,
														2153,
														2154,
														2155,
														2156,
														2157,
														2158,
														2159
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/router.ts",
													"line": 514,
													"character": 8,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L514"
												}
											]
										}
									}
								},
								{
									"id": 2160,
									"name": "Loading",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 524,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L524"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2161,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2162,
													"name": "formAction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 528,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L528"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "formAction"
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "packages/react-router/lib/router/utils.ts",
																		"qualifiedName": "Submission"
																	},
																	"name": "Submission",
																	"package": "react-router"
																}
															},
															{
																"type": "intrinsic",
																"name": "undefined"
															}
														]
													}
												},
												{
													"id": 2163,
													"name": "formData",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 530,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L530"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "formData"
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "packages/react-router/lib/router/utils.ts",
																		"qualifiedName": "Submission"
																	},
																	"name": "Submission",
																	"package": "react-router"
																}
															},
															{
																"type": "intrinsic",
																"name": "undefined"
															}
														]
													}
												},
												{
													"id": 2164,
													"name": "formEncType",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 529,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L529"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "formEncType"
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "packages/react-router/lib/router/utils.ts",
																		"qualifiedName": "Submission"
																	},
																	"name": "Submission",
																	"package": "react-router"
																}
															},
															{
																"type": "intrinsic",
																"name": "undefined"
															}
														]
													}
												},
												{
													"id": 2165,
													"name": "formMethod",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 527,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L527"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "formMethod"
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "packages/react-router/lib/router/utils.ts",
																		"qualifiedName": "Submission"
																	},
																	"name": "Submission",
																	"package": "react-router"
																}
															},
															{
																"type": "intrinsic",
																"name": "undefined"
															}
														]
													}
												},
												{
													"id": 2166,
													"name": "json",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 531,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L531"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "json"
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "packages/react-router/lib/router/utils.ts",
																		"qualifiedName": "Submission"
																	},
																	"name": "Submission",
																	"package": "react-router"
																}
															},
															{
																"type": "intrinsic",
																"name": "undefined"
															}
														]
													}
												},
												{
													"id": 2167,
													"name": "location",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 526,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L526"
														}
													],
													"type": {
														"type": "reference",
														"target": 1175,
														"name": "Location",
														"package": "react-router"
													}
												},
												{
													"id": 2168,
													"name": "state",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 525,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L525"
														}
													],
													"type": {
														"type": "literal",
														"value": "loading"
													}
												},
												{
													"id": 2169,
													"name": "text",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 532,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L532"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "text"
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "packages/react-router/lib/router/utils.ts",
																		"qualifiedName": "Submission"
																	},
																	"name": "Submission",
																	"package": "react-router"
																}
															},
															{
																"type": "intrinsic",
																"name": "undefined"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2162,
														2163,
														2164,
														2165,
														2166,
														2167,
														2168,
														2169
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/router.ts",
													"line": 524,
													"character": 11,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L524"
												}
											]
										}
									}
								},
								{
									"id": 2170,
									"name": "Submitting",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/router/router.ts",
											"line": 534,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L534"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2171,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2172,
													"name": "formAction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 538,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L538"
														}
													],
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "formAction"
														},
														"objectType": {
															"type": "reference",
															"target": {
																"sourceFileName": "packages/react-router/lib/router/utils.ts",
																"qualifiedName": "Submission"
															},
															"name": "Submission",
															"package": "react-router"
														}
													}
												},
												{
													"id": 2173,
													"name": "formData",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 540,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L540"
														}
													],
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "formData"
														},
														"objectType": {
															"type": "reference",
															"target": {
																"sourceFileName": "packages/react-router/lib/router/utils.ts",
																"qualifiedName": "Submission"
															},
															"name": "Submission",
															"package": "react-router"
														}
													}
												},
												{
													"id": 2174,
													"name": "formEncType",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 539,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L539"
														}
													],
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "formEncType"
														},
														"objectType": {
															"type": "reference",
															"target": {
																"sourceFileName": "packages/react-router/lib/router/utils.ts",
																"qualifiedName": "Submission"
															},
															"name": "Submission",
															"package": "react-router"
														}
													}
												},
												{
													"id": 2175,
													"name": "formMethod",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 537,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L537"
														}
													],
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "formMethod"
														},
														"objectType": {
															"type": "reference",
															"target": {
																"sourceFileName": "packages/react-router/lib/router/utils.ts",
																"qualifiedName": "Submission"
															},
															"name": "Submission",
															"package": "react-router"
														}
													}
												},
												{
													"id": 2176,
													"name": "json",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 541,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L541"
														}
													],
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "json"
														},
														"objectType": {
															"type": "reference",
															"target": {
																"sourceFileName": "packages/react-router/lib/router/utils.ts",
																"qualifiedName": "Submission"
															},
															"name": "Submission",
															"package": "react-router"
														}
													}
												},
												{
													"id": 2177,
													"name": "location",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 536,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L536"
														}
													],
													"type": {
														"type": "reference",
														"target": 1175,
														"name": "Location",
														"package": "react-router"
													}
												},
												{
													"id": 2178,
													"name": "state",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 535,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L535"
														}
													],
													"type": {
														"type": "literal",
														"value": "submitting"
													}
												},
												{
													"id": 2179,
													"name": "text",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/router/router.ts",
															"line": 542,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L542"
														}
													],
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "text"
														},
														"objectType": {
															"type": "reference",
															"target": {
																"sourceFileName": "packages/react-router/lib/router/utils.ts",
																"qualifiedName": "Submission"
															},
															"name": "Submission",
															"package": "react-router"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2172,
														2173,
														2174,
														2175,
														2176,
														2177,
														2178,
														2179
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/router/router.ts",
													"line": 534,
													"character": 14,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L534"
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2150,
										2160,
										2170
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 513,
									"character": 31,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L513"
								}
							]
						}
					}
				},
				{
					"id": 2180,
					"name": "ParamKeyValuePair",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/dom.ts",
							"line": 45,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L45"
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 2181,
					"name": "ParamParseKey",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 375,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L375"
						}
					],
					"typeParameters": [
						{
							"id": 2182,
							"name": "Segment",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "tuple",
							"elements": [
								{
									"type": "reference",
									"target": 2185,
									"typeArguments": [
										{
											"type": "reference",
											"target": 2182,
											"name": "Segment",
											"package": "react-router",
											"refersToTypeParameter": true
										}
									],
									"name": "PathParam",
									"package": "react-router"
								}
							]
						},
						"extendsType": {
							"type": "tuple",
							"elements": [
								{
									"type": "intrinsic",
									"name": "never"
								}
							]
						},
						"trueType": {
							"type": "intrinsic",
							"name": "string"
						},
						"falseType": {
							"type": "reference",
							"target": 2185,
							"typeArguments": [
								{
									"type": "reference",
									"target": 2182,
									"name": "Segment",
									"package": "react-router",
									"refersToTypeParameter": true
								}
							],
							"name": "PathParam",
							"package": "react-router"
						}
					}
				},
				{
					"id": 2183,
					"name": "Params",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The parameters that were parsed from the URL path."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 382,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L382"
						}
					],
					"typeParameters": [
						{
							"id": 2184,
							"name": "Key",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "key",
						"parameterType": {
							"type": "reference",
							"target": 2184,
							"name": "Key",
							"package": "react-router",
							"refersToTypeParameter": true
						},
						"templateType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "undefined"
								}
							]
						},
						"readonlyModifier": "+"
					}
				},
				{
					"id": 2185,
					"name": "PathParam",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Examples:\n\"/a/b/*\" -> \"*\"\n\":a\" -> \"a\"\n\"/a/:b\" -> \"b\"\n\"/a/blahblahblah:b\" -> \"b\"\n\"/:a/:b\" -> \"a\" | \"b\"\n\"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\""
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 362,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L362"
						}
					],
					"typeParameters": [
						{
							"id": 2186,
							"name": "Path",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 2186,
							"name": "Path",
							"package": "react-router",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "union",
							"types": [
								{
									"type": "literal",
									"value": "*"
								},
								{
									"type": "literal",
									"value": "/*"
								}
							]
						},
						"trueType": {
							"type": "literal",
							"value": "*"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 2186,
								"name": "Path",
								"package": "react-router",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "inferred",
											"name": "Rest"
										},
										"/*"
									]
								]
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "*"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/utils.ts",
											"qualifiedName": "_PathParam"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/router/utils.ts",
													"qualifiedName": "Rest"
												},
												"name": "Rest",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										],
										"name": "_PathParam",
										"package": "react-router"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/utils.ts",
									"qualifiedName": "_PathParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2186,
										"name": "Path",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								],
								"name": "_PathParam",
								"package": "react-router"
							}
						}
					}
				},
				{
					"id": 2187,
					"name": "RedirectFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 1337,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1337"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2188,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1337,
									"character": 31,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1337"
								}
							],
							"signatures": [
								{
									"id": 2189,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2190,
											"name": "url",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2191,
											"name": "init",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "ResponseInit"
														},
														"name": "ResponseInit",
														"package": "typescript"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Response"
										},
										"name": "Response",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 2192,
					"name": "RelativeRoutingType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "- \"route\": relative to the route hierarchy so "
							},
							{
								"kind": "code",
								"text": "`..`"
							},
							{
								"kind": "text",
								"text": " means remove all segments of the current route even if it has many. For example, a "
							},
							{
								"kind": "code",
								"text": "`route(\"posts/:id\")`"
							},
							{
								"kind": "text",
								"text": " would have both "
							},
							{
								"kind": "code",
								"text": "`:id`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`posts`"
							},
							{
								"kind": "text",
								"text": " removed from the url.\n- \"path\": relative to the pathname so "
							},
							{
								"kind": "code",
								"text": "`..`"
							},
							{
								"kind": "text",
								"text": " means remove one segment of the pathname. For example, a "
							},
							{
								"kind": "code",
								"text": "`route(\"posts/:id\")`"
							},
							{
								"kind": "text",
								"text": " would have only "
							},
							{
								"kind": "code",
								"text": "`:id`"
							},
							{
								"kind": "text",
								"text": " removed from the url."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 452,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L452"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "route"
							},
							{
								"type": "literal",
								"value": "path"
							}
						]
					}
				},
				{
					"id": 2193,
					"name": "RequestHandler",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/server.ts",
							"line": 47,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/server.ts#L47"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2194,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/server.ts",
									"line": 47,
									"character": 29,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/server.ts#L47"
								}
							],
							"signatures": [
								{
									"id": 2195,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2196,
											"name": "request",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Request"
												},
												"name": "Request",
												"package": "typescript"
											}
										},
										{
											"id": 2197,
											"name": "loadContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 139,
												"name": "AppLoadContext",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Response"
												},
												"name": "Response",
												"package": "typescript"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 2198,
					"name": "RevalidationState",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 548,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L548"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "idle"
							},
							{
								"type": "literal",
								"value": "loading"
							}
						]
					}
				},
				{
					"id": 2199,
					"name": "RouteObject",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 63,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L63"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 817,
								"name": "IndexRouteObject",
								"package": "react-router"
							},
							{
								"type": "reference",
								"target": 1537,
								"name": "NonIndexRouteObject",
								"package": "react-router"
							}
						]
					}
				},
				{
					"id": 2200,
					"name": "RouteProps",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 673,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L673"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 1583,
								"name": "PathRouteProps",
								"package": "react-router"
							},
							{
								"type": "reference",
								"target": 859,
								"name": "LayoutRouteProps",
								"package": "react-router"
							},
							{
								"type": "reference",
								"target": 838,
								"name": "IndexRouteProps",
								"package": "react-router"
							}
						]
					}
				},
				{
					"id": 2201,
					"name": "RouterFetchOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Options to pass to fetch()"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 508,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L508"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/router.ts",
									"qualifiedName": "LoadFetchOptions"
								},
								"name": "LoadFetchOptions",
								"package": "react-router"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/router.ts",
									"qualifiedName": "SubmitFetchOptions"
								},
								"name": "SubmitFetchOptions",
								"package": "react-router"
							}
						]
					}
				},
				{
					"id": 2202,
					"name": "RouterNavigateOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Options to pass to navigate() for a navigation"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 491,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L491"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/router.ts",
									"qualifiedName": "LinkNavigateOptions"
								},
								"name": "LinkNavigateOptions",
								"package": "react-router"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/router.ts",
									"qualifiedName": "SubmissionNavigateOptions"
								},
								"name": "SubmissionNavigateOptions",
								"package": "react-router"
							}
						]
					}
				},
				{
					"id": 2203,
					"name": "ScriptsProps",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A couple common attributes:\n\n- "
							},
							{
								"kind": "code",
								"text": "`<Scripts crossOrigin>`"
							},
							{
								"kind": "text",
								"text": " for hosting your static assets on a different server than your app.\n- "
							},
							{
								"kind": "code",
								"text": "`<Scripts nonce>`"
							},
							{
								"kind": "text",
								"text": " to support a [content security policy for scripts](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src) with [nonce-sources](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/Sources#sources) for your "
							},
							{
								"kind": "code",
								"text": "`<script>`"
							},
							{
								"kind": "text",
								"text": " tags.\n\nYou cannot pass through attributes such as "
							},
							{
								"kind": "code",
								"text": "`async`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`defer`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`src`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`noModule`"
							},
							{
								"kind": "text",
								"text": " because they are managed by React Router internally."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/components.tsx",
							"line": 575,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/components.tsx#L575"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.HTMLProps"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLScriptElement"
										},
										"name": "HTMLScriptElement",
										"package": "typescript"
									}
								],
								"name": "React.HTMLProps",
								"package": "@types/react"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "children"
									},
									{
										"type": "literal",
										"value": "async"
									},
									{
										"type": "literal",
										"value": "defer"
									},
									{
										"type": "literal",
										"value": "src"
									},
									{
										"type": "literal",
										"value": "type"
									},
									{
										"type": "literal",
										"value": "noModule"
									},
									{
										"type": "literal",
										"value": "dangerouslySetInnerHTML"
									},
									{
										"type": "literal",
										"value": "suppressHydrationWarning"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				},
				{
					"id": 2204,
					"name": "ScrollRestorationProps",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1109,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1109"
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 2203,
								"name": "ScriptsProps",
								"package": "react-router"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2205,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2206,
											"name": "getKey",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Defines the key used to restore scroll positions.\n\n"
													},
													{
														"kind": "code",
														"text": "```tsx\n<ScrollRestoration\n  getKey={(location, matches) => {\n    // default behavior\n    return location.key\n  }}\n/>\n```"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 1122,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1122"
												}
											],
											"type": {
												"type": "reference",
												"target": 787,
												"name": "GetScrollRestorationKeyFunction",
												"package": "react-router"
											}
										},
										{
											"id": 2207,
											"name": "storageKey",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 1124,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1124"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2206,
												2207
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/lib.tsx",
											"line": 1109,
											"character": 52,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1109"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2208,
					"name": "SetURLSearchParams",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets new search params and causes a navigation when called.\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\n<button\n  onClick={() => {\n    const params = new URLSearchParams();\n    params.set(\"someKey\", \"someValue\");\n    setSearchParams(params, {\n      preventScrollReset: true,\n    });\n  }}\n/>\n```"
							},
							{
								"kind": "text",
								"text": "\n\nIt also supports a function for setting new search params.\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\n<button\n  onClick={() => {\n    setSearchParams((prev) => {\n      prev.set(\"someKey\", \"someValue\");\n      return prev;\n    });\n  }}\n/>\n```"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1413,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1413"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2209,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1413,
									"character": 33,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1413"
								}
							],
							"signatures": [
								{
									"id": 2210,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2211,
											"name": "nextInit",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 2228,
														"name": "URLSearchParamsInit",
														"package": "react-router"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2212,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/dom/lib.tsx",
																	"line": 1416,
																	"character": 7,
																	"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1416"
																}
															],
															"signatures": [
																{
																	"id": 2213,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 2214,
																			"name": "prev",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
																					"qualifiedName": "URLSearchParams"
																				},
																				"name": "URLSearchParams",
																				"package": "typescript"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 2228,
																		"name": "URLSearchParamsInit",
																		"package": "react-router"
																	}
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 2215,
											"name": "navigateOpts",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1502,
												"name": "NavigateOptions",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 2216,
					"name": "SignFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/crypto.ts",
							"line": 1,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/crypto.ts#L1"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2217,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/crypto.ts",
									"line": 1,
									"character": 27,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/crypto.ts#L1"
								}
							],
							"signatures": [
								{
									"id": 2218,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2219,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2220,
											"name": "secret",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 2221,
					"name": "SubmitTarget",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/dom.ts",
							"line": 128,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L128"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLFormElement"
								},
								"name": "HTMLFormElement",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLButtonElement"
								},
								"name": "HTMLButtonElement",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLInputElement"
								},
								"name": "HTMLInputElement",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "FormData"
								},
								"name": "FormData",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "URLSearchParams"
								},
								"name": "URLSearchParams",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/dom/dom.ts",
									"qualifiedName": "JsonValue"
								},
								"name": "JsonValue",
								"package": "react-router"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					}
				},
				{
					"id": 2222,
					"name": "To",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Describes a location that is the destination of some navigation used in\n"
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Link",
								"target": 2272
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "useNavigate",
								"target": 2638
							},
							{
								"kind": "text",
								"text": ", etc."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/history.ts",
							"line": 105,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L105"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1568,
										"name": "Path",
										"package": "react-router"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 2223,
					"name": "TypedResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/responses.ts",
							"line": 14,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/responses.ts#L14"
						}
					],
					"typeParameters": [
						{
							"id": 2224,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Response"
										},
										"name": "Response",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": "json"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2225,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2226,
											"name": "json",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/server-runtime/responses.ts",
													"line": 15,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/responses.ts#L15"
												}
											],
											"signatures": [
												{
													"id": 2227,
													"name": "json",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/server-runtime/responses.ts",
															"line": 15,
															"character": 2,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/responses.ts#L15"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 2224,
																"name": "T",
																"package": "react-router",
																"refersToTypeParameter": true
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												2226
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/responses.ts",
											"line": 14,
											"character": 66,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/responses.ts#L14"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2228,
					"name": "URLSearchParamsInit",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/dom.ts",
							"line": 47,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L47"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2180,
									"name": "ParamKeyValuePair",
									"package": "react-router"
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "URLSearchParams"
								},
								"name": "URLSearchParams",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 2229,
					"name": "UnsignFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/crypto.ts",
							"line": 3,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/crypto.ts#L3"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2230,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/crypto.ts",
									"line": 3,
									"character": 29,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/crypto.ts#L3"
								}
							],
							"signatures": [
								{
									"id": 2231,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2232,
											"name": "cookie",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2233,
											"name": "secret",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "literal",
														"value": false
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 2234,
					"name": "UploadHandler",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/formData.ts",
							"line": 11,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/formData.ts#L11"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2235,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/formData.ts",
									"line": 11,
									"character": 28,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/formData.ts#L11"
								}
							],
							"signatures": [
								{
									"id": 2236,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2237,
											"name": "part",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2238,
												"name": "UploadHandlerPart",
												"package": "react-router"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "File"
														},
														"name": "File",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 2238,
					"name": "UploadHandlerPart",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/formData.ts",
							"line": 4,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/formData.ts#L4"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2239,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2240,
									"name": "contentType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/formData.ts",
											"line": 7,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/formData.ts#L7"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2241,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/formData.ts",
											"line": 8,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/formData.ts#L8"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2018.asynciterable.d.ts",
											"qualifiedName": "AsyncIterable"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										],
										"name": "AsyncIterable",
										"package": "typescript"
									}
								},
								{
									"id": 2242,
									"name": "filename",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/formData.ts",
											"line": 6,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/formData.ts#L6"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2243,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/server-runtime/formData.ts",
											"line": 5,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/formData.ts#L5"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2240,
										2241,
										2242,
										2243
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/formData.ts",
									"line": 4,
									"character": 32,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/formData.ts#L4"
								}
							]
						}
					}
				},
				{
					"id": 2244,
					"name": "IDLE_BLOCKER",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 757,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L757"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "packages/react-router/lib/router/router.ts",
							"qualifiedName": "BlockerUnblocked"
						},
						"name": "BlockerUnblocked",
						"package": "react-router"
					},
					"defaultValue": "..."
				},
				{
					"id": 2245,
					"name": "IDLE_FETCHER",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 746,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L746"
						}
					],
					"type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "literal",
							"value": "Idle"
						},
						"objectType": {
							"type": "reference",
							"target": {
								"sourceFileName": "packages/react-router/lib/router/router.ts",
								"qualifiedName": "FetcherStates"
							},
							"name": "FetcherStates",
							"package": "react-router"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 2246,
					"name": "IDLE_NAVIGATION",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 735,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L735"
						}
					],
					"type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "literal",
							"value": "Idle"
						},
						"objectType": {
							"type": "reference",
							"target": 2148,
							"name": "NavigationStates",
							"package": "react-router"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 2247,
					"name": "UNSAFE_DataRouterContext",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 85,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L85"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.Context"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/context.ts",
											"qualifiedName": "DataRouterContextObject"
										},
										"name": "DataRouterContextObject",
										"package": "react-router"
									}
								]
							}
						],
						"name": "Context",
						"package": "@types/react",
						"qualifiedName": "React.Context"
					},
					"defaultValue": "..."
				},
				{
					"id": 2248,
					"name": "UNSAFE_DataRouterStateContext",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 89,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L89"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.Context"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 1713,
										"name": "RouterState",
										"package": "react-router"
									}
								]
							}
						],
						"name": "Context",
						"package": "@types/react",
						"qualifiedName": "React.Context"
					},
					"defaultValue": "..."
				},
				{
					"id": 2249,
					"name": "UNSAFE_FetchersContext",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 114,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L114"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.Context"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/context.ts",
									"qualifiedName": "FetchersContextObject"
								},
								"name": "FetchersContextObject",
								"package": "react-router"
							}
						],
						"name": "Context",
						"package": "@types/react",
						"qualifiedName": "React.Context"
					},
					"defaultValue": "..."
				},
				{
					"id": 2250,
					"name": "UNSAFE_FrameworkContext",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/components.tsx",
							"line": 58,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/components.tsx#L58"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.Context"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
											"qualifiedName": "FrameworkContextObject"
										},
										"name": "FrameworkContextObject",
										"package": "react-router"
									}
								]
							}
						],
						"name": "Context",
						"package": "@types/react",
						"qualifiedName": "React.Context"
					},
					"defaultValue": "..."
				},
				{
					"id": 2251,
					"name": "UNSAFE_LocationContext",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 168,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L168"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.Context"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/context.ts",
									"qualifiedName": "LocationContextObject"
								},
								"name": "LocationContextObject",
								"package": "react-router"
							}
						],
						"name": "Context",
						"package": "@types/react",
						"qualifiedName": "React.Context"
					},
					"defaultValue": "..."
				},
				{
					"id": 2252,
					"name": "UNSAFE_NavigationContext",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 158,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L158"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.Context"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/context.ts",
									"qualifiedName": "NavigationContextObject"
								},
								"name": "NavigationContextObject",
								"package": "react-router"
							}
						],
						"name": "Context",
						"package": "@types/react",
						"qualifiedName": "React.Context"
					},
					"defaultValue": "..."
				},
				{
					"id": 2253,
					"name": "UNSAFE_RouteContext",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 179,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L179"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.Context"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/context.ts",
									"qualifiedName": "RouteContextObject"
								},
								"name": "RouteContextObject",
								"package": "react-router"
							}
						],
						"name": "Context",
						"package": "@types/react",
						"qualifiedName": "React.Context"
					},
					"defaultValue": "..."
				},
				{
					"id": 2254,
					"name": "UNSAFE_SingleFetchRedirectSymbol",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
							"line": 16,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/single-fetch.tsx#L16"
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 2254,
							"name": "SingleFetchRedirectSymbol",
							"package": "react-router"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 2255,
					"name": "UNSAFE_ViewTransitionContext",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/context.ts",
							"line": 105,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/context.ts#L105"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.Context"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/context.ts",
									"qualifiedName": "ViewTransitionContextObject"
								},
								"name": "ViewTransitionContextObject",
								"package": "react-router"
							}
						],
						"name": "Context",
						"package": "@types/react",
						"qualifiedName": "React.Context"
					},
					"defaultValue": "..."
				},
				{
					"id": 2256,
					"name": "Await",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 977,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L977"
						}
					],
					"signatures": [
						{
							"id": 2257,
							"name": "Await",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Used to render promise values with automatic error handling.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { Await, useLoaderData } from \"react-router\";\n\nexport function loader() {\n  // not awaited\n  const reviews = getReviews()\n  // awaited (blocks the transition)\n  const book = await fetch(\"/api/book\").then((res) => res.json())\n  return { book, reviews }\n}\n\nfunction Book() {\n  const { book, reviews } = useLoaderData();\n  return (\n    <div>\n      <h1>{book.title}</h1>\n      <p>{book.description}</p>\n      <React.Suspense fallback={<ReviewsSkeleton />}>\n        <Await\n          resolve={reviews}\n          errorElement={\n            <div>Could not load reviews 😬</div>\n          }\n          children={(resolvedReviews) => (\n            <Reviews items={resolvedReviews} />\n          )}\n        />\n      </React.Suspense>\n    </div>\n  );\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n**Note:** "
									},
									{
										"kind": "code",
										"text": "`<Await>`"
									},
									{
										"kind": "text",
										"text": " expects to be rendered inside of a "
									},
									{
										"kind": "code",
										"text": "`<React.Suspense>`"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 977,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L977"
								}
							],
							"parameters": [
								{
									"id": 2258,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 142,
										"name": "AwaitProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 2259,
					"name": "BrowserRouter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 249,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L249"
						}
					],
					"signatures": [
						{
							"id": 2260,
							"name": "BrowserRouter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A "
									},
									{
										"kind": "code",
										"text": "`<Router>`"
									},
									{
										"kind": "text",
										"text": " for use in web browsers. Provides the cleanest URLs."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 249,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L249"
								}
							],
							"parameters": [
								{
									"id": 2261,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 146,
										"name": "BrowserRouterProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 2262,
					"name": "Form",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"children": [
						{
							"id": 2263,
							"name": "$$typeof",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "symbol"
							}
						},
						{
							"id": 2264,
							"name": "defaultProps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 818,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 499,
												"name": "FormProps",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLFormElement"
														},
														"name": "HTMLFormElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 2265,
							"name": "displayName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2266,
							"name": "propTypes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 819,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.WeakValidationMap"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 499,
												"name": "FormProps",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLFormElement"
														},
														"name": "HTMLFormElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								],
								"name": "WeakValidationMap",
								"package": "@types/react",
								"qualifiedName": "React.WeakValidationMap"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2263,
								2264,
								2265,
								2266
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1043,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1043"
						}
					],
					"signatures": [
						{
							"id": 2267,
							"name": "Form",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A progressively enhanced HTML ["
									},
									{
										"kind": "code",
										"text": "`<form>`"
									},
									{
										"kind": "text",
										"text": "](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form) that submits data to actions via "
									},
									{
										"kind": "code",
										"text": "`fetch`"
									},
									{
										"kind": "text",
										"text": ", activating pending states in "
									},
									{
										"kind": "code",
										"text": "`useNavigation`"
									},
									{
										"kind": "text",
										"text": " which enables advanced user interfaces beyond a basic HTML form. After a form's action completes, all data on the page is automatically revalidated to keep the UI in sync with the data.\n\nBecause it uses the HTML form API, server rendered pages are interactive at a basic level before JavaScript loads. Instead of React Router managing the submission, the browser manages the submission as well as the pending states (like the spinning favicon). After JavaScript loads, React Router takes over enabling web application user experiences.\n\nForm is most useful for submissions that should also change the URL or otherwise add an entry to the browser history stack. For forms that shouldn't manipulate the browser history stack, use ["
									},
									{
										"kind": "code",
										"text": "`<fetcher.Form>`"
									},
									{
										"kind": "text",
										"text": "][fetcher_form].\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { Form } from \"react-router\";\n\nfunction NewEvent() {\n  return (\n    <Form action=\"/events\" method=\"post\">\n      <input name=\"title\" type=\"text\" />\n      <input name=\"description\" type=\"text\" />\n    </Form>\n  )\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1043,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1043"
								}
							],
							"parameters": [
								{
									"id": 2268,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 499,
												"name": "FormProps",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLFormElement"
														},
														"name": "HTMLFormElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						}
					]
				},
				{
					"id": 2269,
					"name": "HashRouter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 299,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L299"
						}
					],
					"signatures": [
						{
							"id": 2270,
							"name": "HashRouter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A "
									},
									{
										"kind": "code",
										"text": "`<Router>`"
									},
									{
										"kind": "text",
										"text": " for use in web browsers. Stores the location in the hash\nportion of the URL so it is not sent to the server."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 299,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L299"
								}
							],
							"parameters": [
								{
									"id": 2271,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 806,
										"name": "HashRouterProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 2272,
					"name": "Link",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"children": [
						{
							"id": 2273,
							"name": "$$typeof",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "symbol"
							}
						},
						{
							"id": 2274,
							"name": "defaultProps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 818,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 883,
												"name": "LinkProps",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLAnchorElement"
														},
														"name": "HTMLAnchorElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 2275,
							"name": "displayName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2276,
							"name": "propTypes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 819,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.WeakValidationMap"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 883,
												"name": "LinkProps",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLAnchorElement"
														},
														"name": "HTMLAnchorElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								],
								"name": "WeakValidationMap",
								"package": "@types/react",
								"qualifiedName": "React.WeakValidationMap"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2273,
								2274,
								2275,
								2276
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 551,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L551"
						}
					],
					"signatures": [
						{
							"id": 2277,
							"name": "Link",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A progressively enhanced "
									},
									{
										"kind": "code",
										"text": "`<a href>`"
									},
									{
										"kind": "text",
										"text": " wrapper to enable navigation with client-side routing.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { Link } from \"react-router\";\n\n<Link to=\"/dashboard\">Dashboard</Link>;\n\n<Link\n  to={{\n    pathname: \"/some/path\",\n    search: \"?query=string\",\n    hash: \"#hash\",\n  }}\n/>\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 551,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L551"
								}
							],
							"parameters": [
								{
									"id": 2278,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 883,
												"name": "LinkProps",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLAnchorElement"
														},
														"name": "HTMLAnchorElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						}
					]
				},
				{
					"id": 2279,
					"name": "Links",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/components.tsx",
							"line": 232,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/components.tsx#L232"
						}
					],
					"signatures": [
						{
							"id": 2280,
							"name": "Links",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders all of the "
									},
									{
										"kind": "code",
										"text": "`<link>`"
									},
									{
										"kind": "text",
										"text": " tags created by route module "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "LinksFunction",
										"target": 1168
									},
									{
										"kind": "text",
										"text": " export. You should render it inside the "
									},
									{
										"kind": "code",
										"text": "`<head>`"
									},
									{
										"kind": "text",
										"text": " of your document.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { Links } from \"react-router\";\n\nexport default function Root() {\n  return (\n    <html>\n      <head>\n        <Links />\n      </head>\n      <body></body>\n    </html>\n  );\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/components.tsx",
									"line": 232,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/components.tsx#L232"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 2281,
					"name": "MemoryRouter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 482,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L482"
						}
					],
					"signatures": [
						{
							"id": 2282,
							"name": "MemoryRouter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A "
									},
									{
										"kind": "code",
										"text": "`<Router>`"
									},
									{
										"kind": "text",
										"text": " that stores all entries in memory."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 482,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L482"
								}
							],
							"parameters": [
								{
									"id": 2283,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1182,
										"name": "MemoryRouterProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactElement"
								},
								"name": "React.ReactElement",
								"package": "@types/react"
							}
						}
					]
				},
				{
					"id": 2284,
					"name": "Meta",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/components.tsx",
							"line": 426,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/components.tsx#L426"
						}
					],
					"signatures": [
						{
							"id": 2285,
							"name": "Meta",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders all the "
									},
									{
										"kind": "code",
										"text": "`<meta>`"
									},
									{
										"kind": "text",
										"text": " tags created by route module "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "MetaFunction",
										"target": 1195,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " exports. You should render it inside the "
									},
									{
										"kind": "code",
										"text": "`<head>`"
									},
									{
										"kind": "text",
										"text": " of your HTML.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { Meta } from \"react-router\";\n\nexport default function Root() {\n  return (\n    <html>\n      <head>\n        <Meta />\n      </head>\n    </html>\n  );\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/components.tsx",
									"line": 426,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/components.tsx#L426"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 2286,
					"name": "NavLink",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"children": [
						{
							"id": 2287,
							"name": "$$typeof",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 393,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "symbol"
							}
						},
						{
							"id": 2288,
							"name": "defaultProps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 818,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 1200,
												"name": "NavLinkProps",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLAnchorElement"
														},
														"name": "HTMLAnchorElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 2289,
							"name": "displayName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 397,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2290,
							"name": "propTypes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"line": 819,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.WeakValidationMap"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 1200,
												"name": "NavLinkProps",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLAnchorElement"
														},
														"name": "HTMLAnchorElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								],
								"name": "WeakValidationMap",
								"package": "@types/react",
								"qualifiedName": "React.WeakValidationMap"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2287,
								2288,
								2289,
								2290
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 794,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L794"
						}
					],
					"signatures": [
						{
							"id": 2291,
							"name": "NavLink",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Wraps "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "`<Link>`",
										"target": 2272,
										"tsLinkText": "`<Link>`"
									},
									{
										"kind": "text",
										"text": " with additional props for styling active and pending states.\n\n- Automatically applies classes to the link based on its active and pending states, see "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NavLinkProps.className",
										"target": 1265,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ".\n- Automatically applies "
									},
									{
										"kind": "code",
										"text": "`aria-current=\"page\"`"
									},
									{
										"kind": "text",
										"text": " to the link when the link is active. See ["
									},
									{
										"kind": "code",
										"text": "`aria-current`"
									},
									{
										"kind": "text",
										"text": "](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-current) on MDN.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { NavLink } from \"react-router\"\n<NavLink to=\"/message\" />\n```"
									},
									{
										"kind": "text",
										"text": "\n\nStates are available through the className, style, and children render props. See "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NavLinkRenderProps",
										"target": 2142,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<NavLink\n  to=\"/messages\"\n  className={({ isActive, isPending }) =>\n    isPending ? \"pending\" : isActive ? \"active\" : \"\"\n  }\n>\n  Messages\n</NavLink>\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 794,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L794"
								}
							],
							"parameters": [
								{
									"id": 2292,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 1200,
												"name": "NavLinkProps",
												"package": "react-router"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.RefAttributes"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "HTMLAnchorElement"
														},
														"name": "HTMLAnchorElement",
														"package": "typescript"
													}
												],
												"name": "RefAttributes",
												"package": "@types/react",
												"qualifiedName": "React.RefAttributes"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						}
					]
				},
				{
					"id": 2293,
					"name": "Navigate",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 541,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L541"
						}
					],
					"signatures": [
						{
							"id": 2294,
							"name": "Navigate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A component-based version of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useNavigate",
										"target": 2638,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " to use in a ["
									},
									{
										"kind": "code",
										"text": "`React.Component\nClass`"
									},
									{
										"kind": "text",
										"text": "](https://reactjs.org/docs/react-component.html) where hooks are not\nable to be used.\n\nIt's recommended to avoid using this component in favor of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useNavigate",
										"target": 2638,
										"tsLinkText": ""
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 541,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L541"
								}
							],
							"parameters": [
								{
									"id": 2295,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1509,
										"name": "NavigateProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "literal",
								"value": null
							}
						}
					]
				},
				{
					"id": 2296,
					"name": "Outlet",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 618,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L618"
						}
					],
					"signatures": [
						{
							"id": 2297,
							"name": "Outlet",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders the matching child route of a parent route or nothing if no child route matches.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { Outlet } from \"react-router\"\n\nexport default function SomeParent() {\n  return (\n    <div>\n      <h1>Parent Content</h1>\n      <Outlet />\n    </div>\n  );\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 618,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L618"
								}
							],
							"parameters": [
								{
									"id": 2298,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1558,
										"name": "OutletProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactElement"
										},
										"name": "React.ReactElement",
										"package": "@types/react"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 2299,
					"name": "PrefetchPageLinks",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/components.tsx",
							"line": 273,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/components.tsx#L273"
						}
					],
					"signatures": [
						{
							"id": 2300,
							"name": "PrefetchPageLinks",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders "
									},
									{
										"kind": "code",
										"text": "`<link rel=prefetch|modulepreload>`"
									},
									{
										"kind": "text",
										"text": " tags for modules and data of another page to enable an instant navigation to that page. "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "`<Link prefetch>`",
										"target": 1137
									},
									{
										"kind": "text",
										"text": " uses this internally, but you can render it to prefetch a page for any other reason.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { PrefetchPageLinks } from \"react-router\"\n\n<PrefetchPageLinks page=\"/absolute/path\" />\n```"
									},
									{
										"kind": "text",
										"text": "\n\nFor example, you may render one of this as the user types into a search field to prefetch search results before they click through to their selection."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/components.tsx",
									"line": 273,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/components.tsx#L273"
								}
							],
							"parameters": [
								{
									"id": 2301,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1604,
										"name": "PrefetchPageDescriptor",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.JSX.Element"
										},
										"name": "Element",
										"package": "@types/react",
										"qualifiedName": "React.JSX.Element"
									}
								]
							}
						}
					]
				},
				{
					"id": 2302,
					"name": "Route",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 683,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L683"
						}
					],
					"signatures": [
						{
							"id": 2303,
							"name": "Route",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configures an element to render when a pattern matches the current location.\nIt must be rendered within a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Routes",
										"target": 2311,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " element. Note that these routes\ndo not participate in data loading, actions, code splitting, or any other\nroute module features."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 683,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L683"
								}
							],
							"parameters": [
								{
									"id": 2304,
									"name": "_props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2200,
										"name": "RouteProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactElement"
										},
										"name": "React.ReactElement",
										"package": "@types/react"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 2305,
					"name": "Router",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 712,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L712"
						}
					],
					"signatures": [
						{
							"id": 2306,
							"name": "Router",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Provides location context for the rest of the app.\n\nNote: You usually won't render a "
									},
									{
										"kind": "code",
										"text": "`<Router>`"
									},
									{
										"kind": "text",
										"text": " directly. Instead, you'll render a\nrouter that is more specific to your environment such as a "
									},
									{
										"kind": "code",
										"text": "`<BrowserRouter>`"
									},
									{
										"kind": "text",
										"text": "\nin web browsers or a "
									},
									{
										"kind": "code",
										"text": "`<StaticRouter>`"
									},
									{
										"kind": "text",
										"text": " for server rendering."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 712,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L712"
								}
							],
							"parameters": [
								{
									"id": 2307,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1698,
										"name": "RouterProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactElement"
										},
										"name": "React.ReactElement",
										"package": "@types/react"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 2308,
					"name": "RouterProvider",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 200,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L200"
						}
					],
					"signatures": [
						{
							"id": 2309,
							"name": "RouterProvider",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Given a Remix Router instance, render the appropriate UI"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 200,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L200"
								}
							],
							"parameters": [
								{
									"id": 2310,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1705,
										"name": "RouterProviderProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactElement"
								},
								"name": "React.ReactElement",
								"package": "@types/react"
							}
						}
					]
				},
				{
					"id": 2311,
					"name": "Routes",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 820,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L820"
						}
					],
					"signatures": [
						{
							"id": 2312,
							"name": "Routes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders a branch of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "`<Routes>`",
										"target": 2302,
										"tsLinkText": "`<Routes>`"
									},
									{
										"kind": "text",
										"text": " that best matches the current\nlocation. Note that these routes do not participate in data loading, actions,\ncode splitting, or any other route module features.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { Routes, Route } from \"react-router\"\n\n<Routes>\n <Route index element={<StepOne />} />\n <Route path=\"step-2\" element={<StepTwo />} />\n <Route path=\"step-3\" element={<StepThree />}>\n</Routes>\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 820,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L820"
								}
							],
							"parameters": [
								{
									"id": 2313,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1735,
										"name": "RoutesProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactElement"
										},
										"name": "React.ReactElement",
										"package": "@types/react"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 2314,
					"name": "Scripts",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/components.tsx",
							"line": 609,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/components.tsx#L609"
						}
					],
					"signatures": [
						{
							"id": 2315,
							"name": "Scripts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders the client runtime of your app. It should be rendered inside the "
									},
									{
										"kind": "code",
										"text": "`<body>`"
									},
									{
										"kind": "text",
										"text": " of the document.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { Scripts } from \"react-router\";\n\nexport default function Root() {\n  return (\n    <html>\n      <head />\n      <body>\n        <Scripts />\n      </body>\n    </html>\n  );\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nIf server rendering, you can omit "
									},
									{
										"kind": "code",
										"text": "`<Scripts/>`"
									},
									{
										"kind": "text",
										"text": " and the app will work as a traditional web app without JavaScript, relying solely on HTML and browser behaviors."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/components.tsx",
									"line": 609,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/components.tsx#L609"
								}
							],
							"parameters": [
								{
									"id": 2316,
									"name": "props",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2203,
										"name": "ScriptsProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.JSX.Element"
										},
										"name": "Element",
										"package": "@types/react",
										"qualifiedName": "React.JSX.Element"
									}
								]
							}
						}
					]
				},
				{
					"id": 2317,
					"name": "ScrollRestoration",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"children": [
						{
							"id": 2318,
							"name": "displayName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1221,
									"character": 18,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1221"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2318
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1153,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1153"
						},
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1221,
							"character": 0,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1221"
						}
					],
					"signatures": [
						{
							"id": 2319,
							"name": "ScrollRestoration",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emulates the browser's scroll restoration on location changes. Apps should only render one of these, right before the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Scripts",
										"target": 2314
									},
									{
										"kind": "text",
										"text": " component.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ScrollRestoration } from \"react-router\";\n\nexport default function Root() {\n  return (\n    <html>\n      <body>\n        <ScrollRestoration />\n        <Scripts />\n      </body>\n    </html>\n  );\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThis component renders an inline "
									},
									{
										"kind": "code",
										"text": "`<script>`"
									},
									{
										"kind": "text",
										"text": " to prevent scroll flashing. The "
									},
									{
										"kind": "code",
										"text": "`nonce`"
									},
									{
										"kind": "text",
										"text": " prop will be passed down to the script tag to allow CSP nonce usage.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ScrollRestoration nonce={cspNonce} />\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1153,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1153"
								}
							],
							"parameters": [
								{
									"id": 2320,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2204,
										"name": "ScrollRestorationProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.JSX.Element"
										},
										"name": "Element",
										"package": "@types/react",
										"qualifiedName": "React.JSX.Element"
									}
								]
							}
						}
					]
				},
				{
					"id": 2321,
					"name": "ServerRouter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/server.tsx",
							"line": 25,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/server.tsx#L25"
						}
					],
					"signatures": [
						{
							"id": 2322,
							"name": "ServerRouter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The entry point for a Remix app when it is rendered on the server (in\n"
									},
									{
										"kind": "code",
										"text": "`app/entry.server.js`"
									},
									{
										"kind": "text",
										"text": "). This component is used to generate the HTML in the\nresponse from the server."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/server.tsx",
									"line": 25,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/server.tsx#L25"
								}
							],
							"parameters": [
								{
									"id": 2323,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1759,
										"name": "ServerRouterProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.ReactElement"
								},
								"name": "ReactElement",
								"package": "@types/react",
								"qualifiedName": "React.ReactElement"
							}
						}
					]
				},
				{
					"id": 2324,
					"name": "StaticRouter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/server.tsx",
							"line": 51,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/server.tsx#L51"
						}
					],
					"signatures": [
						{
							"id": 2325,
							"name": "StaticRouter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A "
									},
									{
										"kind": "code",
										"text": "`<Router>`"
									},
									{
										"kind": "text",
										"text": " that may not navigate to any other location. This is useful\non the server where there is no stateful UI."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/server.tsx",
									"line": 51,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/server.tsx#L51"
								}
							],
							"parameters": [
								{
									"id": 2326,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1881,
										"name": "StaticRouterProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 2327,
					"name": "StaticRouterProvider",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/server.tsx",
							"line": 95,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/server.tsx#L95"
						}
					],
					"signatures": [
						{
							"id": 2328,
							"name": "StaticRouterProvider",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Data Router that may not navigate to any other location. This is useful\non the server where there is no stateful UI."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/server.tsx",
									"line": 95,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/server.tsx#L95"
								}
							],
							"parameters": [
								{
									"id": 2329,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1885,
										"name": "StaticRouterProviderProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 2330,
					"name": "UNSAFE_createBrowserHistory",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/history.ts",
							"line": 359,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L359"
						}
					],
					"signatures": [
						{
							"id": 2331,
							"name": "UNSAFE_createBrowserHistory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Browser history stores the location in regular URLs. This is the standard for\nmost web apps, but it requires some configuration on the server to ensure you\nserve the same app at multiple URLs."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 359,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L359"
								}
							],
							"parameters": [
								{
									"id": 2332,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/history.ts",
											"qualifiedName": "UrlHistoryOptions"
										},
										"name": "UrlHistoryOptions",
										"package": "react-router"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router/lib/router/history.ts",
									"qualifiedName": "BrowserHistory"
								},
								"name": "BrowserHistory",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2333,
					"name": "UNSAFE_createClientRoutes",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
							"line": 226,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routes.tsx#L226"
						}
					],
					"signatures": [
						{
							"id": 2334,
							"name": "UNSAFE_createClientRoutes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
									"line": 226,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routes.tsx#L226"
								}
							],
							"parameters": [
								{
									"id": 2335,
									"name": "manifest",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
											"qualifiedName": "RouteManifest"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
													"qualifiedName": "EntryRoute"
												},
												"name": "EntryRoute",
												"package": "react-router"
											}
										],
										"name": "RouteManifest",
										"package": "react-router"
									}
								},
								{
									"id": 2336,
									"name": "routeModulesCache",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1926,
										"name": "RouteModules",
										"package": "react-router"
									}
								},
								{
									"id": 2337,
									"name": "initialState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Pick"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1713,
																"name": "RouterState",
																"package": "react-router"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "loaderData"
																	},
																	{
																		"type": "literal",
																		"value": "actionData"
																	},
																	{
																		"type": "literal",
																		"value": "errors"
																	}
																]
															}
														],
														"name": "Pick",
														"package": "typescript"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 2338,
									"name": "isSpaMode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2339,
									"name": "parentId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								},
								{
									"id": 2340,
									"name": "routesByParentId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Omit"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
																"qualifiedName": "EntryRoute"
															},
															"name": "EntryRoute",
															"package": "react-router"
														},
														{
															"type": "literal",
															"value": "children"
														}
													],
													"name": "Omit",
													"package": "typescript"
												}
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									"defaultValue": "..."
								},
								{
									"id": 2341,
									"name": "needsRevalidation",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Set"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Set",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2041,
									"name": "DataRouteObject",
									"package": "react-router"
								}
							}
						}
					]
				},
				{
					"id": 2342,
					"name": "UNSAFE_createClientRoutesWithHMRRevalidationOptOut",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
							"line": 170,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routes.tsx#L170"
						}
					],
					"signatures": [
						{
							"id": 2343,
							"name": "UNSAFE_createClientRoutesWithHMRRevalidationOptOut",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
									"line": 170,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routes.tsx#L170"
								}
							],
							"parameters": [
								{
									"id": 2344,
									"name": "needsRevalidation",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Set"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Set",
										"package": "typescript"
									}
								},
								{
									"id": 2345,
									"name": "manifest",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
											"qualifiedName": "RouteManifest"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
													"qualifiedName": "EntryRoute"
												},
												"name": "EntryRoute",
												"package": "react-router"
											}
										],
										"name": "RouteManifest",
										"package": "react-router"
									}
								},
								{
									"id": 2346,
									"name": "routeModulesCache",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1926,
										"name": "RouteModules",
										"package": "react-router"
									}
								},
								{
									"id": 2347,
									"name": "initialState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Pick"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1713,
														"name": "RouterState",
														"package": "react-router"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "loaderData"
															},
															{
																"type": "literal",
																"value": "actionData"
															},
															{
																"type": "literal",
																"value": "errors"
															}
														]
													}
												],
												"name": "Pick",
												"package": "typescript"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								},
								{
									"id": 2348,
									"name": "future",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
											"qualifiedName": "FutureConfig"
										},
										"name": "FutureConfig",
										"package": "react-router"
									}
								},
								{
									"id": 2349,
									"name": "isSpaMode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2041,
									"name": "DataRouteObject",
									"package": "react-router"
								}
							}
						}
					]
				},
				{
					"id": 2350,
					"name": "UNSAFE_createRouter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/router.ts",
							"line": 781,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L781"
						}
					],
					"signatures": [
						{
							"id": 2351,
							"name": "UNSAFE_createRouter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a router and listen to history POP navigations"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/router.ts",
									"line": 781,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/router.ts#L781"
								}
							],
							"parameters": [
								{
									"id": 2352,
									"name": "init",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1688,
										"name": "RouterInit",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1612,
								"name": "Router",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2353,
					"name": "UNSAFE_decodeViaTurboStream",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
							"line": 323,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/single-fetch.tsx#L323"
						}
					],
					"signatures": [
						{
							"id": 2354,
							"name": "UNSAFE_decodeViaTurboStream",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
									"line": 323,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/single-fetch.tsx#L323"
								}
							],
							"parameters": [
								{
									"id": 2355,
									"name": "body",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "ReadableStream"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										],
										"name": "ReadableStream",
										"package": "typescript"
									}
								},
								{
									"id": 2356,
									"name": "global",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "query",
												"queryType": {
													"type": "reference",
													"target": {
														"sourceFileName": "",
														"qualifiedName": "globalThis"
													},
													"name": "globalThis",
													"preferValues": true
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Window"
												},
												"name": "Window",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 2357,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2358,
													"name": "done",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/turbo-stream@2.2.0/node_modules/turbo-stream/dist/turbo-stream.d.ts",
															"line": 6,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "undefined"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												},
												{
													"id": 2359,
													"name": "value",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/turbo-stream@2.2.0/node_modules/turbo-stream/dist/turbo-stream.d.ts",
															"line": 7,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2358,
														2359
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/.pnpm/turbo-stream@2.2.0/node_modules/turbo-stream/dist/turbo-stream.d.ts",
													"line": 5,
													"character": 12
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2360,
					"name": "UNSAFE_deserializeErrors",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/errors.ts",
							"line": 4,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/errors.ts#L4"
						}
					],
					"signatures": [
						{
							"id": 2361,
							"name": "UNSAFE_deserializeErrors",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/errors.ts",
									"line": 4,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/errors.ts#L4"
								}
							],
							"parameters": [
								{
									"id": 2362,
									"name": "errors",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/router/utils.ts",
													"qualifiedName": "RouteData"
												},
												"name": "RouteData",
												"package": "react-router"
											}
										]
									}
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "errors"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "state"
									},
									"objectType": {
										"type": "reference",
										"target": 1612,
										"name": "RemixRouter",
										"package": "react-router",
										"qualifiedName": "Router"
									}
								}
							}
						}
					]
				},
				{
					"id": 2363,
					"name": "UNSAFE_getSingleFetchDataStrategy",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
							"line": 126,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/single-fetch.tsx#L126"
						}
					],
					"signatures": [
						{
							"id": 2364,
							"name": "UNSAFE_getSingleFetchDataStrategy",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
									"line": 126,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/single-fetch.tsx#L126"
								}
							],
							"parameters": [
								{
									"id": 2365,
									"name": "manifest",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1914,
										"name": "AssetsManifest",
										"package": "react-router"
									}
								},
								{
									"id": 2366,
									"name": "routeModules",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1926,
										"name": "RouteModules",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1929,
								"name": "DataStrategyFunction",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2367,
					"name": "UNSAFE_initFogOfWar",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
							"line": 73,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/fog-of-war.ts#L73"
						}
					],
					"signatures": [
						{
							"id": 2368,
							"name": "UNSAFE_initFogOfWar",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
									"line": 73,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/fog-of-war.ts#L73"
								}
							],
							"parameters": [
								{
									"id": 2369,
									"name": "manifest",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1914,
										"name": "AssetsManifest",
										"package": "react-router"
									}
								},
								{
									"id": 2370,
									"name": "routeModules",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1926,
										"name": "RouteModules",
										"package": "react-router"
									}
								},
								{
									"id": 2371,
									"name": "isSpaMode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2372,
									"name": "basename",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2373,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2374,
											"name": "enabled",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
													"line": 79,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/fog-of-war.ts#L79"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 2375,
											"name": "patchRoutesOnMiss",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
													"line": 80,
													"character": 2,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/fog-of-war.ts#L80"
												}
											],
											"type": {
												"type": "reference",
												"target": 1958,
												"name": "PatchRoutesOnMissFunction",
												"package": "react-router"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2374,
												2375
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
											"line": 78,
											"character": 3,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/fog-of-war.ts#L78"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 2376,
					"name": "UNSAFE_invariant",
					"variant": "declaration",
					"kind": 64,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/history.ts",
							"line": 486,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L486"
						},
						{
							"fileName": "packages/react-router/lib/router/history.ts",
							"line": 487,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L487"
						},
						{
							"fileName": "packages/react-router/lib/router/history.ts",
							"line": 491,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L491"
						}
					],
					"signatures": [
						{
							"id": 2377,
							"name": "UNSAFE_invariant",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 486,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L486"
								}
							],
							"parameters": [
								{
									"id": 2378,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2379,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": true
							}
						},
						{
							"id": 2380,
							"name": "UNSAFE_invariant",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 487,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L487"
								}
							],
							"typeParameter": [
								{
									"id": 2381,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 2382,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 2381,
												"name": "T",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										]
									}
								},
								{
									"id": 2383,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": true,
								"targetType": {
									"type": "reference",
									"target": 2381,
									"name": "T",
									"package": "react-router",
									"refersToTypeParameter": true
								}
							}
						}
					]
				},
				{
					"id": 2384,
					"name": "UNSAFE_mapRouteProperties",
					"variant": "declaration",
					"kind": 64,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 72,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L72"
						}
					],
					"signatures": [
						{
							"id": 2385,
							"name": "UNSAFE_mapRouteProperties",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 72,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L72"
								}
							],
							"parameters": [
								{
									"id": 2386,
									"name": "route",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2199,
										"name": "RouteObject",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2199,
												"name": "RouteObject",
												"package": "react-router"
											}
										],
										"name": "Partial",
										"package": "typescript"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 2387,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2388,
													"name": "hasErrorBoundary",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/components.tsx",
															"line": 73,
															"character": 40,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L73"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2388
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/components.tsx",
													"line": 73,
													"character": 38,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L73"
												}
											]
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 2389,
					"name": "UNSAFE_shouldHydrateRouteLoader",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
							"line": 538,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routes.tsx#L538"
						}
					],
					"signatures": [
						{
							"id": 2390,
							"name": "UNSAFE_shouldHydrateRouteLoader",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
									"line": 538,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routes.tsx#L538"
								}
							],
							"parameters": [
								{
									"id": 2391,
									"name": "route",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
											"qualifiedName": "EntryRoute"
										},
										"name": "EntryRoute",
										"package": "react-router"
									}
								},
								{
									"id": 2392,
									"name": "routeModule",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
											"qualifiedName": "RouteModule"
										},
										"name": "RouteModule",
										"package": "react-router"
									}
								},
								{
									"id": 2393,
									"name": "isSpaMode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 2394,
					"name": "UNSAFE_useFogOFWarDiscovery",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
							"line": 114,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/fog-of-war.ts#L114"
						}
					],
					"signatures": [
						{
							"id": 2395,
							"name": "UNSAFE_useFogOFWarDiscovery",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
									"line": 114,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/fog-of-war.ts#L114"
								}
							],
							"parameters": [
								{
									"id": 2396,
									"name": "router",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1612,
										"name": "Router",
										"package": "react-router"
									}
								},
								{
									"id": 2397,
									"name": "manifest",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1914,
										"name": "AssetsManifest",
										"package": "react-router"
									}
								},
								{
									"id": 2398,
									"name": "routeModules",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1926,
										"name": "RouteModules",
										"package": "react-router"
									}
								},
								{
									"id": 2399,
									"name": "isSpaMode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2400,
					"name": "UNSAFE_useScrollRestoration",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1943,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1943"
						}
					],
					"signatures": [
						{
							"id": 2401,
							"name": "UNSAFE_useScrollRestoration",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When rendered inside a RouterProvider, will restore scroll positions on navigations"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1943,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1943"
								}
							],
							"parameters": [
								{
									"id": 2402,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2403,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2404,
													"name": "getKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 1947,
															"character": 2,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1947"
														}
													],
													"type": {
														"type": "reference",
														"target": 787,
														"name": "GetScrollRestorationKeyFunction",
														"package": "react-router"
													}
												},
												{
													"id": 2405,
													"name": "storageKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 1948,
															"character": 2,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1948"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2404,
														2405
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 1946,
													"character": 3,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1946"
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2406,
					"name": "createBrowserRouter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 133,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L133"
						}
					],
					"signatures": [
						{
							"id": 2407,
							"name": "createBrowserRouter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 133,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L133"
								}
							],
							"parameters": [
								{
									"id": 2408,
									"name": "routes",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 2199,
											"name": "RouteObject",
											"package": "react-router"
										}
									}
								},
								{
									"id": 2409,
									"name": "opts",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
											"qualifiedName": "DOMRouterOpts"
										},
										"name": "DOMRouterOpts",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1612,
								"name": "RemixRouter",
								"package": "react-router",
								"qualifiedName": "Router"
							}
						}
					]
				},
				{
					"id": 2410,
					"name": "createCookieFactory",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
							"line": 80,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/cookies.ts#L80"
						}
					],
					"signatures": [
						{
							"id": 2411,
							"name": "createCookieFactory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a logical container for managing a browser cookie from the server."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://remix.run/utils/cookies#createcookie"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
									"line": 81,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/cookies.ts#L81"
								}
							],
							"parameters": [
								{
									"id": 2412,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2413,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2414,
													"name": "sign",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
															"line": 85,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/cookies.ts#L85"
														}
													],
													"type": {
														"type": "reference",
														"target": 2216,
														"name": "SignFunction",
														"package": "react-router"
													}
												},
												{
													"id": 2415,
													"name": "unsign",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
															"line": 86,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/cookies.ts#L86"
														}
													],
													"type": {
														"type": "reference",
														"target": 2229,
														"name": "UnsignFunction",
														"package": "react-router"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2414,
														2415
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
													"line": 84,
													"character": 5,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/cookies.ts#L84"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 2001,
								"name": "CreateCookieFunction",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2416,
					"name": "createCookieSessionStorageFactory",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
							"line": 36,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions/cookieStorage.ts#L36"
						}
					],
					"signatures": [
						{
							"id": 2417,
							"name": "createCookieSessionStorageFactory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates and returns a SessionStorage object that stores all session data\ndirectly in the session cookie itself.\n\nThis has the advantage that no database or other backend services are\nneeded, and can help to simplify some load-balanced scenarios. However, it\nalso has the limitation that serialized session data may not exceed the\nbrowser's maximum cookie size. Trade-offs!"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://remix.run/utils/sessions#createcookiesessionstorage"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions/cookieStorage.ts#L37"
								}
							],
							"parameters": [
								{
									"id": 2418,
									"name": "createCookie",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2001,
										"name": "CreateCookieFunction",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 2006,
								"name": "CreateCookieSessionStorageFunction",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2419,
					"name": "createHashRouter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 153,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L153"
						}
					],
					"signatures": [
						{
							"id": 2420,
							"name": "createHashRouter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 153,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L153"
								}
							],
							"parameters": [
								{
									"id": 2421,
									"name": "routes",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 2199,
											"name": "RouteObject",
											"package": "react-router"
										}
									}
								},
								{
									"id": 2422,
									"name": "opts",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
											"qualifiedName": "DOMRouterOpts"
										},
										"name": "DOMRouterOpts",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1612,
								"name": "RemixRouter",
								"package": "react-router",
								"qualifiedName": "Router"
							}
						}
					]
				},
				{
					"id": 2423,
					"name": "createMemoryRouter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 139,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L139"
						}
					],
					"signatures": [
						{
							"id": 2424,
							"name": "createMemoryRouter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 139,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L139"
								}
							],
							"parameters": [
								{
									"id": 2425,
									"name": "routes",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 2199,
											"name": "RouteObject",
											"package": "react-router"
										}
									}
								},
								{
									"id": 2426,
									"name": "opts",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2427,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2428,
													"name": "basename",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/components.tsx",
															"line": 142,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L142"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2429,
													"name": "future",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/components.tsx",
															"line": 143,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L143"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "packages/react-router/lib/router/router.ts",
																	"qualifiedName": "FutureConfig"
																},
																"name": "FutureConfig",
																"package": "react-router"
															}
														],
														"name": "Partial",
														"package": "typescript"
													}
												},
												{
													"id": 2430,
													"name": "hydrationData",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/components.tsx",
															"line": 144,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L144"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Pick"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 1713,
																		"name": "RouterState",
																		"package": "react-router"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": "loaderData"
																			},
																			{
																				"type": "literal",
																				"value": "actionData"
																			},
																			{
																				"type": "literal",
																				"value": "errors"
																			}
																		]
																	}
																],
																"name": "Pick",
																"package": "typescript"
															}
														],
														"name": "Partial",
														"package": "typescript"
													}
												},
												{
													"id": 2431,
													"name": "initialEntries",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/components.tsx",
															"line": 145,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L145"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 2080,
															"name": "InitialEntry",
															"package": "react-router"
														}
													}
												},
												{
													"id": 2432,
													"name": "initialIndex",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/components.tsx",
															"line": 146,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L146"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2433,
													"name": "unstable_dataStrategy",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/components.tsx",
															"line": 147,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L147"
														}
													],
													"type": {
														"type": "reference",
														"target": 1929,
														"name": "DataStrategyFunction",
														"package": "react-router"
													}
												},
												{
													"id": 2434,
													"name": "unstable_patchRoutesOnMiss",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/components.tsx",
															"line": 148,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L148"
														}
													],
													"type": {
														"type": "reference",
														"target": 1958,
														"name": "PatchRoutesOnMissFunction",
														"package": "react-router"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2428,
														2429,
														2430,
														2431,
														2432,
														2433,
														2434
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/components.tsx",
													"line": 141,
													"character": 9,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L141"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1612,
								"name": "RemixRouter",
								"package": "react-router",
								"qualifiedName": "Router"
							}
						}
					]
				},
				{
					"id": 2435,
					"name": "createMemorySessionStorageFactory",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
							"line": 33,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions/memoryStorage.ts#L33"
						}
					],
					"signatures": [
						{
							"id": 2436,
							"name": "createMemorySessionStorageFactory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates and returns a simple in-memory SessionStorage object, mostly useful\nfor testing and as a reference implementation.\n\nNote: This storage does not scale beyond a single process, so it is not\nsuitable for most production scenarios."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://remix.run/utils/sessions#creatememorysessionstorage"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions/memoryStorage.ts#L34"
								}
							],
							"parameters": [
								{
									"id": 2437,
									"name": "createSessionStorage",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2032,
										"name": "CreateSessionStorageFunction",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 2012,
								"name": "CreateMemorySessionStorageFunction",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2438,
					"name": "createPath",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/history.ts",
							"line": 556,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L556"
						}
					],
					"signatures": [
						{
							"id": 2439,
							"name": "createPath",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a string URL path from the given pathname, search, and hash components."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 556,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L556"
								}
							],
							"parameters": [
								{
									"id": 2440,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1568,
												"name": "Path",
												"package": "react-router"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2441,
					"name": "createRequestHandler",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/server.ts",
							"line": 84,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/server.ts#L84"
						}
					],
					"signatures": [
						{
							"id": 2442,
							"name": "createRequestHandler",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/server.ts",
									"line": 84,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/server.ts#L84"
								}
							],
							"parameters": [
								{
									"id": 2443,
									"name": "build",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 1743,
												"name": "ServerBuild",
												"package": "react-router"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2444,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/server-runtime/server.ts",
															"line": 53,
															"character": 24,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/server.ts#L53"
														}
													],
													"signatures": [
														{
															"id": 2445,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-router/lib/server-runtime/server.ts",
																	"line": 53,
																	"character": 24,
																	"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/server.ts#L53"
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": 1743,
																		"name": "ServerBuild",
																		"package": "react-router"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 1743,
																				"name": "ServerBuild",
																				"package": "react-router"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 2446,
									"name": "mode",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 2193,
								"name": "RequestHandler",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2447,
					"name": "createRoutesFromChildren",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 1106,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L1106"
						}
					],
					"signatures": [
						{
							"id": 2448,
							"name": "createRoutesFromChildren",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a route config from a React \"children\" object, which is usually\neither a "
									},
									{
										"kind": "code",
										"text": "`<Route>`"
									},
									{
										"kind": "text",
										"text": " element or an array of them. Used internally by\n"
									},
									{
										"kind": "code",
										"text": "`<Routes>`"
									},
									{
										"kind": "text",
										"text": " to create a route config from its children."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 1106,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L1106"
								}
							],
							"parameters": [
								{
									"id": 2449,
									"name": "children",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "ReactNode",
										"package": "@types/react",
										"qualifiedName": "React.ReactNode"
									}
								},
								{
									"id": 2450,
									"name": "parentPath",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									"defaultValue": "[]"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2199,
									"name": "RouteObject",
									"package": "react-router"
								}
							}
						}
					]
				},
				{
					"id": 2451,
					"name": "createRoutesStub",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
							"line": 92,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L92"
						}
					],
					"signatures": [
						{
							"id": 2452,
							"name": "createRoutesStub",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
									"line": 92,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L92"
								}
							],
							"parameters": [
								{
									"id": 2453,
									"name": "routes",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
												"qualifiedName": "StubRouteObject"
											},
											"name": "StubRouteObject",
											"package": "react-router"
										}
									}
								},
								{
									"id": 2454,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
											"qualifiedName": "AppLoadContext"
										},
										"name": "AppLoadContext",
										"package": "react-router"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2455,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
											"line": 96,
											"character": 18,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L96"
										}
									],
									"signatures": [
										{
											"id": 2456,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
													"line": 96,
													"character": 18,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L96"
												}
											],
											"parameters": [
												{
													"id": 2457,
													"name": "__namedParameters",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1738,
														"name": "RoutesTestStubProps",
														"package": "react-router"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
													"qualifiedName": "React.JSX.Element"
												},
												"name": "Element",
												"package": "@types/react",
												"qualifiedName": "React.JSX.Element"
											}
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 2458,
					"name": "createSearchParams",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/dom.ts",
							"line": 79,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L79"
						}
					],
					"signatures": [
						{
							"id": 2459,
							"name": "createSearchParams",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a URLSearchParams object using the given initializer.\n\nThis is identical to "
									},
									{
										"kind": "code",
										"text": "`new URLSearchParams(init)`"
									},
									{
										"kind": "text",
										"text": " except it also\nsupports arrays as values in the object form of the initializer\ninstead of just strings. This is convenient when you need multiple\nvalues for a given key, but don't want to use an array initializer.\n\nFor example, instead of:\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nlet searchParams = new URLSearchParams([\n  ['sort', 'name'],\n  ['sort', 'price']\n]);\n```"
									},
									{
										"kind": "text",
										"text": "\nyou can do:\n\n"
									},
									{
										"kind": "code",
										"text": "```\nlet searchParams = createSearchParams({\n  sort: ['name', 'price']\n});\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/dom.ts",
									"line": 79,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/dom.ts#L79"
								}
							],
							"parameters": [
								{
									"id": 2460,
									"name": "init",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2228,
										"name": "URLSearchParamsInit",
										"package": "react-router"
									},
									"defaultValue": "\"\""
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "URLSearchParams"
								},
								"name": "URLSearchParams",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2461,
					"name": "createSession",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
							"line": 95,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L95"
						}
					],
					"signatures": [
						{
							"id": 2462,
							"name": "createSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new Session object.\n\nNote: This function is typically not invoked directly by application code.\nInstead, use a "
									},
									{
										"kind": "code",
										"text": "`SessionStorage`"
									},
									{
										"kind": "text",
										"text": " object's "
									},
									{
										"kind": "code",
										"text": "`getSession`"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://remix.run/utils/sessions#createsession"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 95,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L95"
								}
							],
							"typeParameter": [
								{
									"id": 2463,
									"name": "Data",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": 1789,
										"name": "SessionData",
										"package": "react-router"
									}
								},
								{
									"id": 2464,
									"name": "FlashData",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": 2463,
										"name": "Data",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								}
							],
							"parameters": [
								{
									"id": 2465,
									"name": "initialData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 2463,
										"name": "Data",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 2466,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1764,
								"typeArguments": [
									{
										"type": "reference",
										"target": 2463,
										"name": "Data",
										"package": "react-router",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 2464,
										"name": "FlashData",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								],
								"name": "Session",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2467,
					"name": "createSessionStorageFactory",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
							"line": 263,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L263"
						}
					],
					"signatures": [
						{
							"id": 2468,
							"name": "createSessionStorageFactory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a SessionStorage object using a SessionIdStorageStrategy.\n\nNote: This is a low-level API that should only be used if none of the\nexisting session storage options meet your requirements."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://remix.run/utils/sessions#createsessionstorage"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 264,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L264"
								}
							],
							"parameters": [
								{
									"id": 2469,
									"name": "createCookie",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2001,
										"name": "CreateCookieFunction",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 2032,
								"name": "CreateSessionStorageFunction",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2470,
					"name": "createStaticHandler",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/server.tsx",
							"line": 260,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/server.tsx#L260"
						}
					],
					"signatures": [
						{
							"id": 2471,
							"name": "createStaticHandler",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/server.tsx",
									"line": 260,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/server.tsx#L260"
								}
							],
							"parameters": [
								{
									"id": 2472,
									"name": "routes",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 2199,
											"name": "RouteObject",
											"package": "react-router"
										}
									}
								},
								{
									"id": 2473,
									"name": "opts",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/dom/server.tsx",
											"qualifiedName": "CreateStaticHandlerOptions"
										},
										"name": "CreateStaticHandlerOptions",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1852,
								"name": "StaticHandler",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2474,
					"name": "createStaticRouter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/server.tsx",
							"line": 273,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/server.tsx#L273"
						}
					],
					"signatures": [
						{
							"id": 2475,
							"name": "createStaticRouter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/server.tsx",
									"line": 273,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/server.tsx#L273"
								}
							],
							"parameters": [
								{
									"id": 2476,
									"name": "routes",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 2199,
											"name": "RouteObject",
											"package": "react-router"
										}
									}
								},
								{
									"id": 2477,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1870,
										"name": "StaticHandlerContext",
										"package": "react-router"
									}
								},
								{
									"id": 2478,
									"name": "opts",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2479,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2480,
													"name": "future",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/server.tsx",
															"line": 277,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/server.tsx#L277"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "packages/react-router/lib/router/router.ts",
																	"qualifiedName": "FutureConfig"
																},
																"name": "FutureConfig",
																"package": "react-router"
															}
														],
														"name": "Partial",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2480
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/server.tsx",
													"line": 276,
													"character": 8,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/server.tsx#L276"
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": 1612,
								"name": "RemixRouter",
								"package": "react-router",
								"qualifiedName": "Router"
							}
						}
					]
				},
				{
					"id": 2481,
					"name": "defineRoute",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/define-route.ts",
							"line": 181,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/define-route.ts#L181"
						}
					],
					"signatures": [
						{
							"id": 2482,
							"name": "defineRoute",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/define-route.ts",
									"line": 181,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/define-route.ts#L181"
								}
							],
							"typeParameter": [
								{
									"id": 2483,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 2484,
									"name": "Param",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isConst": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2485,
									"name": "ClientLoaderHydrate",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2486,
									"name": "HydrateFallback",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/router/define-route.ts",
													"qualifiedName": "HydrateFallbackComponent"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 2484,
														"name": "Param",
														"package": "react-router",
														"refersToTypeParameter": true
													}
												],
												"name": "HydrateFallbackComponent",
												"package": "react-router"
											}
										]
									}
								},
								{
									"id": 2487,
									"name": "ServerLoaderData",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/router/define-route.ts",
													"qualifiedName": "Data"
												},
												"name": "Data",
												"package": "react-router"
											}
										]
									},
									"default": {
										"type": "intrinsic",
										"name": "undefined"
									}
								},
								{
									"id": 2488,
									"name": "ClientLoaderData",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "undefined"
									}
								},
								{
									"id": 2489,
									"name": "ServerActionData",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/router/define-route.ts",
													"qualifiedName": "Data"
												},
												"name": "Data",
												"package": "react-router"
											}
										]
									},
									"default": {
										"type": "intrinsic",
										"name": "undefined"
									}
								},
								{
									"id": 2490,
									"name": "ClientActionData",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"parameters": [
								{
									"id": 2491,
									"name": "route",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 2483,
												"name": "T",
												"package": "react-router",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "packages/react-router/lib/router/define-route.ts",
													"qualifiedName": "Route"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 2484,
														"name": "Param",
														"package": "react-router",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 2485,
														"name": "ClientLoaderHydrate",
														"package": "react-router",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 2486,
														"name": "HydrateFallback",
														"package": "react-router",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 2487,
														"name": "ServerLoaderData",
														"package": "react-router",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 2488,
														"name": "ClientLoaderData",
														"package": "react-router",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 2489,
														"name": "ServerActionData",
														"package": "react-router",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 2490,
														"name": "ClientActionData",
														"package": "react-router",
														"refersToTypeParameter": true
													}
												],
												"name": "Route",
												"package": "react-router"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 2483,
								"name": "T",
								"package": "react-router",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 2492,
					"name": "generatePath",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 830,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L830"
						}
					],
					"signatures": [
						{
							"id": 2493,
							"name": "generatePath",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a path with params interpolated."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 830,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L830"
								}
							],
							"typeParameter": [
								{
									"id": 2494,
									"name": "Path",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 2495,
									"name": "originalPath",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2494,
										"name": "Path",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 2496,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "mapped",
										"parameter": "key",
										"parameterType": {
											"type": "intrinsic",
											"name": "string"
										},
										"templateType": {
											"type": "union",
											"types": [
												{
													"type": "literal",
													"value": null
												},
												{
													"type": "intrinsic",
													"name": "string"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2497,
					"name": "isCookie",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
							"line": 139,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/cookies.ts#L139"
						}
					],
					"signatures": [
						{
							"id": 2498,
							"name": "isCookie",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns true if an object is a Remix cookie container."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://remix.run/utils/cookies#iscookie"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/cookies.ts",
									"line": 139,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/cookies.ts#L139"
								}
							],
							"parameters": [
								{
									"id": 2499,
									"name": "object",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "object",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 150,
									"name": "Cookie",
									"package": "react-router"
								}
							}
						}
					]
				},
				{
					"id": 2500,
					"name": "isRouteErrorResponse",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 1423,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1423"
						}
					],
					"signatures": [
						{
							"id": 2501,
							"name": "isRouteErrorResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if the given error is an ErrorResponse generated from a 4xx/5xx\nResponse thrown from an action/loader"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1423,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1423"
								}
							],
							"parameters": [
								{
									"id": 2502,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "error",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 2045,
									"name": "ErrorResponse",
									"package": "react-router"
								}
							}
						}
					]
				},
				{
					"id": 2503,
					"name": "isSession",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
							"line": 151,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L151"
						}
					],
					"signatures": [
						{
							"id": 2504,
							"name": "isSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns true if an object is a Remix session."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://remix.run/utils/sessions#issession"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/sessions.ts",
									"line": 151,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/sessions.ts#L151"
								}
							],
							"parameters": [
								{
									"id": 2505,
									"name": "object",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "object",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 1764,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1789,
											"name": "SessionData",
											"package": "react-router"
										},
										{
											"type": "reference",
											"target": 1789,
											"name": "SessionData",
											"package": "react-router"
										}
									],
									"name": "Session",
									"package": "react-router"
								}
							}
						}
					]
				},
				{
					"id": 2506,
					"name": "json",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 1317,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1317"
						}
					],
					"signatures": [
						{
							"id": 2507,
							"name": "json",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This is a shortcut for creating "
									},
									{
										"kind": "code",
										"text": "`application/json`"
									},
									{
										"kind": "text",
										"text": " responses. Converts "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": "\nto JSON and sets the "
									},
									{
										"kind": "code",
										"text": "`Content-Type`"
									},
									{
										"kind": "text",
										"text": " header."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1317,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1317"
								}
							],
							"typeParameter": [
								{
									"id": 2508,
									"name": "Data",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 2509,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2092,
										"name": "Data",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 2510,
									"name": "init",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "ResponseInit"
												},
												"name": "ResponseInit",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Response"
								},
								"name": "Response",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2511,
					"name": "matchPath",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 936,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L936"
						}
					],
					"signatures": [
						{
							"id": 2512,
							"name": "matchPath",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Performs pattern matching on a URL pathname and returns information about\nthe match."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 936,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L936"
								}
							],
							"typeParameter": [
								{
									"id": 2513,
									"name": "ParamKey",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2514,
									"name": "Path",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 2515,
									"name": "pattern",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 2514,
												"name": "Path",
												"package": "react-router",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 1578,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2514,
														"name": "Path",
														"package": "react-router",
														"refersToTypeParameter": true
													}
												],
												"name": "PathPattern",
												"package": "react-router"
											}
										]
									}
								},
								{
									"id": 2516,
									"name": "pathname",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 1572,
										"typeArguments": [
											{
												"type": "reference",
												"target": 2513,
												"name": "ParamKey",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										],
										"name": "PathMatch",
										"package": "react-router"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 2517,
					"name": "matchRoutes",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 477,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L477"
						}
					],
					"signatures": [
						{
							"id": 2518,
							"name": "matchRoutes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Matches the given routes to a location and returns the match data."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 477,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L477"
								}
							],
							"typeParameter": [
								{
									"id": 2519,
									"name": "RouteObjectType",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/utils.ts",
											"qualifiedName": "AgnosticRouteObject"
										},
										"name": "AgnosticRouteObject",
										"package": "react-router"
									},
									"default": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/router/utils.ts",
											"qualifiedName": "AgnosticRouteObject"
										},
										"name": "AgnosticRouteObject",
										"package": "react-router"
									}
								}
							],
							"parameters": [
								{
									"id": 2520,
									"name": "routes",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 2519,
											"name": "RouteObjectType",
											"package": "react-router",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 2521,
									"name": "locationArg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1175,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Location",
														"package": "react-router"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 2522,
									"name": "basename",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"/\""
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "packages/react-router/lib/router/utils.ts",
												"qualifiedName": "AgnosticRouteMatch"
											},
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"target": 2519,
													"name": "RouteObjectType",
													"package": "react-router",
													"refersToTypeParameter": true
												}
											],
											"name": "AgnosticRouteMatch",
											"package": "react-router"
										}
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 2523,
					"name": "parsePath",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/history.ts",
							"line": 573,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L573"
						}
					],
					"signatures": [
						{
							"id": 2524,
							"name": "parsePath",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Parses a string URL path into its separate pathname, search, and hash components."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/history.ts",
									"line": 573,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/history.ts#L573"
								}
							],
							"parameters": [
								{
									"id": 2525,
									"name": "path",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1568,
										"name": "Path",
										"package": "react-router"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2526,
					"name": "redirect",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 1348,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1348"
						}
					],
					"signatures": [
						{
							"id": 2527,
							"name": "redirect",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A redirect response. Sets the status code and the "
									},
									{
										"kind": "code",
										"text": "`Location`"
									},
									{
										"kind": "text",
										"text": " header.\nDefaults to \"302 Found\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1348,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1348"
								}
							],
							"parameters": [
								{
									"id": 2528,
									"name": "url",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2529,
									"name": "init",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "ResponseInit"
												},
												"name": "ResponseInit",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Response"
								},
								"name": "Response",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2530,
					"name": "redirectDocument",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 1372,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1372"
						}
					],
					"signatures": [
						{
							"id": 2531,
							"name": "redirectDocument",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A redirect response that will force a document reload to the new location.\nSets the status code and the "
									},
									{
										"kind": "code",
										"text": "`Location`"
									},
									{
										"kind": "text",
										"text": " header.\nDefaults to \"302 Found\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1372,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1372"
								}
							],
							"parameters": [
								{
									"id": 2532,
									"name": "url",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2533,
									"name": "init",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "ResponseInit"
												},
												"name": "ResponseInit",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Response"
								},
								"name": "Response",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2534,
					"name": "renderMatches",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/components.tsx",
							"line": 1182,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L1182"
						}
					],
					"signatures": [
						{
							"id": 2535,
							"name": "renderMatches",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders the result of "
									},
									{
										"kind": "code",
										"text": "`matchRoutes()`"
									},
									{
										"kind": "text",
										"text": " into a React element."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/components.tsx",
									"line": 1182,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/components.tsx#L1182"
								}
							],
							"parameters": [
								{
									"id": 2536,
									"name": "matches",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1681,
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "reference",
															"target": 2199,
															"name": "RouteObject",
															"package": "react-router"
														}
													],
													"name": "RouteMatch",
													"package": "react-router"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactElement"
										},
										"name": "React.ReactElement",
										"package": "@types/react"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 2537,
					"name": "resolvePath",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/router/utils.ts",
							"line": 1096,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1096"
						}
					],
					"signatures": [
						{
							"id": 2538,
							"name": "resolvePath",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a resolved path object relative to the given pathname."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/router/utils.ts",
									"line": 1096,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/router/utils.ts#L1096"
								}
							],
							"parameters": [
								{
									"id": 2539,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2222,
										"name": "To",
										"package": "react-router"
									}
								},
								{
									"id": 2540,
									"name": "fromPathname",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"/\""
								}
							],
							"type": {
								"type": "reference",
								"target": 1568,
								"name": "Path",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2541,
					"name": "unstable_HistoryRouter",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"children": [
						{
							"id": 2542,
							"name": "displayName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 376,
									"character": 14,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L376"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2542
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 348,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L348"
						},
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 376,
							"character": 0,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L376"
						}
					],
					"signatures": [
						{
							"id": 2543,
							"name": "unstable_HistoryRouter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A "
									},
									{
										"kind": "code",
										"text": "`<Router>`"
									},
									{
										"kind": "text",
										"text": " that accepts a pre-instantiated history object. It's important\nto note that using your own history object is highly discouraged and may add\ntwo versions of the history library to your bundles unless you use the same\nversion of the history library that React Router uses internally."
									}
								],
								"blockTags": [
									{
										"tag": "@name",
										"content": [
											{
												"kind": "text",
												"text": "unstable_HistoryRouter"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 348,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L348"
								}
							],
							"parameters": [
								{
									"id": 2544,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 813,
										"name": "HistoryRouterProps",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.JSX.Element"
								},
								"name": "Element",
								"package": "@types/react",
								"qualifiedName": "React.JSX.Element"
							}
						}
					]
				},
				{
					"id": 2545,
					"name": "unstable_composeUploadHandlers",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/formData.ts",
							"line": 15,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/formData.ts#L15"
						}
					],
					"signatures": [
						{
							"id": 2546,
							"name": "unstable_composeUploadHandlers",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/formData.ts",
									"line": 15,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/formData.ts#L15"
								}
							],
							"parameters": [
								{
									"id": 2547,
									"name": "handlers",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 2234,
											"name": "UploadHandler",
											"package": "react-router"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 2234,
								"name": "UploadHandler",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2548,
					"name": "unstable_createMemoryUploadHandler",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
							"line": 25,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L25"
						}
					],
					"signatures": [
						{
							"id": 2549,
							"name": "unstable_createMemoryUploadHandler",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
									"line": 25,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L25"
								}
							],
							"parameters": [
								{
									"id": 2550,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2111,
										"name": "MemoryUploadHandlerOptions",
										"package": "react-router"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": 2234,
								"name": "UploadHandler",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2551,
					"name": "unstable_parseMultipartFormData",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/formData.ts",
							"line": 36,
							"character": 22,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/formData.ts#L36"
						}
					],
					"signatures": [
						{
							"id": 2552,
							"name": "unstable_parseMultipartFormData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allows you to handle multipart forms (file uploads) for your app.\n\nTODO: Update this comment"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://remix.run/utils/parse-multipart-form-data"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/formData.ts",
									"line": 36,
									"character": 22,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/formData.ts#L36"
								}
							],
							"parameters": [
								{
									"id": 2553,
									"name": "request",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Request"
										},
										"name": "Request",
										"package": "typescript"
									}
								},
								{
									"id": 2554,
									"name": "uploadHandler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2234,
										"name": "UploadHandler",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "FormData"
										},
										"name": "FormData",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2555,
					"name": "unstable_setDevServerHooks",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/server-runtime/dev.ts",
							"line": 13,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/dev.ts#L13"
						}
					],
					"signatures": [
						{
							"id": 2556,
							"name": "unstable_setDevServerHooks",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-router/lib/server-runtime/dev.ts",
									"line": 13,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/server-runtime/dev.ts#L13"
								}
							],
							"parameters": [
								{
									"id": 2557,
									"name": "devServerHooks",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/server-runtime/dev.ts",
											"qualifiedName": "DevServerHooks"
										},
										"name": "DevServerHooks",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2558,
					"name": "unstable_usePrompt",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 2132,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L2132"
						}
					],
					"signatures": [
						{
							"id": 2559,
							"name": "unstable_usePrompt",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Wrapper around useBlocker to show a window.confirm prompt to users instead of building a custom UI with "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useBlocker",
										"target": 2585,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ".\n\nThe "
									},
									{
										"kind": "code",
										"text": "`unstable_`"
									},
									{
										"kind": "text",
										"text": " flag will not be removed because this technique has a lot of rough edges and behaves very differently (and incorrectly sometimes) across browsers if users click addition back/forward navigations while the confirmation is open.  Use at your own risk.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nfunction ImportantForm() {\n  let [value, setValue] = React.useState(\"\");\n\n  // Block navigating elsewhere when data has been entered into the input\n  unstable_usePrompt({\n    message: \"Are you sure?\",\n    when: ({ currentLocation, nextLocation }) =>\n      value !== \"\" &&\n      currentLocation.pathname !== nextLocation.pathname,\n  });\n\n  return (\n    <Form method=\"post\">\n      <label>\n        Enter some important data:\n        <input\n          name=\"data\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n        />\n      </label>\n      <button type=\"submit\">Save</button>\n    </Form>\n  );\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@name",
										"content": [
											{
												"kind": "text",
												"text": "unstable_usePrompt"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 2132,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L2132"
								}
							],
							"parameters": [
								{
									"id": 2560,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2561,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2562,
													"name": "message",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 2137,
															"character": 2,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L2137"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2563,
													"name": "when",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 2136,
															"character": 2,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L2136"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"target": 1970,
																"name": "BlockerFunction",
																"package": "react-router"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2562,
														2563
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 2135,
													"character": 3,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L2135"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2564,
					"name": "unstable_useViewTransitionState",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 2168,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L2168"
						}
					],
					"signatures": [
						{
							"id": 2565,
							"name": "unstable_useViewTransitionState",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This hook returns "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " when there is an active [View Transition](https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API) to the specified location. This can be used to apply finer-grained styles to elements to further customize the view transition. This requires that view transitions have been enabled for the given navigation via "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "LinkProps.unstable_viewTransition",
										"target": 1166,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " (or the "
									},
									{
										"kind": "code",
										"text": "`Form`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`submit`"
									},
									{
										"kind": "text",
										"text": ", or "
									},
									{
										"kind": "code",
										"text": "`navigate`"
									},
									{
										"kind": "text",
										"text": " call)"
									}
								],
								"blockTags": [
									{
										"tag": "@name",
										"content": [
											{
												"kind": "text",
												"text": "unstable_useViewTransitionState"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 2168,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L2168"
								}
							],
							"parameters": [
								{
									"id": 2566,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2222,
										"name": "To",
										"package": "react-router"
									}
								},
								{
									"id": 2567,
									"name": "opts",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2568,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2569,
													"name": "relative",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 2170,
															"character": 10,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L2170"
														}
													],
													"type": {
														"type": "reference",
														"target": 2192,
														"name": "RelativeRoutingType",
														"package": "react-router"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2569
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 2170,
													"character": 8,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L2170"
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 2570,
					"name": "useActionData",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 1139,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L1139"
						}
					],
					"signatures": [
						{
							"id": 2571,
							"name": "useActionData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the action data from the most recent POST navigation form submission or "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": " if there hasn't been one.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { Form, useActionData } from \"react-router\"\n\nexport async function action({ request }) {\n  const body = await request.formData()\n  const name = body.get(\"visitorsName\")\n  return { message: `Hello, ${name}` }\n}\n\nexport default function Invoices() {\n  const data = useActionData()\n  return (\n    <Form method=\"post\">\n      <input type=\"text\" name=\"visitorsName\" />\n      {data ? data.message : \"Waiting...\"}\n    </Form>\n  )\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 1139,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L1139"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 2572,
					"name": "useAsyncError",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 1216,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L1216"
						}
					],
					"signatures": [
						{
							"id": 2573,
							"name": "useAsyncError",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the rejection value from the closest "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "`<Await>`",
										"target": 2256
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { Await, useAsyncError } from \"react-router\"\n\nfunction ErrorElement() {\n  const error = useAsyncError();\n  return (\n    <p>Uh Oh, something went wrong! {error.message}</p>\n  );\n}\n\n// somewhere in your app\n<Await\n  resolve={promiseThatRejects}\n  errorElement={<ErrorElement />}\n/>\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 1216,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L1216"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 2574,
					"name": "useAsyncValue",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 1189,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L1189"
						}
					],
					"signatures": [
						{
							"id": 2575,
							"name": "useAsyncValue",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the resolved promise value from the closest "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "`<Await>`",
										"target": 2256
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nfunction SomeDescendant() {\n  const value = useAsyncValue();\n  // ...\n}\n\n// somewhere in your app\n<Await resolve={somePromise}>\n  <SomeDescendant />\n</Await>\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 1189,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L1189"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 2576,
					"name": "useBeforeUnload",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 2060,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L2060"
						}
					],
					"signatures": [
						{
							"id": 2577,
							"name": "useBeforeUnload",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Setup a callback to be fired on the window's "
									},
									{
										"kind": "code",
										"text": "`beforeunload`"
									},
									{
										"kind": "text",
										"text": " event."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 2060,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L2060"
								}
							],
							"parameters": [
								{
									"id": 2578,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2579,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 2061,
													"character": 12,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L2061"
												}
											],
											"signatures": [
												{
													"id": 2580,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 2061,
															"character": 12,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L2061"
														}
													],
													"parameters": [
														{
															"id": 2581,
															"name": "event",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "BeforeUnloadEvent"
																},
																"name": "BeforeUnloadEvent",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								},
								{
									"id": 2582,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2583,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2584,
													"name": "capture",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 2062,
															"character": 14,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L2062"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2584
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 2062,
													"character": 12,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L2062"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2585,
					"name": "useBlocker",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 1231,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L1231"
						}
					],
					"signatures": [
						{
							"id": 2586,
							"name": "useBlocker",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allow the application to block navigations within the SPA and present the\nuser a confirmation dialog to confirm the navigation.  Mostly used to avoid\nusing half-filled form data.  This does not handle hard-reloads or\ncross-origin navigations."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 1231,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L1231"
								}
							],
							"parameters": [
								{
									"id": 2587,
									"name": "shouldBlock",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"target": 1970,
												"name": "BlockerFunction",
												"package": "react-router"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1969,
								"name": "Blocker",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2588,
					"name": "useFetcher",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1788,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1788"
						}
					],
					"signatures": [
						{
							"id": 2589,
							"name": "useFetcher",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Useful for creating complex, dynamic user interfaces that require multiple, concurrent data interactions without causing a navigation.\n\nFetchers track their own, independent state and can be used to load data, submit forms, and generally interact with loaders and actions.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useFetcher } from \"react-router\"\n\nfunction SomeComponent() {\n  let fetcher = useFetcher()\n\n  // states are available on the fetcher\n  fetcher.state // \"idle\" | \"loading\" | \"submitting\"\n  fetcher.data // the data returned from the action or loader\n\n  // render a form\n  <fetcher.Form method=\"post\" />\n\n  // load data\n  fetcher.load(\"/some/route\")\n\n  // submit data\n  fetcher.submit(someFormRef, { method: \"post\" })\n  fetcher.submit(someData, {\n    method: \"post\",\n    encType: \"application/json\"\n  })\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1788,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1788"
								}
							],
							"typeParameter": [
								{
									"id": 2590,
									"name": "TData",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 2591,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2592,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2593,
													"name": "key",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "By default, "
															},
															{
																"kind": "code",
																"text": "`useFetcher`"
															},
															{
																"kind": "text",
																"text": " generate a unique fetcher scoped to that component. If you want to identify a fetcher with your own key such that you can access it from elsewhere in your app, you can do that with the "
															},
															{
																"kind": "code",
																"text": "`key`"
															},
															{
																"kind": "text",
																"text": " option:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nfunction SomeComp() {\n  let fetcher = useFetcher({ key: \"my-key\" })\n  // ...\n}\n\n// Somewhere else\nfunction AnotherComp() {\n  // this will be the same fetcher, sharing the state across the app\n  let fetcher = useFetcher({ key: \"my-key\" });\n  // ...\n}\n```"
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 1808,
															"character": 2,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1808"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2593
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 1790,
													"character": 3,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1790"
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": 2052,
								"typeArguments": [
									{
										"type": "reference",
										"target": 2590,
										"name": "TData",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								],
								"name": "FetcherWithComponents",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2594,
					"name": "useFetchers",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1902,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1902"
						}
					],
					"signatures": [
						{
							"id": 2595,
							"name": "useFetchers",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an array of all in-flight fetchers. This is useful for components throughout the app that didn't create the fetchers but want to use their submissions to participate in optimistic UI.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useFetchers } from \"react-router\";\n\nfunction SomeComponent() {\n  const fetchers = useFetchers();\n  fetchers[0].formData; // FormData\n  fetchers[0].state; // etc.\n  // ...\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1902,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1902"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intersection",
									"types": [
										{
											"type": "reference",
											"target": 2050,
											"name": "Fetcher",
											"package": "react-router"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 2596,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 2597,
														"name": "key",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "packages/react-router/lib/dom/lib.tsx",
																"line": 1902,
																"character": 44,
																"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1902"
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															2597
														]
													}
												],
												"sources": [
													{
														"fileName": "packages/react-router/lib/dom/lib.tsx",
														"line": 1902,
														"character": 42,
														"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1902"
													}
												]
											}
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 2598,
					"name": "useFormAction",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1605,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1605"
						}
					],
					"signatures": [
						{
							"id": 2599,
							"name": "useFormAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Resolves the URL to the closest route in the component hierarchy instead of the current URL of the app.\n\nThis is used internally by "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Form",
										"target": 2262,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " resolve the action to the closest route, but can be used generically as well.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useFormAction } from \"react-router\";\n\nfunction SomeComponent() {\n  // closest route URL\n  let action = useFormAction();\n\n  // closest route URL + \"destroy\"\n  let destroyAction = useFormAction(\"destroy\");\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1605,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1605"
								}
							],
							"parameters": [
								{
									"id": 2600,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The action to append to the closest route URL."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2601,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2602,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2603,
													"name": "relative",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 1610,
															"character": 18,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1610"
														}
													],
													"type": {
														"type": "reference",
														"target": 2192,
														"name": "RelativeRoutingType",
														"package": "react-router"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2603
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 1610,
													"character": 16,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1610"
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2604,
					"name": "useHref",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 70,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L70"
						}
					],
					"signatures": [
						{
							"id": 2605,
							"name": "useHref",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Resolves a URL against the current location.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useHref } from \"react-router\"\n\nfunction SomeComponent() {\n  let href = useHref(\"some/where\");\n  // \"/resolved/some/where\"\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 70,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L70"
								}
							],
							"parameters": [
								{
									"id": 2606,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2222,
										"name": "To",
										"package": "react-router"
									}
								},
								{
									"id": 2607,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2608,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2609,
													"name": "relative",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/hooks.tsx",
															"line": 72,
															"character": 18,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L72"
														}
													],
													"type": {
														"type": "reference",
														"target": 2192,
														"name": "RelativeRoutingType",
														"package": "react-router"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2609
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/hooks.tsx",
													"line": 72,
													"character": 16,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L72"
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2610,
					"name": "useInRouterContext",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 104,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L104"
						}
					],
					"signatures": [
						{
							"id": 2611,
							"name": "useInRouterContext",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns true if this component is a descendant of a Router, useful to ensure\na component is used within a Router."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 104,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L104"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 2612,
					"name": "useLinkClickHandler",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1271,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1271"
						}
					],
					"signatures": [
						{
							"id": 2613,
							"name": "useLinkClickHandler",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Handles the click behavior for router "
									},
									{
										"kind": "code",
										"text": "`<Link>`"
									},
									{
										"kind": "text",
										"text": " components. This is useful if\nyou need to create custom "
									},
									{
										"kind": "code",
										"text": "`<Link>`"
									},
									{
										"kind": "text",
										"text": " components with the same click behavior we\nuse in our exported "
									},
									{
										"kind": "code",
										"text": "`<Link>`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1271,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1271"
								}
							],
							"typeParameter": [
								{
									"id": 2614,
									"name": "E",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Element"
										},
										"name": "Element",
										"package": "typescript"
									},
									"default": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "HTMLAnchorElement"
										},
										"name": "HTMLAnchorElement",
										"package": "typescript"
									}
								}
							],
							"parameters": [
								{
									"id": 2615,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2222,
										"name": "To",
										"package": "react-router"
									}
								},
								{
									"id": 2616,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2617,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2618,
													"name": "preventScrollReset",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 1284,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1284"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 2619,
													"name": "relative",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 1285,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1285"
														}
													],
													"type": {
														"type": "reference",
														"target": 2192,
														"name": "RelativeRoutingType",
														"package": "react-router"
													}
												},
												{
													"id": 2620,
													"name": "replace",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 1282,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1282"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 2621,
													"name": "state",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 1283,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1283"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 2622,
													"name": "target",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 1281,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1281"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.HTMLAttributeAnchorTarget"
														},
														"name": "HTMLAttributeAnchorTarget",
														"package": "@types/react",
														"qualifiedName": "React.HTMLAttributeAnchorTarget"
													}
												},
												{
													"id": 2623,
													"name": "unstable_viewTransition",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/dom/lib.tsx",
															"line": 1286,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1286"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2618,
														2619,
														2620,
														2621,
														2622,
														2623
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/dom/lib.tsx",
													"line": 1280,
													"character": 5,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1280"
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2624,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-router/lib/dom/lib.tsx",
											"line": 1288,
											"character": 3,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1288"
										}
									],
									"signatures": [
										{
											"id": 2625,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 2626,
													"name": "event",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
															"qualifiedName": "React.MouseEvent"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 2614,
																"name": "E",
																"package": "react-router",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "MouseEvent"
																},
																"name": "MouseEvent",
																"package": "typescript"
															}
														],
														"name": "React.MouseEvent",
														"package": "@types/react"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 2627,
					"name": "useLoaderData",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 1069,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L1069"
						}
					],
					"signatures": [
						{
							"id": 2628,
							"name": "useLoaderData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the data from the closest route "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "loader",
										"target": 2096
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "client loader",
										"target": 1988
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useLoaderData } from \"react-router\"\n\nexport async function loader() {\n  return await fakeDb.invoices.findAll();\n}\n\nexport default function Invoices() {\n  let invoices = useLoaderData<typeof loader>();\n  // ...\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 1069,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L1069"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 2629,
					"name": "useLocation",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 131,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L131"
						}
					],
					"signatures": [
						{
							"id": 2630,
							"name": "useLocation",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Location",
										"target": 1175,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ". This can be useful if you'd like to perform some side effect whenever it changes.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport * as React from 'react'\nimport { useLocation } from 'react-router'\n\nfunction SomeComponent() {\n  let location = useLocation()\n\n  React.useEffect(() => {\n    // Google Analytics\n    ga('send', 'pageview')\n  }, [location]);\n\n  return (\n    // ...\n  );\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 131,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L131"
								}
							],
							"type": {
								"type": "reference",
								"target": 1175,
								"name": "Location",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2631,
					"name": "useMatch",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 159,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L159"
						}
					],
					"signatures": [
						{
							"id": 2632,
							"name": "useMatch",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a PathMatch object if the given pattern matches the current URL.\nThis is useful for components that need to know \"active\" state, e.g.\n"
									},
									{
										"kind": "code",
										"text": "`<NavLink>`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 159,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L159"
								}
							],
							"typeParameter": [
								{
									"id": 2633,
									"name": "ParamKey",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2634,
									"name": "Path",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 2635,
									"name": "pattern",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 2634,
												"name": "Path",
												"package": "react-router",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 1578,
												"typeArguments": [
													{
														"type": "reference",
														"target": 2634,
														"name": "Path",
														"package": "react-router",
														"refersToTypeParameter": true
													}
												],
												"name": "PathPattern",
												"package": "react-router"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 1572,
										"typeArguments": [
											{
												"type": "reference",
												"target": 2633,
												"name": "ParamKey",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										],
										"name": "PathMatch",
										"package": "react-router"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 2636,
					"name": "useMatches",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 1041,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L1041"
						}
					],
					"signatures": [
						{
							"id": 2637,
							"name": "useMatches",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the active route matches, useful for accessing loaderData for\nparent/child routes or the route \"handle\" property"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 1041,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L1041"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1906,
									"name": "UIMatch",
									"package": "react-router"
								}
							}
						}
					]
				},
				{
					"id": 2638,
					"name": "useNavigate",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 224,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L224"
						}
					],
					"signatures": [
						{
							"id": 2639,
							"name": "useNavigate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a function that lets you navigate programmatically in the browser in response to user interactions or effects.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useNavigate } from \"react-router\";\n\nfunction SomeComponent() {\n  let navigate = useNavigate();\n  return (\n    <button\n      onClick={() => {\n        navigate(-1);\n      }}\n    />\n  );\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nIt's often better to use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "redirect",
										"target": 2526
									},
									{
										"kind": "text",
										"text": " in "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "actions",
										"target": 129
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "loaders",
										"target": 2096
									},
									{
										"kind": "text",
										"text": " than this hook."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 224,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L224"
								}
							],
							"type": {
								"type": "reference",
								"target": 1496,
								"name": "NavigateFunction",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2640,
					"name": "useNavigation",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 991,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L991"
						}
					],
					"signatures": [
						{
							"id": 2641,
							"name": "useNavigation",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current navigation, defaulting to an \"idle\" navigation when no navigation is in progress. You can use this to render pending UI (like a global spinner) or read FormData from a form navigation.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useNavigation } from \"react-router\"\n\nfunction SomeComponent() {\n  let navigation = useNavigation();\n  navigation.state\n  navigation.formData\n  // etc.\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 991,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L991"
								}
							],
							"type": {
								"type": "reference",
								"target": 2147,
								"name": "Navigation",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2642,
					"name": "useNavigationType",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 148,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L148"
						}
					],
					"signatures": [
						{
							"id": 2643,
							"name": "useNavigationType",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current navigation action which describes how the router came to\nthe current location, either by a pop, push, or replace on the history stack."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 148,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L148"
								}
							],
							"type": {
								"type": "reference",
								"target": 3,
								"name": "NavigationType",
								"package": "react-router",
								"qualifiedName": "Action"
							}
						}
					]
				},
				{
					"id": 2644,
					"name": "useOutlet",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 319,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L319"
						}
					],
					"signatures": [
						{
							"id": 2645,
							"name": "useOutlet",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the element for the child route at this level of the route\nhierarchy. Used internally by "
									},
									{
										"kind": "code",
										"text": "`<Outlet>`"
									},
									{
										"kind": "text",
										"text": " to render child routes."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 319,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L319"
								}
							],
							"parameters": [
								{
									"id": 2646,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactElement"
										},
										"name": "React.ReactElement",
										"package": "@types/react"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 2647,
					"name": "useOutletContext",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 309,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L309"
						}
					],
					"signatures": [
						{
							"id": 2648,
							"name": "useOutletContext",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the parent route "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "`<Outlet context>`",
										"target": 1559
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 309,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L309"
								}
							],
							"typeParameter": [
								{
									"id": 2649,
									"name": "Context",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 2649,
								"name": "Context",
								"package": "react-router",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 2650,
					"name": "useParams",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 345,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L345"
						}
					],
					"signatures": [
						{
							"id": 2651,
							"name": "useParams",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an object of key/value pairs of the dynamic params from the current URL that were matched by the routes. Child routes inherit all params from their parent routes.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useParams } from \"react-router\"\n\nfunction SomeComponent() {\n  let params = useParams()\n  params.postId\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nAssuming a route pattern like "
									},
									{
										"kind": "code",
										"text": "`/posts/:postId`"
									},
									{
										"kind": "text",
										"text": " is matched by "
									},
									{
										"kind": "code",
										"text": "`/posts/123`"
									},
									{
										"kind": "text",
										"text": " then "
									},
									{
										"kind": "code",
										"text": "`params.postId`"
									},
									{
										"kind": "text",
										"text": " will be "
									},
									{
										"kind": "code",
										"text": "`\"123\"`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 345,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L345"
								}
							],
							"typeParameter": [
								{
									"id": 2652,
									"name": "ParamsOrKey",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Readonly"
								},
								"typeArguments": [
									{
										"type": "conditional",
										"checkType": {
											"type": "tuple",
											"elements": [
												{
													"type": "reference",
													"target": 2652,
													"name": "ParamsOrKey",
													"package": "react-router",
													"refersToTypeParameter": true
												}
											]
										},
										"extendsType": {
											"type": "tuple",
											"elements": [
												{
													"type": "intrinsic",
													"name": "string"
												}
											]
										},
										"trueType": {
											"type": "reference",
											"target": 2183,
											"typeArguments": [
												{
													"type": "reference",
													"target": 2652,
													"name": "ParamsOrKey",
													"package": "react-router",
													"refersToTypeParameter": true
												}
											],
											"name": "Params",
											"package": "react-router"
										},
										"falseType": {
											"type": "reference",
											"target": {
												"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Partial"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 2652,
													"name": "ParamsOrKey",
													"package": "react-router",
													"refersToTypeParameter": true
												}
											],
											"name": "Partial",
											"package": "typescript"
										}
									}
								],
								"name": "Readonly",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2653,
					"name": "useResolvedPath",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 372,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L372"
						}
					],
					"signatures": [
						{
							"id": 2654,
							"name": "useResolvedPath",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Resolves the pathname of the given "
									},
									{
										"kind": "code",
										"text": "`to`"
									},
									{
										"kind": "text",
										"text": " value against the current location. Similar to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useHref",
										"target": 2604,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ", but returns a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Path",
										"target": 1568,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " instead of a string.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useResolvedPath } from \"react-router\"\n\nfunction SomeComponent() {\n  // if the user is at /dashboard/profile\n  let path = useResolvedPath(\"../accounts\")\n  path.pathname // \"/dashboard/accounts\"\n  path.search // \"\"\n  path.hash // \"\"\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 372,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L372"
								}
							],
							"parameters": [
								{
									"id": 2655,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2222,
										"name": "To",
										"package": "react-router"
									}
								},
								{
									"id": 2656,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2657,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2658,
													"name": "relative",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react-router/lib/hooks.tsx",
															"line": 374,
															"character": 18,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L374"
														}
													],
													"type": {
														"type": "reference",
														"target": 2192,
														"name": "RelativeRoutingType",
														"package": "react-router"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2658
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-router/lib/hooks.tsx",
													"line": 374,
													"character": 16,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L374"
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": 1568,
								"name": "Path",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2659,
					"name": "useRevalidator",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 1021,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L1021"
						}
					],
					"signatures": [
						{
							"id": 2660,
							"name": "useRevalidator",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Revalidate the data on the page for reasons outside of normal data mutations like window focus or polling on an interval.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useRevalidator } from \"react-router\";\n\nfunction WindowFocusRevalidator() {\n  const revalidator = useRevalidator();\n\n  useFakeWindowFocus(() => {\n    revalidator.revalidate();\n  });\n\n  return (\n    <div hidden={revalidator.state === \"idle\"}>\n      Revalidating...\n    </div>\n  );\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nNote that page data is already revalidated automatically after actions. If you find yourself using this for normal CRUD operations on your data in response to user interactions, you're probably not taking advantage of the other APIs like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useFetcher",
										"target": 2588
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Form",
										"target": 2262
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useSubmit",
										"target": 2677
									},
									{
										"kind": "text",
										"text": " that do this automatically."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 1021,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L1021"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2661,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2662,
											"name": "state",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/hooks.tsx",
													"line": 1029,
													"character": 6,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L1029"
												}
											],
											"type": {
												"type": "reference",
												"target": 2198,
												"name": "RevalidationState",
												"package": "react-router"
											},
											"defaultValue": "state.revalidation"
										},
										{
											"id": 2663,
											"name": "revalidate",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-router/lib/hooks.tsx",
													"line": 1026,
													"character": 12,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L1026"
												}
											],
											"signatures": [
												{
													"id": 2664,
													"name": "revalidate",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-router/lib/hooks.tsx",
															"line": 1026,
															"character": 12,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L1026"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2662
											]
										},
										{
											"title": "Methods",
											"children": [
												2663
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-router/lib/hooks.tsx",
											"line": 1025,
											"character": 11,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L1025"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 2665,
					"name": "useRouteError",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 1157,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L1157"
						}
					],
					"signatures": [
						{
							"id": 2666,
							"name": "useRouteError",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Accesses the error thrown during an "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "action",
										"target": 129
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "loader",
										"target": 2096
									},
									{
										"kind": "text",
										"text": ", or component render to be used in a route module Error Boundary.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nexport function ErrorBoundary() {\n  const error = useRouteError();\n  return <div>{error.message}</div>;\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 1157,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L1157"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 2667,
					"name": "useRouteLoaderData",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 1109,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L1109"
						}
					],
					"signatures": [
						{
							"id": 2668,
							"name": "useRouteLoaderData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the loader data for a given route by route ID.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useRouteLoaderData } from \"react-router\";\n\nfunction SomeComponent() {\n  const { user } = useRouteLoaderData(\"root\");\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nRoute IDs are created automatically. They are simply the path of the route file relative to the app folder without the extension.\n\n| Route Filename             | Route ID             |\n| -------------------------- | -------------------- |\n| "
									},
									{
										"kind": "code",
										"text": "`app/root.tsx`"
									},
									{
										"kind": "text",
										"text": "             | "
									},
									{
										"kind": "code",
										"text": "`\"root\"`"
									},
									{
										"kind": "text",
										"text": "             |\n| "
									},
									{
										"kind": "code",
										"text": "`app/routes/teams.tsx`"
									},
									{
										"kind": "text",
										"text": "     | "
									},
									{
										"kind": "code",
										"text": "`\"routes/teams\"`"
									},
									{
										"kind": "text",
										"text": "     |\n| "
									},
									{
										"kind": "code",
										"text": "`app/whatever/teams.$id.tsx`"
									},
									{
										"kind": "text",
										"text": " | "
									},
									{
										"kind": "code",
										"text": "`\"whatever/teams.$id\"`"
									},
									{
										"kind": "text",
										"text": " |\n\nIf you created an ID manually, you can use that instead:\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nroute(\"/\", \"containers/app.tsx\", { id: \"app\" }})\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 1109,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L1109"
								}
							],
							"parameters": [
								{
									"id": 2669,
									"name": "routeId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 2670,
					"name": "useRoutes",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/hooks.tsx",
							"line": 423,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L423"
						}
					],
					"signatures": [
						{
							"id": 2671,
							"name": "useRoutes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hook version of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "`<Routes>`",
										"target": 2311
									},
									{
										"kind": "text",
										"text": " that uses objects instead of components. These objects have the same properties as the component props.\n\nThe return value of "
									},
									{
										"kind": "code",
										"text": "`useRoutes`"
									},
									{
										"kind": "text",
										"text": " is either a valid React element you can use to render the route tree, or "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": " if nothing matched.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport * as React from \"react\";\nimport { useRoutes } from \"react-router\";\n\nfunction App() {\n  let element = useRoutes([\n    {\n      path: \"/\",\n      element: <Dashboard />,\n      children: [\n        {\n          path: \"messages\",\n          element: <DashboardMessages />,\n        },\n        { path: \"tasks\", element: <DashboardTasks /> },\n      ],\n    },\n    { path: \"team\", element: <AboutPage /> },\n  ]);\n\n  return element;\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/hooks.tsx",
									"line": 423,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/hooks.tsx#L423"
								}
							],
							"parameters": [
								{
									"id": 2672,
									"name": "routes",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 2199,
											"name": "RouteObject",
											"package": "react-router"
										}
									}
								},
								{
									"id": 2673,
									"name": "locationArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1175,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Location",
														"package": "react-router"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactElement"
										},
										"name": "React.ReactElement",
										"package": "@types/react"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 2674,
					"name": "useSearchParams",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1343,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1343"
						}
					],
					"signatures": [
						{
							"id": 2675,
							"name": "useSearchParams",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a tuple of the current URL's "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "URLSearchParams",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "URLSearchParams"
										},
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " and a function to update them. Setting the search params causes a navigation.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useSearchParams } from \"react-router\";\n\nexport function SomeComponent() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  // ...\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1343,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1343"
								}
							],
							"parameters": [
								{
									"id": 2676,
									"name": "defaultInit",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 2228,
										"name": "URLSearchParamsInit",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "URLSearchParams"
										},
										"name": "URLSearchParams",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 2208,
										"name": "SetURLSearchParams",
										"package": "react-router"
									}
								]
							}
						}
					]
				},
				{
					"id": 2677,
					"name": "useSubmit",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-router/lib/dom/lib.tsx",
							"line": 1543,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1543"
						}
					],
					"signatures": [
						{
							"id": 2678,
							"name": "useSubmit",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The imperative version of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "`<Form>`",
										"target": 2262,
										"tsLinkText": "`<Form>`"
									},
									{
										"kind": "text",
										"text": " that lets you submit a form from code instead of a user interaction.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useSubmit } from \"react-router\";\n\nfunction SomeComponent() {\n  const submit = useSubmit();\n  return (\n    <Form\n      onChange={(event) => {\n        submit(event.currentTarget);\n      }}\n    />\n  );\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-router/lib/dom/lib.tsx",
									"line": 1543,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router/lib/dom/lib.tsx#L1543"
								}
							],
							"type": {
								"type": "reference",
								"target": 1890,
								"name": "SubmitFunction",
								"package": "react-router"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2
					]
				},
				{
					"title": "Enumerations",
					"children": [
						3,
						7
					]
				},
				{
					"title": "Classes",
					"children": [
						11,
						31,
						43
					]
				},
				{
					"title": "Interfaces",
					"children": [
						129,
						134,
						139,
						142,
						146,
						150,
						162,
						166,
						179,
						181,
						186,
						209,
						488,
						492,
						499,
						785,
						787,
						791,
						795,
						802,
						806,
						810,
						813,
						817,
						838,
						859,
						880,
						883,
						1168,
						1170,
						1175,
						1182,
						1187,
						1195,
						1200,
						1496,
						1502,
						1509,
						1514,
						1537,
						1558,
						1560,
						1568,
						1572,
						1578,
						1583,
						1604,
						1612,
						1681,
						1688,
						1698,
						1705,
						1713,
						1727,
						1735,
						1738,
						1743,
						1754,
						1759,
						1764,
						1789,
						1792,
						1817,
						1835,
						1838,
						1852,
						1870,
						1881,
						1885,
						1890,
						1894,
						1906,
						1914,
						1926,
						1929,
						1932,
						1938,
						1954,
						1958
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						1969,
						1970,
						1978,
						1982,
						1988,
						1994,
						2000,
						2001,
						2006,
						2012,
						2018,
						2025,
						2032,
						2038,
						2041,
						2045,
						2050,
						2052,
						2064,
						2067,
						2068,
						2069,
						2070,
						2076,
						2079,
						2080,
						2081,
						2085,
						2089,
						2095,
						2096,
						2104,
						2106,
						2111,
						2117,
						2140,
						2142,
						2147,
						2148,
						2180,
						2181,
						2183,
						2185,
						2187,
						2192,
						2193,
						2198,
						2199,
						2200,
						2201,
						2202,
						2203,
						2204,
						2208,
						2216,
						2221,
						2222,
						2223,
						2228,
						2229,
						2234,
						2238
					]
				},
				{
					"title": "Variables",
					"children": [
						2244,
						2245,
						2246,
						2247,
						2248,
						2249,
						2250,
						2251,
						2252,
						2253,
						2254,
						2255
					]
				},
				{
					"title": "Functions",
					"children": [
						2256,
						2259,
						2262,
						2269,
						2272,
						2279,
						2281,
						2284,
						2286,
						2293,
						2296,
						2299,
						2302,
						2305,
						2308,
						2311,
						2314,
						2317,
						2321,
						2324,
						2327,
						2330,
						2333,
						2342,
						2350,
						2353,
						2360,
						2363,
						2367,
						2376,
						2384,
						2389,
						2394,
						2400,
						2406,
						2410,
						2416,
						2419,
						2423,
						2435,
						2438,
						2441,
						2447,
						2451,
						2458,
						2461,
						2467,
						2470,
						2474,
						2481,
						2492,
						2497,
						2500,
						2503,
						2506,
						2511,
						2517,
						2523,
						2526,
						2530,
						2534,
						2537,
						2541,
						2545,
						2548,
						2551,
						2555,
						2558,
						2564,
						2570,
						2572,
						2574,
						2576,
						2585,
						2588,
						2594,
						2598,
						2604,
						2610,
						2612,
						2627,
						2629,
						2631,
						2636,
						2638,
						2640,
						2642,
						2644,
						2647,
						2650,
						2653,
						2659,
						2665,
						2667,
						2670,
						2674,
						2677
					]
				}
			],
			"categories": [
				{
					"title": "Routers",
					"children": [
						2406,
						2419,
						2423,
						2474
					]
				},
				{
					"title": "Router Components",
					"children": [
						2259,
						2269,
						2281,
						2324,
						2327,
						2541
					]
				},
				{
					"title": "Components",
					"children": [
						2256,
						2262,
						2272,
						2279,
						2284,
						2286,
						2293,
						2296,
						2299,
						2302,
						2305,
						2311,
						2314,
						2317,
						2321
					]
				},
				{
					"title": "Hooks",
					"children": [
						2558,
						2564,
						2570,
						2572,
						2574,
						2576,
						2585,
						2588,
						2594,
						2598,
						2604,
						2610,
						2612,
						2627,
						2629,
						2631,
						2636,
						2638,
						2640,
						2642,
						2644,
						2647,
						2650,
						2653,
						2659,
						2665,
						2667,
						2670,
						2674,
						2677
					]
				},
				{
					"title": "Utils",
					"children": [
						2438,
						2447,
						2451,
						2458,
						2470,
						2492,
						2500,
						2506,
						2511,
						2517,
						2523,
						2526,
						2530,
						2534,
						2537
					]
				},
				{
					"title": "Types",
					"children": [
						142,
						146,
						209,
						499,
						806,
						813,
						838,
						859,
						883,
						1182,
						1200,
						1509,
						1558,
						1583,
						1698,
						1735,
						2203
					]
				},
				{
					"title": "Other",
					"children": [
						2,
						3,
						7,
						11,
						31,
						43,
						129,
						134,
						139,
						150,
						162,
						166,
						179,
						181,
						186,
						488,
						492,
						785,
						787,
						791,
						795,
						802,
						810,
						817,
						880,
						1168,
						1170,
						1175,
						1187,
						1195,
						1496,
						1502,
						1514,
						1537,
						1560,
						1568,
						1572,
						1578,
						1604,
						1612,
						1681,
						1688,
						1705,
						1713,
						1727,
						1738,
						1743,
						1754,
						1759,
						1764,
						1789,
						1792,
						1817,
						1835,
						1838,
						1852,
						1870,
						1881,
						1885,
						1890,
						1894,
						1906,
						1914,
						1926,
						1929,
						1932,
						1938,
						1954,
						1958,
						1969,
						1970,
						1978,
						1982,
						1988,
						1994,
						2000,
						2001,
						2006,
						2012,
						2018,
						2025,
						2032,
						2038,
						2041,
						2045,
						2050,
						2052,
						2064,
						2067,
						2068,
						2069,
						2070,
						2076,
						2079,
						2080,
						2081,
						2085,
						2089,
						2095,
						2096,
						2104,
						2106,
						2111,
						2117,
						2140,
						2142,
						2147,
						2148,
						2180,
						2181,
						2183,
						2185,
						2187,
						2192,
						2193,
						2198,
						2199,
						2200,
						2201,
						2202,
						2204,
						2208,
						2216,
						2221,
						2222,
						2223,
						2228,
						2229,
						2234,
						2238,
						2244,
						2245,
						2246,
						2247,
						2248,
						2249,
						2250,
						2251,
						2252,
						2253,
						2254,
						2255,
						2308,
						2330,
						2333,
						2342,
						2350,
						2353,
						2360,
						2363,
						2367,
						2376,
						2384,
						2389,
						2394,
						2400,
						2410,
						2416,
						2435,
						2441,
						2461,
						2467,
						2481,
						2497,
						2503,
						2545,
						2548,
						2551,
						2555
					]
				}
			],
			"readme": [
				{
					"kind": "text",
					"text": "# React Router\n\nThe "
				},
				{
					"kind": "code",
					"text": "`react-router`"
				},
				{
					"kind": "text",
					"text": " package is the heart of [React Router](https://github.com/remix-run/react-router) and provides all the core functionality.\n\nIf you'd like to extend React Router and you know what you're doing, you should\nadd "
				},
				{
					"kind": "code",
					"text": "`react-router`"
				},
				{
					"kind": "text",
					"text": " **as a peer dependency, not a regular dependency** in your\npackage."
				}
			]
		},
		{
			"id": 2679,
			"name": "@react-router/architect",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"readme": [
				{
					"kind": "text",
					"text": "# React Router Architect\n\nArchitect server request handler for React Router.\n\n"
				},
				{
					"kind": "code",
					"text": "```bash\nnpm install @react-router/architect\n```"
				}
			]
		},
		{
			"id": 2680,
			"name": "@react-router/cloudflare",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"readme": [
				{
					"kind": "text",
					"text": "# React Router Cloudflare\n\nCloudflare platform abstractions for [React Router.](https://reactrouter.com)\n\n"
				},
				{
					"kind": "code",
					"text": "```bash\nnpm install @react-router/cloudflare @cloudflare/workers-types\n```"
				}
			]
		},
		{
			"id": 2681,
			"name": "@react-router/dev",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2682,
					"name": "cli",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 2683,
							"name": "run",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "cli/run.ts",
									"line": 77,
									"character": 22,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/cli/run.ts#L77"
								}
							],
							"signatures": [
								{
									"id": 2684,
									"name": "run",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Programmatic interface for running the react-router CLI with the given command line\narguments."
											}
										]
									},
									"sources": [
										{
											"fileName": "cli/run.ts",
											"line": 77,
											"character": 22,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/cli/run.ts#L77"
										}
									],
									"parameters": [
										{
											"id": 2685,
											"name": "argv",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"children": [
								2683
							]
						}
					],
					"sources": [
						{
							"fileName": "cli/index.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/cli/index.ts#L1"
						}
					]
				},
				{
					"id": 2686,
					"name": "AssetsManifest",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "manifest.ts",
							"line": 1,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L1"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2687,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2688,
									"name": "entry",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "manifest.ts",
											"line": 4,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L4"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2689,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2690,
													"name": "imports",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "manifest.ts",
															"line": 6,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L6"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 2691,
													"name": "module",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "manifest.ts",
															"line": 5,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L5"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2690,
														2691
													]
												}
											],
											"sources": [
												{
													"fileName": "manifest.ts",
													"line": 4,
													"character": 9,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L4"
												}
											]
										}
									}
								},
								{
									"id": 2692,
									"name": "hmr",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "manifest.ts",
											"line": 24,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L24"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2693,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2694,
													"name": "runtime",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "manifest.ts",
															"line": 26,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L26"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2695,
													"name": "timestamp",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "manifest.ts",
															"line": 25,
															"character": 4,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L25"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2694,
														2695
													]
												}
											],
											"sources": [
												{
													"fileName": "manifest.ts",
													"line": 24,
													"character": 8,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L24"
												}
											]
										}
									}
								},
								{
									"id": 2696,
									"name": "routes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "manifest.ts",
											"line": 8,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L8"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2697,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "manifest.ts",
													"line": 8,
													"character": 10,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L8"
												}
											],
											"indexSignature": {
												"id": 2698,
												"name": "__index",
												"variant": "signature",
												"kind": 8192,
												"flags": {},
												"sources": [
													{
														"fileName": "manifest.ts",
														"line": 9,
														"character": 4,
														"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L9"
													}
												],
												"parameters": [
													{
														"id": 2699,
														"name": "routeId",
														"variant": "param",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "reflection",
													"declaration": {
														"id": 2700,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 2701,
																"name": "caseSensitive",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"sources": [
																	{
																		"fileName": "manifest.ts",
																		"line": 14,
																		"character": 6,
																		"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L14"
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "boolean"
																}
															},
															{
																"id": 2702,
																"name": "hasAction",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "manifest.ts",
																		"line": 17,
																		"character": 6,
																		"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L17"
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "boolean"
																}
															},
															{
																"id": 2703,
																"name": "hasClientAction",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "manifest.ts",
																		"line": 19,
																		"character": 6,
																		"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L19"
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "boolean"
																}
															},
															{
																"id": 2704,
																"name": "hasClientLoader",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "manifest.ts",
																		"line": 20,
																		"character": 6,
																		"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L20"
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "boolean"
																}
															},
															{
																"id": 2705,
																"name": "hasErrorBoundary",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "manifest.ts",
																		"line": 21,
																		"character": 6,
																		"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L21"
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "boolean"
																}
															},
															{
																"id": 2706,
																"name": "hasLoader",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "manifest.ts",
																		"line": 18,
																		"character": 6,
																		"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L18"
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "boolean"
																}
															},
															{
																"id": 2707,
																"name": "id",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "manifest.ts",
																		"line": 10,
																		"character": 6,
																		"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L10"
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 2708,
																"name": "imports",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"sources": [
																	{
																		"fileName": "manifest.ts",
																		"line": 16,
																		"character": 6,
																		"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L16"
																	}
																],
																"type": {
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															},
															{
																"id": 2709,
																"name": "index",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"sources": [
																	{
																		"fileName": "manifest.ts",
																		"line": 13,
																		"character": 6,
																		"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L13"
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "boolean"
																}
															},
															{
																"id": 2710,
																"name": "module",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "manifest.ts",
																		"line": 15,
																		"character": 6,
																		"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L15"
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 2711,
																"name": "parentId",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"sources": [
																	{
																		"fileName": "manifest.ts",
																		"line": 11,
																		"character": 6,
																		"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L11"
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 2712,
																"name": "path",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"sources": [
																	{
																		"fileName": "manifest.ts",
																		"line": 12,
																		"character": 6,
																		"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L12"
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	2701,
																	2702,
																	2703,
																	2704,
																	2705,
																	2706,
																	2707,
																	2708,
																	2709,
																	2710,
																	2711,
																	2712
																]
															}
														],
														"sources": [
															{
																"fileName": "manifest.ts",
																"line": 9,
																"character": 23,
																"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L9"
															}
														]
													}
												}
											}
										}
									}
								},
								{
									"id": 2713,
									"name": "url",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "manifest.ts",
											"line": 3,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L3"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2714,
									"name": "version",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "manifest.ts",
											"line": 2,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L2"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2688,
										2692,
										2696,
										2713,
										2714
									]
								}
							],
							"sources": [
								{
									"fileName": "manifest.ts",
									"line": 1,
									"character": 23,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/manifest.ts#L1"
								}
							]
						}
					}
				},
				{
					"id": 2715,
					"name": "BuildManifest",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "config.ts",
							"line": 77,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L77"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router-dev/config.ts",
									"qualifiedName": "DefaultBuildManifest"
								},
								"name": "DefaultBuildManifest",
								"package": "@react-router/dev"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "packages/react-router-dev/config.ts",
									"qualifiedName": "ServerBundlesBuildManifest"
								},
								"name": "ServerBundlesBuildManifest",
								"package": "@react-router/dev"
							}
						]
					}
				},
				{
					"id": 2716,
					"name": "Preset",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "config.ts",
							"line": 27,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L27"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2717,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2718,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "config.ts",
											"line": 28,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L28"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2719,
									"name": "reactRouterConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "config.ts",
											"line": 29,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L29"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2720,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "config.ts",
													"line": 29,
													"character": 22,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L29"
												}
											],
											"signatures": [
												{
													"id": 2721,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 2722,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 2723,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 2724,
																			"name": "reactRouterUserConfig",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "config.ts",
																					"line": 30,
																					"character": 4,
																					"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L30"
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": 2737,
																				"name": "VitePluginConfig",
																				"package": "@react-router/dev"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2724
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "config.ts",
																			"line": 29,
																			"character": 29,
																			"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L29"
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "packages/react-router-dev/config.ts",
																	"qualifiedName": "ConfigPreset"
																},
																"name": "ConfigPreset",
																"package": "@react-router/dev"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "packages/react-router-dev/config.ts",
																			"qualifiedName": "ConfigPreset"
																		},
																		"name": "ConfigPreset",
																		"package": "@react-router/dev"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														]
													}
												}
											]
										}
									}
								},
								{
									"id": 2725,
									"name": "reactRouterConfigResolved",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "config.ts",
											"line": 32,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L32"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2726,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "config.ts",
													"line": 32,
													"character": 30,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L32"
												}
											],
											"signatures": [
												{
													"id": 2727,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 2728,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 2729,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 2730,
																			"name": "reactRouterConfig",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "config.ts",
																					"line": 33,
																					"character": 4,
																					"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L33"
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "packages/react-router-dev/config.ts",
																					"qualifiedName": "ResolvedVitePluginConfig"
																				},
																				"name": "ResolvedVitePluginConfig",
																				"package": "@react-router/dev"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2730
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "config.ts",
																			"line": 32,
																			"character": 37,
																			"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L32"
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														]
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2718,
										2719,
										2725
									]
								}
							],
							"sources": [
								{
									"fileName": "config.ts",
									"line": 27,
									"character": 21,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L27"
								}
							]
						}
					}
				},
				{
					"id": 2731,
					"name": "ServerBundlesFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "config.ts",
							"line": 50,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L50"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2732,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "config.ts",
									"line": 50,
									"character": 36,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L50"
								}
							],
							"signatures": [
								{
									"id": 2733,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2734,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2735,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 2736,
															"name": "branch",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "config.ts",
																	"line": 51,
																	"character": 2,
																	"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L51"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "packages/react-router-dev/config.ts",
																		"qualifiedName": "BranchRoute"
																	},
																	"name": "BranchRoute",
																	"package": "@react-router/dev"
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2736
															]
														}
													],
													"sources": [
														{
															"fileName": "config.ts",
															"line": 50,
															"character": 43,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L50"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 2737,
					"name": "VitePluginConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "config.ts",
							"line": 85,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L85"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2738,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2739,
									"name": "appDirectory",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The path to the "
											},
											{
												"kind": "code",
												"text": "`app`"
											},
											{
												"kind": "text",
												"text": " directory, relative to "
											},
											{
												"kind": "code",
												"text": "`remix.config.js`"
											},
											{
												"kind": "text",
												"text": ". Defaults\nto "
											},
											{
												"kind": "code",
												"text": "`\"app\"`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "config.ts",
											"line": 90,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L90"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2740,
									"name": "basename",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The React Router app basename.  Defaults to "
											},
											{
												"kind": "code",
												"text": "`\"/\"`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "config.ts",
											"line": 126,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L126"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2741,
									"name": "buildDirectory",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The path to the build directory, relative to the project. Defaults to\n"
											},
											{
												"kind": "code",
												"text": "`\"build\"`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "config.ts",
											"line": 131,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L131"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2742,
									"name": "buildEnd",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that is called after the full React Router build is complete."
											}
										]
									},
									"sources": [
										{
											"fileName": "config.ts",
											"line": 135,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L135"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router-dev/config.ts",
											"qualifiedName": "BuildEndHook"
										},
										"name": "BuildEndHook",
										"package": "@react-router/dev"
									}
								},
								{
									"id": 2743,
									"name": "future",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Enabled future flags"
											}
										]
									},
									"sources": [
										{
											"fileName": "config.ts",
											"line": 118,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L118"
										}
									],
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "tuple",
											"elements": [
												{
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": {
															"sourceFileName": "packages/react-router-dev/config.ts",
															"qualifiedName": "FutureConfig"
														},
														"name": "FutureConfig",
														"package": "@react-router/dev"
													}
												}
											]
										},
										"extendsType": {
											"type": "tuple",
											"elements": [
												{
													"type": "intrinsic",
													"name": "never"
												}
											]
										},
										"trueType": {
											"type": "reflection",
											"declaration": {
												"id": 2744,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "config.ts",
														"line": 120,
														"character": 6,
														"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L120"
													}
												],
												"indexSignature": {
													"id": 2745,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"sources": [
														{
															"fileName": "config.ts",
															"line": 120,
															"character": 8,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L120"
														}
													],
													"parameters": [
														{
															"id": 2746,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "never"
													}
												}
											}
										},
										"falseType": {
											"type": "reference",
											"target": {
												"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Partial"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "packages/react-router-dev/config.ts",
														"qualifiedName": "FutureConfig"
													},
													"name": "FutureConfig",
													"package": "@react-router/dev"
												}
											],
											"name": "Partial",
											"package": "typescript"
										}
									}
								},
								{
									"id": 2747,
									"name": "ignoredRouteFiles",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A list of filenames or a glob patterns to match files in the "
											},
											{
												"kind": "code",
												"text": "`app/routes`"
											},
											{
												"kind": "text",
												"text": "\ndirectory that Remix will ignore. Matching files will not be recognized as\nroutes."
											}
										]
									},
									"sources": [
										{
											"fileName": "config.ts",
											"line": 113,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L113"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 2748,
									"name": "prerender",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of URLs to prerender to HTML files at build time.  Can also be a\nfunction returning an array to dynamically generate URLs."
											}
										]
									},
									"sources": [
										{
											"fileName": "config.ts",
											"line": 140,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L140"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2749,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "config.ts",
															"line": 140,
															"character": 31,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L140"
														}
													],
													"signatures": [
														{
															"id": 2750,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "array",
																				"elementType": {
																					"type": "intrinsic",
																					"name": "string"
																				}
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 2751,
									"name": "presets",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of React Router plugin config presets to ease integration with\nother platforms and tools."
											}
										]
									},
									"sources": [
										{
											"fileName": "config.ts",
											"line": 145,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L145"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 2716,
											"name": "Preset",
											"package": "@react-router/dev"
										}
									}
								},
								{
									"id": 2752,
									"name": "routes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function for defining custom routes, in addition to those already defined\nusing the filesystem convention in "
											},
											{
												"kind": "code",
												"text": "`app/routes`"
											},
											{
												"kind": "text",
												"text": ". Both sets of routes will\nbe merged."
											}
										]
									},
									"sources": [
										{
											"fileName": "config.ts",
											"line": 97,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L97"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2753,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "config.ts",
													"line": 97,
													"character": 11,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L97"
												}
											],
											"signatures": [
												{
													"id": 2754,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 2755,
															"name": "defineRoutes",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "packages/react-router-dev/config/routes.ts",
																	"qualifiedName": "DefineRoutesFunction"
																},
																"name": "DefineRoutesFunction",
																"package": "@react-router/dev"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "ReturnType"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "packages/react-router-dev/config/routes.ts",
																			"qualifiedName": "DefineRoutesFunction"
																		},
																		"name": "DefineRoutesFunction",
																		"package": "@react-router/dev"
																	}
																],
																"name": "ReturnType",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "ReturnType"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "packages/react-router-dev/config/routes.ts",
																					"qualifiedName": "DefineRoutesFunction"
																				},
																				"name": "DefineRoutesFunction",
																				"package": "@react-router/dev"
																			}
																		],
																		"name": "ReturnType",
																		"package": "typescript"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														]
													}
												}
											]
										}
									}
								},
								{
									"id": 2756,
									"name": "serverBuildFile",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The file name of the server build output. This file\nshould end in a "
											},
											{
												"kind": "code",
												"text": "`.js`"
											},
											{
												"kind": "text",
												"text": " extension and should be deployed to your server.\nDefaults to "
											},
											{
												"kind": "code",
												"text": "`\"index.js\"`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "config.ts",
											"line": 151,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L151"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2757,
									"name": "serverBundles",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function for assigning routes to different server bundles. This\nfunction should return a server bundle ID which will be used as the\nbundle's directory name within the server build directory."
											}
										]
									},
									"sources": [
										{
											"fileName": "config.ts",
											"line": 157,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L157"
										}
									],
									"type": {
										"type": "reference",
										"target": 2731,
										"name": "ServerBundlesFunction",
										"package": "@react-router/dev"
									}
								},
								{
									"id": 2758,
									"name": "serverModuleFormat",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The output format of the server build. Defaults to \"esm\"."
											}
										]
									},
									"sources": [
										{
											"fileName": "config.ts",
											"line": 106,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L106"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router-dev/config.ts",
											"qualifiedName": "ServerModuleFormat"
										},
										"name": "ServerModuleFormat",
										"package": "@react-router/dev"
									}
								},
								{
									"id": 2759,
									"name": "ssr",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Enable server-side rendering for your application. Disable to use \"SPA\nMode\", which will request the "
											},
											{
												"kind": "code",
												"text": "`/`"
											},
											{
												"kind": "text",
												"text": " path at build-time and save it as an\n"
											},
											{
												"kind": "code",
												"text": "`index.html`"
											},
											{
												"kind": "text",
												"text": " file with your assets so your application can be deployed as a\nSPA without server-rendering. Default's to "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "config.ts",
											"line": 164,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L164"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2739,
										2740,
										2741,
										2742,
										2743,
										2747,
										2748,
										2751,
										2752,
										2756,
										2757,
										2758,
										2759
									]
								}
							],
							"sources": [
								{
									"fileName": "config.ts",
									"line": 85,
									"character": 31,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/config.ts#L85"
								}
							]
						}
					}
				},
				{
					"id": 2760,
					"name": "cloudflareDevProxyVitePlugin",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "vite/cloudflare-dev-proxy.ts",
							"line": 31,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/vite/cloudflare-dev-proxy.ts#L31"
						}
					],
					"signatures": [
						{
							"id": 2761,
							"name": "cloudflareDevProxyVitePlugin",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "vite/cloudflare-dev-proxy.ts",
									"line": 31,
									"character": 44,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/vite/cloudflare-dev-proxy.ts#L31"
								}
							],
							"typeParameter": [
								{
									"id": 2762,
									"name": "Env",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 2763,
									"name": "Cf",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router-dev/vite/cloudflare-dev-proxy.ts",
											"qualifiedName": "CfProperties"
										},
										"name": "CfProperties",
										"package": "@react-router/dev"
									}
								}
							],
							"parameters": [
								{
									"id": 2764,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2765,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 2766,
															"name": "getLoadContext",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "vite/cloudflare-dev-proxy.ts",
																	"line": 35,
																	"character": 2,
																	"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/vite/cloudflare-dev-proxy.ts#L35"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "packages/react-router-dev/vite/cloudflare-dev-proxy.ts",
																	"qualifiedName": "GetLoadContext"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 2762,
																		"name": "Env",
																		"package": "@react-router/dev",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 2763,
																		"name": "Cf",
																		"package": "@react-router/dev",
																		"refersToTypeParameter": true
																	}
																],
																"name": "GetLoadContext",
																"package": "@react-router/dev"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2766
															]
														}
													],
													"sources": [
														{
															"fileName": "vite/cloudflare-dev-proxy.ts",
															"line": 34,
															"character": 3,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/vite/cloudflare-dev-proxy.ts#L34"
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/wrangler@3.64.0_@cloudflare+workers-types@4.20240712.0/node_modules/wrangler/wrangler-dist/cli.d.ts",
													"qualifiedName": "GetPlatformProxyOptions"
												},
												"name": "GetPlatformProxyOptions",
												"package": "wrangler"
											}
										]
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/vite@5.1.3_@types+node@18.19.26/node_modules/vite/dist/node/index.d.ts",
									"qualifiedName": "Plugin"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Plugin",
								"package": "vite"
							}
						}
					]
				},
				{
					"id": 2767,
					"name": "vitePlugin",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "vite/plugin.ts",
							"line": 442,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/vite/plugin.ts#L442"
						}
					],
					"signatures": [
						{
							"id": 2768,
							"name": "vitePlugin",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "vite/plugin.ts",
									"line": 442,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-dev/vite/plugin.ts#L442"
								}
							],
							"parameters": [
								{
									"id": 2769,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 2737,
										"name": "VitePluginConfig",
										"package": "@react-router/dev"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/.pnpm/vite@5.1.3_@types+node@18.19.26/node_modules/vite/dist/node/index.d.ts",
										"qualifiedName": "Plugin"
									},
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "Plugin",
									"package": "vite"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"children": [
						2682
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						2686,
						2715,
						2716,
						2731,
						2737
					]
				},
				{
					"title": "Functions",
					"children": [
						2760,
						2767
					]
				}
			],
			"readme": [
				{
					"kind": "text",
					"text": "# Welcome to Remix!\n\n[Remix](https://remix.run) is a web framework that helps you build better websites with React.\n\nTo get started, open a new shell and run:\n\n"
				},
				{
					"kind": "code",
					"text": "```sh\nnpx create-remix@latest\n```"
				},
				{
					"kind": "text",
					"text": "\n\nThen follow the prompts you see in your terminal.\n\nFor more information about Remix, [visit remix.run](https://remix.run)!"
				}
			]
		},
		{
			"id": 2770,
			"name": "react-router-dom",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"readme": [
				{
					"kind": "text",
					"text": "# React Router DOM\n\nThe "
				},
				{
					"kind": "code",
					"text": "`react-router-dom`"
				},
				{
					"kind": "text",
					"text": " package is deprecated and only kept around for backwards-compatibility. It re-exports everything from the "
				},
				{
					"kind": "code",
					"text": "`react-router`"
				},
				{
					"kind": "text",
					"text": " package - you should convert your applications to import everything from "
				},
				{
					"kind": "code",
					"text": "`react-router`"
				},
				{
					"kind": "text",
					"text": " in v7 and beyond."
				}
			]
		},
		{
			"id": 2771,
			"name": "@react-router/express",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2772,
					"name": "GetLoadContextFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that returns the value to use as "
							},
							{
								"kind": "code",
								"text": "`context`"
							},
							{
								"kind": "text",
								"text": " in route "
							},
							{
								"kind": "code",
								"text": "`loader`"
							},
							{
								"kind": "text",
								"text": " and\n"
							},
							{
								"kind": "code",
								"text": "`action`"
							},
							{
								"kind": "text",
								"text": " functions.\n\nYou can think of this as an escape hatch that allows you to pass\nenvironment/platform-specific values through to your loader/action, such as\nvalues that are generated by Express middleware like "
							},
							{
								"kind": "code",
								"text": "`req.session`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "server.ts",
							"line": 21,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-express/server.ts#L21"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2773,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "server.ts",
									"line": 21,
									"character": 37,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-express/server.ts#L21"
								}
							],
							"signatures": [
								{
									"id": 2774,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2775,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+express@4.17.21/node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"name": "express.Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 2776,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+express@4.17.21/node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"name": "express.Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 139,
														"name": "AppLoadContext",
														"package": "react-router"
													}
												],
												"name": "Promise",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 139,
												"name": "AppLoadContext",
												"package": "react-router"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 2777,
					"name": "RequestHandler",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "server.ts",
							"line": 26,
							"character": 12,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-express/server.ts#L26"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2778,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "server.ts",
									"line": 26,
									"character": 29,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-express/server.ts#L26"
								}
							],
							"signatures": [
								{
									"id": 2779,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2780,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+express@4.17.21/node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"name": "express.Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 2781,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+express@4.17.21/node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"name": "express.Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 2782,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+express@4.17.21/node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "express.NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 2783,
					"name": "createRequestHandler",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "server.ts",
							"line": 35,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-express/server.ts#L35"
						}
					],
					"signatures": [
						{
							"id": 2784,
							"name": "createRequestHandler",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a request handler for Express that serves the response using Remix."
									}
								]
							},
							"sources": [
								{
									"fileName": "server.ts",
									"line": 35,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-express/server.ts#L35"
								}
							],
							"parameters": [
								{
									"id": 2785,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2786,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 2787,
													"name": "build",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "server.ts",
															"line": 40,
															"character": 2,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-express/server.ts#L40"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": 1743,
																"name": "ServerBuild",
																"package": "react-router"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2788,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "server.ts",
																			"line": 40,
																			"character": 24,
																			"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-express/server.ts#L40"
																		}
																	],
																	"signatures": [
																		{
																			"id": 2789,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "server.ts",
																					"line": 40,
																					"character": 24,
																					"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-express/server.ts#L40"
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 1743,
																						"name": "ServerBuild",
																						"package": "react-router"
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 2790,
													"name": "getLoadContext",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "server.ts",
															"line": 41,
															"character": 2,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-express/server.ts#L41"
														}
													],
													"type": {
														"type": "reference",
														"target": 2772,
														"name": "GetLoadContextFunction",
														"package": "@react-router/express"
													}
												},
												{
													"id": 2791,
													"name": "mode",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "server.ts",
															"line": 42,
															"character": 2,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-express/server.ts#L42"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "process.env.NODE_ENV"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2787,
														2790,
														2791
													]
												}
											],
											"sources": [
												{
													"fileName": "server.ts",
													"line": 39,
													"character": 3,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-express/server.ts#L39"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 2777,
								"name": "RequestHandler",
								"package": "@react-router/express"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type Aliases",
					"children": [
						2772,
						2777
					]
				},
				{
					"title": "Functions",
					"children": [
						2783
					]
				}
			],
			"readme": [
				{
					"kind": "text",
					"text": "# Welcome to Remix!\n\n[Remix](https://remix.run) is a web framework that helps you build better websites with React.\n\nTo get started, open a new shell and run:\n\n"
				},
				{
					"kind": "code",
					"text": "```sh\nnpx create-remix@latest\n```"
				},
				{
					"kind": "text",
					"text": "\n\nThen follow the prompts you see in your terminal.\n\nFor more information about Remix, [visit remix.run](https://remix.run)!"
				}
			]
		},
		{
			"id": 2792,
			"name": "@react-router/node",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2793,
					"name": "NodeOnDiskFile",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 2794,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "react-router-node/upload/fileUploadHandler.ts",
									"line": 170,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L170"
								}
							],
							"signatures": [
								{
									"id": 2795,
									"name": "new NodeOnDiskFile",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "react-router-node/upload/fileUploadHandler.ts",
											"line": 170,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L170"
										}
									],
									"parameters": [
										{
											"id": 2796,
											"name": "filepath",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2797,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2798,
											"name": "slicer",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2799,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 2800,
															"name": "end",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "react-router-node/upload/fileUploadHandler.ts",
																	"line": 173,
																	"character": 38,
																	"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L173"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2801,
															"name": "start",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "react-router-node/upload/fileUploadHandler.ts",
																	"line": 173,
																	"character": 23,
																	"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L173"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2800,
																2801
															]
														}
													],
													"sources": [
														{
															"fileName": "react-router-node/upload/fileUploadHandler.ts",
															"line": 173,
															"character": 21,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L173"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2793,
										"name": "NodeOnDiskFile",
										"package": "@react-router/node"
									}
								}
							]
						},
						{
							"id": 2802,
							"name": "filepath",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "react-router-node/upload/fileUploadHandler.ts",
									"line": 171,
									"character": 12,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L171"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2803,
							"name": "lastModified",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "react-router-node/upload/fileUploadHandler.ts",
									"line": 163,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L163"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0",
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "Omit.lastModified"
							}
						},
						{
							"id": 2804,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "react-router-node/upload/fileUploadHandler.ts",
									"line": 162,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L162"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "Omit.name"
							}
						},
						{
							"id": 2805,
							"name": "prototype",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "react-router-node/upload/fileUploadHandler.ts",
									"line": 168,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L168"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "File"
								},
								"name": "File",
								"package": "typescript"
							},
							"defaultValue": "File.prototype"
						},
						{
							"id": 2806,
							"name": "slicer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "react-router-node/upload/fileUploadHandler.ts",
									"line": 173,
									"character": 12,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L173"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2807,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2808,
											"name": "end",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "react-router-node/upload/fileUploadHandler.ts",
													"line": 173,
													"character": 38,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L173"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2809,
											"name": "start",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "react-router-node/upload/fileUploadHandler.ts",
													"line": 173,
													"character": 23,
													"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L173"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2808,
												2809
											]
										}
									],
									"sources": [
										{
											"fileName": "react-router-node/upload/fileUploadHandler.ts",
											"line": 173,
											"character": 21,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L173"
										}
									]
								}
							}
						},
						{
							"id": 2810,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "react-router-node/upload/fileUploadHandler.ts",
									"line": 172,
									"character": 11,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L172"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "Omit.type"
							}
						},
						{
							"id": 2811,
							"name": "webkitRelativePath",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "react-router-node/upload/fileUploadHandler.ts",
									"line": 164,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L164"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\"",
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "Omit.webkitRelativePath"
							}
						},
						{
							"id": 2812,
							"name": "[toStringTag]",
							"variant": "declaration",
							"kind": 262144,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "react-router-node/upload/fileUploadHandler.ts",
									"line": 241,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L241"
								}
							],
							"getSignature": {
								"id": 2813,
								"name": "[toStringTag]",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"sources": [
									{
										"fileName": "react-router-node/upload/fileUploadHandler.ts",
										"line": 241,
										"character": 13,
										"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L241"
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2814,
							"name": "size",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"sources": [
								{
									"fileName": "react-router-node/upload/fileUploadHandler.ts",
									"line": 178,
									"character": 6,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L178"
								}
							],
							"getSignature": {
								"id": 2815,
								"name": "size",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"sources": [
									{
										"fileName": "react-router-node/upload/fileUploadHandler.ts",
										"line": 178,
										"character": 6,
										"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L178"
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "number"
								},
								"implementationOf": {
									"type": "reference",
									"target": -1,
									"name": "Omit.size"
								}
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "Omit.size"
							}
						},
						{
							"id": 2816,
							"name": "arrayBuffer",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "react-router-node/upload/fileUploadHandler.ts",
									"line": 209,
									"character": 8,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L209"
								}
							],
							"signatures": [
								{
									"id": 2817,
									"name": "arrayBuffer",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "react-router-node/upload/fileUploadHandler.ts",
											"line": 209,
											"character": 8,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L209"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ArrayBuffer"
												},
												"name": "ArrayBuffer",
												"package": "typescript"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"implementationOf": {
										"type": "reference",
										"target": -1,
										"name": "Omit.arrayBuffer"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "Omit.arrayBuffer"
							}
						},
						{
							"id": 2818,
							"name": "getFilePath",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "react-router-node/upload/fileUploadHandler.ts",
									"line": 248,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L248"
								}
							],
							"signatures": [
								{
									"id": 2819,
									"name": "getFilePath",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "react-router-node/upload/fileUploadHandler.ts",
											"line": 248,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L248"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 2820,
							"name": "remove",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "react-router-node/upload/fileUploadHandler.ts",
									"line": 245,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L245"
								}
							],
							"signatures": [
								{
									"id": 2821,
									"name": "remove",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "react-router-node/upload/fileUploadHandler.ts",
											"line": 245,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L245"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2822,
							"name": "slice",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "react-router-node/upload/fileUploadHandler.ts",
									"line": 189,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L189"
								}
							],
							"signatures": [
								{
									"id": 2823,
									"name": "slice",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "react-router-node/upload/fileUploadHandler.ts",
											"line": 189,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L189"
										}
									],
									"parameters": [
										{
											"id": 2824,
											"name": "start",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2825,
											"name": "end",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2826,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "Blob"
										},
										"name": "Blob",
										"package": "typescript"
									},
									"implementationOf": {
										"type": "reference",
										"target": -1,
										"name": "Omit.slice"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "Omit.slice"
							}
						},
						{
							"id": 2827,
							"name": "stream",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "react-router-node/upload/fileUploadHandler.ts",
									"line": 225,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L225"
								},
								{
									"fileName": "react-router-node/upload/fileUploadHandler.ts",
									"line": 226,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L226"
								},
								{
									"fileName": "react-router-node/upload/fileUploadHandler.ts",
									"line": 227,
									"character": 2,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L227"
								}
							],
							"signatures": [
								{
									"id": 2828,
									"name": "stream",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "react-router-node/upload/fileUploadHandler.ts",
											"line": 225,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L225"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "ReadableStream"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ReadableStream",
										"package": "typescript"
									},
									"implementationOf": {
										"type": "reference",
										"target": -1,
										"name": "Omit.stream"
									}
								},
								{
									"id": 2829,
									"name": "stream",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "react-router-node/upload/fileUploadHandler.ts",
											"line": 226,
											"character": 2,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L226"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
											"qualifiedName": "__global.NodeJS.ReadableStream"
										},
										"name": "ReadableStream",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.ReadableStream"
									},
									"implementationOf": {
										"type": "reference",
										"target": -1,
										"name": "Omit.stream"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "Omit.stream"
							}
						},
						{
							"id": 2830,
							"name": "text",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "react-router-node/upload/fileUploadHandler.ts",
									"line": 237,
									"character": 8,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L237"
								}
							],
							"signatures": [
								{
									"id": 2831,
									"name": "text",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "react-router-node/upload/fileUploadHandler.ts",
											"line": 237,
											"character": 8,
											"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L237"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"implementationOf": {
										"type": "reference",
										"target": -1,
										"name": "Omit.text"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "Omit.text"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								2794
							]
						},
						{
							"title": "Properties",
							"children": [
								2802,
								2803,
								2804,
								2805,
								2806,
								2810,
								2811
							]
						},
						{
							"title": "Accessors",
							"children": [
								2812,
								2814
							]
						},
						{
							"title": "Methods",
							"children": [
								2816,
								2818,
								2820,
								2822,
								2827,
								2830
							]
						}
					],
					"sources": [
						{
							"fileName": "react-router-node/upload/fileUploadHandler.ts",
							"line": 161,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L161"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "File"
									},
									"name": "File",
									"package": "typescript"
								},
								{
									"type": "literal",
									"value": "constructor"
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					]
				},
				{
					"id": 2832,
					"name": "createCookie",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "react-router-node/implementations.ts",
							"line": 10,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/implementations.ts#L10"
						}
					],
					"signatures": [
						{
							"id": 2833,
							"name": "createCookie",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "react-router-node/implementations.ts",
									"line": 10,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/implementations.ts#L10"
								}
							],
							"parameters": [
								{
									"id": 2834,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2835,
									"name": "cookieOptions",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 2000,
										"name": "CookieOptions",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 150,
								"name": "Cookie",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2836,
					"name": "createCookieSessionStorage",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "react-router-node/implementations.ts",
							"line": 11,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/implementations.ts#L11"
						}
					],
					"signatures": [
						{
							"id": 2837,
							"name": "createCookieSessionStorage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "react-router-node/implementations.ts",
									"line": 11,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/implementations.ts#L11"
								}
							],
							"typeParameter": [
								{
									"id": 2838,
									"name": "Data",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": 1789,
										"name": "SessionData",
										"package": "react-router"
									}
								},
								{
									"id": 2839,
									"name": "FlashData",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": 2838,
										"name": "Data",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								}
							],
							"parameters": [
								{
									"id": 2840,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
											"qualifiedName": "CookieSessionStorageOptions"
										},
										"name": "CookieSessionStorageOptions",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1817,
								"typeArguments": [
									{
										"type": "reference",
										"target": 2838,
										"name": "Data",
										"package": "react-router",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 2839,
										"name": "FlashData",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								],
								"name": "SessionStorage",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2841,
					"name": "createFileSessionStorage",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "react-router-node/sessions/fileStorage.ts",
							"line": 33,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/sessions/fileStorage.ts#L33"
						}
					],
					"signatures": [
						{
							"id": 2842,
							"name": "createFileSessionStorage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a SessionStorage that stores session data on a filesystem.\n\nThe advantage of using this instead of cookie session storage is that\nfiles may contain much more data than cookies."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://remix.run/utils/sessions#createfilesessionstorage-node"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "react-router-node/sessions/fileStorage.ts",
									"line": 33,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/sessions/fileStorage.ts#L33"
								}
							],
							"typeParameter": [
								{
									"id": 2843,
									"name": "Data",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": 1789,
										"name": "SessionData",
										"package": "react-router"
									}
								},
								{
									"id": 2844,
									"name": "FlashData",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": 2843,
										"name": "Data",
										"package": "@react-router/node",
										"refersToTypeParameter": true
									}
								}
							],
							"parameters": [
								{
									"id": 2845,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router-node/sessions/fileStorage.ts",
											"qualifiedName": "FileSessionStorageOptions"
										},
										"name": "FileSessionStorageOptions",
										"package": "@react-router/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1817,
								"typeArguments": [
									{
										"type": "reference",
										"target": 2843,
										"name": "Data",
										"package": "@react-router/node",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 2844,
										"name": "FlashData",
										"package": "@react-router/node",
										"refersToTypeParameter": true
									}
								],
								"name": "SessionStorage",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2846,
					"name": "createMemorySessionStorage",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "react-router-node/implementations.ts",
							"line": 14,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/implementations.ts#L14"
						}
					],
					"signatures": [
						{
							"id": 2847,
							"name": "createMemorySessionStorage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "react-router-node/implementations.ts",
									"line": 14,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/implementations.ts#L14"
								}
							],
							"typeParameter": [
								{
									"id": 2848,
									"name": "Data",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": 1789,
										"name": "SessionData",
										"package": "react-router"
									}
								},
								{
									"id": 2849,
									"name": "FlashData",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": 2848,
										"name": "Data",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								}
							],
							"parameters": [
								{
									"id": 2850,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
											"qualifiedName": "MemorySessionStorageOptions"
										},
										"name": "MemorySessionStorageOptions",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1817,
								"typeArguments": [
									{
										"type": "reference",
										"target": 2848,
										"name": "Data",
										"package": "react-router",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 2849,
										"name": "FlashData",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								],
								"name": "SessionStorage",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2851,
					"name": "createReadableStreamFromReadable",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "react-router-node/stream.ts",
							"line": 66,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/stream.ts#L66"
						}
					],
					"signatures": [
						{
							"id": 2852,
							"name": "createReadableStreamFromReadable",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "react-router-node/stream.ts",
									"line": 66,
									"character": 48,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/stream.ts#L66"
								}
							],
							"parameters": [
								{
									"id": 2853,
									"name": "source",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/stream.d.ts",
													"qualifiedName": "internal.Readable"
												},
												"name": "Readable",
												"package": "@types/node",
												"qualifiedName": "internal.Readable"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2854,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 2855,
															"name": "readableHighWaterMark",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "react-router-node/stream.ts",
																	"line": 67,
																	"character": 23,
																	"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/stream.ts#L67"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2855
															]
														}
													],
													"sources": [
														{
															"fileName": "react-router-node/stream.ts",
															"line": 67,
															"character": 21,
															"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/stream.ts#L67"
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "ReadableStream"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Uint8Array"
										},
										"name": "Uint8Array",
										"package": "typescript"
									}
								],
								"name": "ReadableStream",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2856,
					"name": "createSessionStorage",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "react-router-node/implementations.ts",
							"line": 13,
							"character": 13,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/implementations.ts#L13"
						}
					],
					"signatures": [
						{
							"id": 2857,
							"name": "createSessionStorage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "react-router-node/implementations.ts",
									"line": 13,
									"character": 13,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/implementations.ts#L13"
								}
							],
							"typeParameter": [
								{
									"id": 2858,
									"name": "Data",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": 1789,
										"name": "SessionData",
										"package": "react-router"
									}
								},
								{
									"id": 2859,
									"name": "FlashData",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "reference",
										"target": 2858,
										"name": "Data",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								}
							],
							"parameters": [
								{
									"id": 2860,
									"name": "strategy",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1792,
										"typeArguments": [
											{
												"type": "reference",
												"target": 2858,
												"name": "Data",
												"package": "react-router",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 2859,
												"name": "FlashData",
												"package": "react-router",
												"refersToTypeParameter": true
											}
										],
										"name": "SessionIdStorageStrategy",
										"package": "react-router"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1817,
								"typeArguments": [
									{
										"type": "reference",
										"target": 2858,
										"name": "Data",
										"package": "react-router",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 2859,
										"name": "FlashData",
										"package": "react-router",
										"refersToTypeParameter": true
									}
								],
								"name": "SessionStorage",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2861,
					"name": "installGlobals",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "react-router-node/globals.ts",
							"line": 35,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/globals.ts#L35"
						}
					],
					"signatures": [
						{
							"id": 2862,
							"name": "installGlobals",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "react-router-node/globals.ts",
									"line": 35,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/globals.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2863,
					"name": "readableStreamToString",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "react-router-node/stream.ts",
							"line": 46,
							"character": 22,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/stream.ts#L46"
						}
					],
					"signatures": [
						{
							"id": 2864,
							"name": "readableStreamToString",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "react-router-node/stream.ts",
									"line": 46,
									"character": 22,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/stream.ts#L46"
								}
							],
							"parameters": [
								{
									"id": 2865,
									"name": "stream",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "ReadableStream"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										],
										"name": "ReadableStream",
										"package": "typescript"
									}
								},
								{
									"id": 2866,
									"name": "encoding",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/buffer.d.ts",
											"qualifiedName": "__global.BufferEncoding"
										},
										"name": "BufferEncoding",
										"package": "@types/node",
										"qualifiedName": "__global.BufferEncoding"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2867,
					"name": "unstable_createFileUploadHandler",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "react-router-node/upload/fileUploadHandler.ts",
							"line": 92,
							"character": 16,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L92"
						}
					],
					"signatures": [
						{
							"id": 2868,
							"name": "unstable_createFileUploadHandler",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "react-router-node/upload/fileUploadHandler.ts",
									"line": 92,
									"character": 16,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/upload/fileUploadHandler.ts#L92"
								}
							],
							"parameters": [
								{
									"id": 2869,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
											"qualifiedName": "FileUploadHandlerOptions"
										},
										"name": "FileUploadHandlerOptions",
										"package": "@react-router/node"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": 2234,
								"name": "UploadHandler",
								"package": "react-router"
							}
						}
					]
				},
				{
					"id": 2870,
					"name": "writeAsyncIterableToWritable",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "react-router-node/stream.ts",
							"line": 31,
							"character": 22,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/stream.ts#L31"
						}
					],
					"signatures": [
						{
							"id": 2871,
							"name": "writeAsyncIterableToWritable",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "react-router-node/stream.ts",
									"line": 31,
									"character": 22,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/stream.ts#L31"
								}
							],
							"parameters": [
								{
									"id": 2872,
									"name": "iterable",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2018.asynciterable.d.ts",
											"qualifiedName": "AsyncIterable"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										],
										"name": "AsyncIterable",
										"package": "typescript"
									}
								},
								{
									"id": 2873,
									"name": "writable",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/stream.d.ts",
											"qualifiedName": "internal.Writable"
										},
										"name": "Writable",
										"package": "@types/node",
										"qualifiedName": "internal.Writable"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2874,
					"name": "writeReadableStreamToWritable",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "react-router-node/stream.ts",
							"line": 4,
							"character": 22,
							"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/stream.ts#L4"
						}
					],
					"signatures": [
						{
							"id": 2875,
							"name": "writeReadableStreamToWritable",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "react-router-node/stream.ts",
									"line": 4,
									"character": 22,
									"url": "https://github.com/remix-run/react-router/blob/626bc840a082357bab5846847556d0d70e4868ea/packages/react-router-node/stream.ts#L4"
								}
							],
							"parameters": [
								{
									"id": 2876,
									"name": "stream",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "ReadableStream"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "ReadableStream",
										"package": "typescript"
									}
								},
								{
									"id": 2877,
									"name": "writable",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/stream.d.ts",
											"qualifiedName": "internal.Writable"
										},
										"name": "Writable",
										"package": "@types/node",
										"qualifiedName": "internal.Writable"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						2793
					]
				},
				{
					"title": "Functions",
					"children": [
						2832,
						2836,
						2841,
						2846,
						2851,
						2856,
						2861,
						2863,
						2867,
						2870,
						2874
					]
				}
			],
			"readme": [
				{
					"kind": "text",
					"text": "# Welcome to Remix!\n\n[Remix](https://remix.run) is a web framework that helps you build better websites with React.\n\nTo get started, open a new shell and run:\n\n"
				},
				{
					"kind": "code",
					"text": "```sh\nnpx create-remix@latest\n```"
				},
				{
					"kind": "text",
					"text": "\n\nThen follow the prompts you see in your terminal.\n\nFor more information about Remix, [visit remix.run](https://remix.run)!"
				}
			]
		},
		{
			"id": 2878,
			"name": "@react-router/serve",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"readme": [
				{
					"kind": "text",
					"text": "# Welcome to Remix!\n\n[Remix](https://remix.run) is a web framework that helps you build better websites with React.\n\nTo get started, open a new shell and run:\n\n"
				},
				{
					"kind": "code",
					"text": "```sh\nnpx create-remix@latest\n```"
				},
				{
					"kind": "text",
					"text": "\n\nThen follow the prompts you see in your terminal.\n\nFor more information about Remix, [visit remix.run](https://remix.run)!"
				}
			]
		}
	],
	"packageName": "@remix-run/react-router",
	"readme": [
		{
			"kind": "text",
			"text": "# Welcome to React Router &middot; [![npm package][npm-badge]][npm] [![build][build-badge]][build]\n\n[npm-badge]: https://img.shields.io/npm/v/react-router-dom.svg?style=flat-square\n[npm]: https://www.npmjs.org/package/react-router-dom\n[build-badge]: https://img.shields.io/github/actions/workflow/status/remix-run/react-router/test.yml?branch=dev&style=square\n[build]: https://github.com/remix-run/react-router/actions/workflows/test.yml\n\nReact Router is a lightweight, fully-featured routing library for the [React](https://reactjs.org) JavaScript library. React Router runs anywhere React runs; on the web, on the server with node.js, or on any other Javascript platform that supports the [Web Fetch API][fetch-api].\n\nIf you're new to React Router, we recommend you start with [the tutorial](https://reactrouter.com/en/main/start/tutorial).\n\nIf you're migrating to v6 from v5 (or v4, which is the same as v5), check out [the migration guide](/docs/upgrading/v5.md). If you're migrating from Reach Router, check out [the migration guide for Reach Router](/docs/upgrading/reach.md). If you need to find the code for v5, [it is on the "
		},
		{
			"kind": "code",
			"text": "`v5`"
		},
		{
			"kind": "text",
			"text": " branch](https://github.com/remix-run/react-router/tree/v5).\n\nDocumentation for v6 can be found [on our website](https://reactrouter.com/).\n\n## Contributing\n\nThere are many different ways to contribute to React Router's development. If you're interested, check out [our contributing guidelines](CONTRIBUTING.md) to learn how you can get involved.\n\n## Packages\n\nThis repository is a monorepo containing the following packages:\n\n- ["
		},
		{
			"kind": "code",
			"text": "`@react-router/dev`"
		},
		{
			"kind": "text",
			"text": "](/packages/react-router-dev)\n- ["
		},
		{
			"kind": "code",
			"text": "`@react-router/express`"
		},
		{
			"kind": "text",
			"text": "](/packages/react-router-express)\n- ["
		},
		{
			"kind": "code",
			"text": "`@react-router/node`"
		},
		{
			"kind": "text",
			"text": "](/packages/react-router-node)\n- ["
		},
		{
			"kind": "code",
			"text": "`@react-router/serve`"
		},
		{
			"kind": "text",
			"text": "](/packages/react-router-serve)\n- ["
		},
		{
			"kind": "code",
			"text": "`react-router`"
		},
		{
			"kind": "text",
			"text": "](/packages/react-router)\n- ["
		},
		{
			"kind": "code",
			"text": "`react-router-dom`"
		},
		{
			"kind": "text",
			"text": "](/packages/react-router-dom)\n\n## Changes\n\nDetailed release notes for a given version can be found [on our releases page](https://github.com/remix-run/react-router/releases).\n\n## Funding\n\nYou may provide financial support for this project by donating [via Open Collective](https://opencollective.com/react-router). Thank you for your support!\n\n## About\n\nReact Router is developed and maintained by [Remix Software](https://remix.run) and many [amazing contributors](https://github.com/remix-run/react-router/graphs/contributors).\n\n[fetch-api]: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"
		}
	],
	"symbolIdMap": {
		"1": {
			"sourceFileName": "packages/react-router/index.ts",
			"qualifiedName": ""
		},
		"2": {
			"sourceFileName": "packages/react-router/index.ts",
			"qualifiedName": "createRoutesFromElements"
		},
		"3": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Action"
		},
		"4": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Action.Pop"
		},
		"5": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Action.Push"
		},
		"6": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Action.Replace"
		},
		"7": {
			"sourceFileName": "packages/react-router/lib/server-runtime/mode.ts",
			"qualifiedName": "ServerMode"
		},
		"8": {
			"sourceFileName": "packages/react-router/lib/server-runtime/mode.ts",
			"qualifiedName": "ServerMode.Development"
		},
		"9": {
			"sourceFileName": "packages/react-router/lib/server-runtime/mode.ts",
			"qualifiedName": "ServerMode.Production"
		},
		"10": {
			"sourceFileName": "packages/react-router/lib/server-runtime/mode.ts",
			"qualifiedName": "ServerMode.Test"
		},
		"11": {
			"sourceFileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
			"qualifiedName": "MaxPartSizeExceededError"
		},
		"12": {
			"sourceFileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
			"qualifiedName": "MaxPartSizeExceededError.__constructor"
		},
		"13": {
			"sourceFileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
			"qualifiedName": "MaxPartSizeExceededError"
		},
		"14": {
			"sourceFileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
			"qualifiedName": "field"
		},
		"15": {
			"sourceFileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
			"qualifiedName": "maxBytes"
		},
		"16": {
			"sourceFileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
			"qualifiedName": "MaxPartSizeExceededError.field"
		},
		"17": {
			"sourceFileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
			"qualifiedName": "MaxPartSizeExceededError.maxBytes"
		},
		"18": {
			"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Error.message"
		},
		"19": {
			"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Error.name"
		},
		"20": {
			"sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Error.stack"
		},
		"21": {
			"sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
			"qualifiedName": "__global.ErrorConstructor.prepareStackTrace"
		},
		"22": {
			"sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
			"qualifiedName": "__type"
		},
		"23": {
			"sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
			"qualifiedName": "__type"
		},
		"24": {
			"sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
			"qualifiedName": "err"
		},
		"25": {
			"sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
			"qualifiedName": "stackTraces"
		},
		"26": {
			"sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
			"qualifiedName": "__global.ErrorConstructor.stackTraceLimit"
		},
		"27": {
			"sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
			"qualifiedName": "__global.ErrorConstructor.captureStackTrace"
		},
		"28": {
			"sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
			"qualifiedName": "__global.ErrorConstructor.captureStackTrace"
		},
		"29": {
			"sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
			"qualifiedName": "targetObject"
		},
		"30": {
			"sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
			"qualifiedName": "constructorOpt"
		},
		"31": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ErrorResponseImpl"
		},
		"32": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ErrorResponseImpl.__constructor"
		},
		"33": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ErrorResponseImpl"
		},
		"34": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "status"
		},
		"35": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "statusText"
		},
		"36": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "data"
		},
		"37": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "internal"
		},
		"38": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ErrorResponseImpl.data"
		},
		"39": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ErrorResponseImpl.error"
		},
		"40": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ErrorResponseImpl.internal"
		},
		"41": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ErrorResponseImpl.status"
		},
		"42": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ErrorResponseImpl.statusText"
		},
		"43": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "RemixErrorBoundary"
		},
		"44": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "RemixErrorBoundary.__constructor"
		},
		"45": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "RemixErrorBoundary"
		},
		"46": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "props"
		},
		"47": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.Component.context"
		},
		"48": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.Component.props"
		},
		"49": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.Component.refs"
		},
		"50": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"51": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type.__index"
		},
		"53": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.Component.state"
		},
		"54": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.Component.contextType"
		},
		"55": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.UNSAFE_componentWillMount"
		},
		"56": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.UNSAFE_componentWillMount"
		},
		"57": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
		},
		"58": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
		},
		"59": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextProps"
		},
		"60": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextContext"
		},
		"61": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.UNSAFE_componentWillUpdate"
		},
		"62": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.UNSAFE_componentWillUpdate"
		},
		"63": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextProps"
		},
		"64": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextState"
		},
		"65": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextContext"
		},
		"66": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ComponentLifecycle.componentDidCatch"
		},
		"67": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ComponentLifecycle.componentDidCatch"
		},
		"68": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "error"
		},
		"69": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "errorInfo"
		},
		"70": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ComponentLifecycle.componentDidMount"
		},
		"71": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ComponentLifecycle.componentDidMount"
		},
		"72": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.NewLifecycle.componentDidUpdate"
		},
		"73": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.NewLifecycle.componentDidUpdate"
		},
		"74": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "prevProps"
		},
		"75": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "prevState"
		},
		"76": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "snapshot"
		},
		"77": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.componentWillMount"
		},
		"78": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.componentWillMount"
		},
		"79": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.componentWillReceiveProps"
		},
		"80": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.componentWillReceiveProps"
		},
		"81": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextProps"
		},
		"82": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextContext"
		},
		"83": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ComponentLifecycle.componentWillUnmount"
		},
		"84": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ComponentLifecycle.componentWillUnmount"
		},
		"85": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.componentWillUpdate"
		},
		"86": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DeprecatedLifecycle.componentWillUpdate"
		},
		"87": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextProps"
		},
		"88": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextState"
		},
		"89": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextContext"
		},
		"90": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.Component.forceUpdate"
		},
		"91": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.Component.forceUpdate"
		},
		"92": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "callback"
		},
		"93": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"94": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"95": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.NewLifecycle.getSnapshotBeforeUpdate"
		},
		"96": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.NewLifecycle.getSnapshotBeforeUpdate"
		},
		"97": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "prevProps"
		},
		"98": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "prevState"
		},
		"99": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "RemixErrorBoundary.render"
		},
		"100": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "RemixErrorBoundary.render"
		},
		"101": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.Component.setState"
		},
		"102": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.Component.setState"
		},
		"103": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "K"
		},
		"104": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "state"
		},
		"105": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"106": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"107": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "prevState"
		},
		"108": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"109": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "callback"
		},
		"110": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"111": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"112": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ComponentLifecycle.shouldComponentUpdate"
		},
		"113": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ComponentLifecycle.shouldComponentUpdate"
		},
		"114": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextProps"
		},
		"115": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextState"
		},
		"116": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nextContext"
		},
		"117": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "RemixErrorBoundary.getDerivedStateFromError"
		},
		"118": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "RemixErrorBoundary.getDerivedStateFromError"
		},
		"119": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "error"
		},
		"120": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "__object"
		},
		"121": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "__object.error"
		},
		"122": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "RemixErrorBoundary.getDerivedStateFromProps"
		},
		"123": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "RemixErrorBoundary.getDerivedStateFromProps"
		},
		"124": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "props"
		},
		"125": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "state"
		},
		"126": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "__object"
		},
		"127": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "__object.error"
		},
		"128": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errorBoundaries.tsx",
			"qualifiedName": "__object.location"
		},
		"129": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ActionFunction"
		},
		"130": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ActionFunction.Context"
		},
		"131": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ActionFunction"
		},
		"132": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "args"
		},
		"133": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "handlerCtx"
		},
		"134": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ActionFunctionArgs"
		},
		"135": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataFunctionArgs.context"
		},
		"136": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataFunctionArgs.params"
		},
		"137": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataFunctionArgs.request"
		},
		"138": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ActionFunctionArgs.Context"
		},
		"139": {
			"sourceFileName": "packages/react-router/lib/server-runtime/data.ts",
			"qualifiedName": "AppLoadContext"
		},
		"140": {
			"sourceFileName": "packages/react-router/lib/server-runtime/data.ts",
			"qualifiedName": "AppLoadContext.__index"
		},
		"142": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "AwaitProps"
		},
		"143": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "AwaitProps.children"
		},
		"144": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "AwaitProps.errorElement"
		},
		"145": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "AwaitProps.resolve"
		},
		"146": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "BrowserRouterProps"
		},
		"147": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "BrowserRouterProps.basename"
		},
		"148": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "BrowserRouterProps.children"
		},
		"149": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "BrowserRouterProps.window"
		},
		"150": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "Cookie"
		},
		"151": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "Cookie.expires"
		},
		"152": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "Cookie.isSigned"
		},
		"153": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "Cookie.name"
		},
		"154": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "Cookie.parse"
		},
		"155": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "Cookie.parse"
		},
		"156": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "cookieHeader"
		},
		"157": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "options"
		},
		"158": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "Cookie.serialize"
		},
		"159": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "Cookie.serialize"
		},
		"160": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "value"
		},
		"161": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "options"
		},
		"162": {
			"sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
			"qualifiedName": "CookieParseOptions"
		},
		"163": {
			"sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
			"qualifiedName": "CookieParseOptions.decode"
		},
		"164": {
			"sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
			"qualifiedName": "CookieParseOptions.decode"
		},
		"165": {
			"sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
			"qualifiedName": "value"
		},
		"166": {
			"sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
			"qualifiedName": "CookieSerializeOptions"
		},
		"167": {
			"sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
			"qualifiedName": "CookieSerializeOptions.domain"
		},
		"168": {
			"sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
			"qualifiedName": "CookieSerializeOptions.expires"
		},
		"169": {
			"sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
			"qualifiedName": "CookieSerializeOptions.httpOnly"
		},
		"170": {
			"sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
			"qualifiedName": "CookieSerializeOptions.maxAge"
		},
		"171": {
			"sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
			"qualifiedName": "CookieSerializeOptions.partitioned"
		},
		"172": {
			"sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
			"qualifiedName": "CookieSerializeOptions.path"
		},
		"173": {
			"sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
			"qualifiedName": "CookieSerializeOptions.priority"
		},
		"174": {
			"sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
			"qualifiedName": "CookieSerializeOptions.sameSite"
		},
		"175": {
			"sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
			"qualifiedName": "CookieSerializeOptions.secure"
		},
		"176": {
			"sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
			"qualifiedName": "CookieSerializeOptions.encode"
		},
		"177": {
			"sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
			"qualifiedName": "CookieSerializeOptions.encode"
		},
		"178": {
			"sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
			"qualifiedName": "value"
		},
		"179": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "CookieSignatureOptions"
		},
		"180": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "CookieSignatureOptions.secrets"
		},
		"181": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "DataRouteMatch"
		},
		"182": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.params"
		},
		"183": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.pathname"
		},
		"184": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.pathnameBase"
		},
		"185": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.route"
		},
		"186": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "EntryContext"
		},
		"187": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "FrameworkContextObject.abortDelay"
		},
		"188": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "FrameworkContextObject.criticalCss"
		},
		"189": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "FrameworkContextObject.future"
		},
		"190": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "FrameworkContextObject.isSpaMode"
		},
		"191": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "FrameworkContextObject.manifest"
		},
		"192": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "FrameworkContextObject.renderMeta"
		},
		"193": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type"
		},
		"194": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type.didRenderScripts"
		},
		"195": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type.streamCache"
		},
		"196": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type"
		},
		"197": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type.error"
		},
		"198": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type.result"
		},
		"199": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type"
		},
		"200": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type.done"
		},
		"201": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type.value"
		},
		"202": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "FrameworkContextObject.routeModules"
		},
		"203": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "EntryContext.serverHandoffStream"
		},
		"204": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "FrameworkContextObject.serverHandoffString"
		},
		"205": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "EntryContext.staticHandlerContext"
		},
		"206": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "FrameworkContextObject.serializeError"
		},
		"207": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "FrameworkContextObject.serializeError"
		},
		"208": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "error"
		},
		"209": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FetcherFormProps"
		},
		"210": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.about"
		},
		"211": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.FormHTMLAttributes.acceptCharset"
		},
		"212": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.accessKey"
		},
		"213": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.action"
		},
		"214": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-activedescendant"
		},
		"215": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-atomic"
		},
		"216": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-autocomplete"
		},
		"217": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-braillelabel"
		},
		"218": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-brailleroledescription"
		},
		"219": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-busy"
		},
		"220": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-checked"
		},
		"221": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-colcount"
		},
		"222": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-colindex"
		},
		"223": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-colindextext"
		},
		"224": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-colspan"
		},
		"225": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-controls"
		},
		"226": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-current"
		},
		"227": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-describedby"
		},
		"228": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-description"
		},
		"229": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-details"
		},
		"230": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-disabled"
		},
		"231": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-dropeffect"
		},
		"232": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-errormessage"
		},
		"233": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-expanded"
		},
		"234": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-flowto"
		},
		"235": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-grabbed"
		},
		"236": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-haspopup"
		},
		"237": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-hidden"
		},
		"238": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-invalid"
		},
		"239": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-keyshortcuts"
		},
		"240": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-label"
		},
		"241": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-labelledby"
		},
		"242": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-level"
		},
		"243": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-live"
		},
		"244": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-modal"
		},
		"245": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-multiline"
		},
		"246": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-multiselectable"
		},
		"247": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-orientation"
		},
		"248": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-owns"
		},
		"249": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-placeholder"
		},
		"250": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-posinset"
		},
		"251": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-pressed"
		},
		"252": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-readonly"
		},
		"253": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-relevant"
		},
		"254": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-required"
		},
		"255": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-roledescription"
		},
		"256": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-rowcount"
		},
		"257": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-rowindex"
		},
		"258": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-rowindextext"
		},
		"259": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-rowspan"
		},
		"260": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-selected"
		},
		"261": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-setsize"
		},
		"262": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-sort"
		},
		"263": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-valuemax"
		},
		"264": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-valuemin"
		},
		"265": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-valuenow"
		},
		"266": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-valuetext"
		},
		"267": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.autoCapitalize"
		},
		"268": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.FormHTMLAttributes.autoComplete"
		},
		"269": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.autoCorrect"
		},
		"270": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.autoFocus"
		},
		"271": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.autoSave"
		},
		"272": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.children"
		},
		"273": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.className"
		},
		"274": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.color"
		},
		"275": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.content"
		},
		"276": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.contentEditable"
		},
		"277": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.contextMenu"
		},
		"278": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.dangerouslySetInnerHTML"
		},
		"279": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"280": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type.__html"
		},
		"281": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.datatype"
		},
		"282": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.defaultChecked"
		},
		"283": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.defaultValue"
		},
		"284": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.dir"
		},
		"285": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.draggable"
		},
		"286": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.encType"
		},
		"287": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.hidden"
		},
		"288": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.id"
		},
		"289": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.inlist"
		},
		"290": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.inputMode"
		},
		"291": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.is"
		},
		"292": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.itemID"
		},
		"293": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.itemProp"
		},
		"294": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.itemRef"
		},
		"295": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.itemScope"
		},
		"296": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.itemType"
		},
		"297": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.lang"
		},
		"298": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.method"
		},
		"299": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.FormHTMLAttributes.name"
		},
		"300": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.FormHTMLAttributes.noValidate"
		},
		"301": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.nonce"
		},
		"302": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAbort"
		},
		"303": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAbortCapture"
		},
		"304": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationEnd"
		},
		"305": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationEndCapture"
		},
		"306": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationIteration"
		},
		"307": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationIterationCapture"
		},
		"308": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationStart"
		},
		"309": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationStartCapture"
		},
		"310": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAuxClick"
		},
		"311": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAuxClickCapture"
		},
		"312": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onBeforeInput"
		},
		"313": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onBeforeInputCapture"
		},
		"314": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onBlur"
		},
		"315": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onBlurCapture"
		},
		"316": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCanPlay"
		},
		"317": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCanPlayCapture"
		},
		"318": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCanPlayThrough"
		},
		"319": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCanPlayThroughCapture"
		},
		"320": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onChange"
		},
		"321": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onChangeCapture"
		},
		"322": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onClick"
		},
		"323": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onClickCapture"
		},
		"324": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionEnd"
		},
		"325": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionEndCapture"
		},
		"326": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionStart"
		},
		"327": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionStartCapture"
		},
		"328": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionUpdate"
		},
		"329": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionUpdateCapture"
		},
		"330": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onContextMenu"
		},
		"331": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onContextMenuCapture"
		},
		"332": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCopy"
		},
		"333": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCopyCapture"
		},
		"334": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCut"
		},
		"335": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCutCapture"
		},
		"336": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDoubleClick"
		},
		"337": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDoubleClickCapture"
		},
		"338": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDrag"
		},
		"339": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragCapture"
		},
		"340": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragEnd"
		},
		"341": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragEndCapture"
		},
		"342": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragEnter"
		},
		"343": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragEnterCapture"
		},
		"344": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragExit"
		},
		"345": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragExitCapture"
		},
		"346": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragLeave"
		},
		"347": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragLeaveCapture"
		},
		"348": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragOver"
		},
		"349": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragOverCapture"
		},
		"350": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragStart"
		},
		"351": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragStartCapture"
		},
		"352": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDrop"
		},
		"353": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDropCapture"
		},
		"354": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDurationChange"
		},
		"355": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDurationChangeCapture"
		},
		"356": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEmptied"
		},
		"357": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEmptiedCapture"
		},
		"358": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEncrypted"
		},
		"359": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEncryptedCapture"
		},
		"360": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEnded"
		},
		"361": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEndedCapture"
		},
		"362": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onError"
		},
		"363": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onErrorCapture"
		},
		"364": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onFocus"
		},
		"365": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onFocusCapture"
		},
		"366": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onGotPointerCapture"
		},
		"367": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onGotPointerCaptureCapture"
		},
		"368": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onInput"
		},
		"369": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onInputCapture"
		},
		"370": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onInvalid"
		},
		"371": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onInvalidCapture"
		},
		"372": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyDown"
		},
		"373": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyDownCapture"
		},
		"374": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyPress"
		},
		"375": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyPressCapture"
		},
		"376": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyUp"
		},
		"377": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyUpCapture"
		},
		"378": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoad"
		},
		"379": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadCapture"
		},
		"380": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadStart"
		},
		"381": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadStartCapture"
		},
		"382": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadedData"
		},
		"383": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadedDataCapture"
		},
		"384": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadedMetadata"
		},
		"385": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadedMetadataCapture"
		},
		"386": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLostPointerCapture"
		},
		"387": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLostPointerCaptureCapture"
		},
		"388": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseDown"
		},
		"389": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseDownCapture"
		},
		"390": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseEnter"
		},
		"391": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseLeave"
		},
		"392": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseMove"
		},
		"393": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseMoveCapture"
		},
		"394": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseOut"
		},
		"395": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseOutCapture"
		},
		"396": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseOver"
		},
		"397": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseOverCapture"
		},
		"398": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseUp"
		},
		"399": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseUpCapture"
		},
		"400": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPaste"
		},
		"401": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPasteCapture"
		},
		"402": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPause"
		},
		"403": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPauseCapture"
		},
		"404": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPlay"
		},
		"405": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPlayCapture"
		},
		"406": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPlaying"
		},
		"407": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPlayingCapture"
		},
		"408": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerCancel"
		},
		"409": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerCancelCapture"
		},
		"410": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerDown"
		},
		"411": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerDownCapture"
		},
		"412": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerEnter"
		},
		"413": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerEnterCapture"
		},
		"414": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerLeave"
		},
		"415": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerLeaveCapture"
		},
		"416": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerMove"
		},
		"417": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerMoveCapture"
		},
		"418": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerOut"
		},
		"419": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerOutCapture"
		},
		"420": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerOver"
		},
		"421": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerOverCapture"
		},
		"422": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerUp"
		},
		"423": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerUpCapture"
		},
		"424": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onProgress"
		},
		"425": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onProgressCapture"
		},
		"426": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onRateChange"
		},
		"427": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onRateChangeCapture"
		},
		"428": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onReset"
		},
		"429": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onResetCapture"
		},
		"430": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onResize"
		},
		"431": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onResizeCapture"
		},
		"432": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onScroll"
		},
		"433": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onScrollCapture"
		},
		"434": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSeeked"
		},
		"435": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSeekedCapture"
		},
		"436": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSeeking"
		},
		"437": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSeekingCapture"
		},
		"438": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSelect"
		},
		"439": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSelectCapture"
		},
		"440": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onStalled"
		},
		"441": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onStalledCapture"
		},
		"442": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.onSubmit"
		},
		"443": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSubmitCapture"
		},
		"444": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSuspend"
		},
		"445": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSuspendCapture"
		},
		"446": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTimeUpdate"
		},
		"447": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTimeUpdateCapture"
		},
		"448": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchCancel"
		},
		"449": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchCancelCapture"
		},
		"450": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchEnd"
		},
		"451": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchEndCapture"
		},
		"452": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchMove"
		},
		"453": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchMoveCapture"
		},
		"454": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchStart"
		},
		"455": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchStartCapture"
		},
		"456": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTransitionEnd"
		},
		"457": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTransitionEndCapture"
		},
		"458": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onVolumeChange"
		},
		"459": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onVolumeChangeCapture"
		},
		"460": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onWaiting"
		},
		"461": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onWaitingCapture"
		},
		"462": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onWheel"
		},
		"463": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onWheelCapture"
		},
		"464": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.placeholder"
		},
		"465": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.prefix"
		},
		"466": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.preventScrollReset"
		},
		"467": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.property"
		},
		"468": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.radioGroup"
		},
		"469": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.rel"
		},
		"470": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.relative"
		},
		"471": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.resource"
		},
		"472": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.results"
		},
		"473": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.rev"
		},
		"474": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.role"
		},
		"475": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.security"
		},
		"476": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.slot"
		},
		"477": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.spellCheck"
		},
		"478": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.style"
		},
		"479": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.suppressContentEditableWarning"
		},
		"480": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.suppressHydrationWarning"
		},
		"481": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.tabIndex"
		},
		"482": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.FormHTMLAttributes.target"
		},
		"483": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.title"
		},
		"484": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.translate"
		},
		"485": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.typeof"
		},
		"486": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.unselectable"
		},
		"487": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.vocab"
		},
		"488": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FetcherSubmitFunction"
		},
		"489": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FetcherSubmitFunction"
		},
		"490": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "target"
		},
		"491": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "options"
		},
		"492": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "FetcherSubmitOptions"
		},
		"493": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.action"
		},
		"494": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.encType"
		},
		"495": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.method"
		},
		"496": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.preventScrollReset"
		},
		"497": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.relative"
		},
		"498": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.unstable_flushSync"
		},
		"499": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FormProps"
		},
		"500": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.about"
		},
		"501": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.FormHTMLAttributes.acceptCharset"
		},
		"502": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.accessKey"
		},
		"503": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.action"
		},
		"504": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-activedescendant"
		},
		"505": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-atomic"
		},
		"506": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-autocomplete"
		},
		"507": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-braillelabel"
		},
		"508": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-brailleroledescription"
		},
		"509": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-busy"
		},
		"510": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-checked"
		},
		"511": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-colcount"
		},
		"512": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-colindex"
		},
		"513": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-colindextext"
		},
		"514": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-colspan"
		},
		"515": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-controls"
		},
		"516": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-current"
		},
		"517": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-describedby"
		},
		"518": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-description"
		},
		"519": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-details"
		},
		"520": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-disabled"
		},
		"521": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-dropeffect"
		},
		"522": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-errormessage"
		},
		"523": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-expanded"
		},
		"524": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-flowto"
		},
		"525": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-grabbed"
		},
		"526": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-haspopup"
		},
		"527": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-hidden"
		},
		"528": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-invalid"
		},
		"529": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-keyshortcuts"
		},
		"530": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-label"
		},
		"531": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-labelledby"
		},
		"532": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-level"
		},
		"533": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-live"
		},
		"534": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-modal"
		},
		"535": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-multiline"
		},
		"536": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-multiselectable"
		},
		"537": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-orientation"
		},
		"538": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-owns"
		},
		"539": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-placeholder"
		},
		"540": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-posinset"
		},
		"541": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-pressed"
		},
		"542": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-readonly"
		},
		"543": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-relevant"
		},
		"544": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-required"
		},
		"545": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-roledescription"
		},
		"546": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-rowcount"
		},
		"547": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-rowindex"
		},
		"548": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-rowindextext"
		},
		"549": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-rowspan"
		},
		"550": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-selected"
		},
		"551": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-setsize"
		},
		"552": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-sort"
		},
		"553": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-valuemax"
		},
		"554": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-valuemin"
		},
		"555": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-valuenow"
		},
		"556": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.AriaAttributes.aria-valuetext"
		},
		"557": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.autoCapitalize"
		},
		"558": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.FormHTMLAttributes.autoComplete"
		},
		"559": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.autoCorrect"
		},
		"560": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.autoFocus"
		},
		"561": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.autoSave"
		},
		"562": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.children"
		},
		"563": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.className"
		},
		"564": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.color"
		},
		"565": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.content"
		},
		"566": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.contentEditable"
		},
		"567": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.contextMenu"
		},
		"568": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.dangerouslySetInnerHTML"
		},
		"569": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"570": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type.__html"
		},
		"571": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.datatype"
		},
		"572": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.defaultChecked"
		},
		"573": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.defaultValue"
		},
		"574": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.dir"
		},
		"575": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FormProps.discover"
		},
		"576": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.draggable"
		},
		"577": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.encType"
		},
		"578": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FormProps.fetcherKey"
		},
		"579": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.hidden"
		},
		"580": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.id"
		},
		"581": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.inlist"
		},
		"582": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.inputMode"
		},
		"583": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.is"
		},
		"584": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.itemID"
		},
		"585": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.itemProp"
		},
		"586": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.itemRef"
		},
		"587": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.itemScope"
		},
		"588": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.itemType"
		},
		"589": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.lang"
		},
		"590": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.method"
		},
		"591": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.FormHTMLAttributes.name"
		},
		"592": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FormProps.navigate"
		},
		"593": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.FormHTMLAttributes.noValidate"
		},
		"594": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.nonce"
		},
		"595": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAbort"
		},
		"596": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAbortCapture"
		},
		"597": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationEnd"
		},
		"598": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationEndCapture"
		},
		"599": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationIteration"
		},
		"600": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationIterationCapture"
		},
		"601": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationStart"
		},
		"602": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAnimationStartCapture"
		},
		"603": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAuxClick"
		},
		"604": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onAuxClickCapture"
		},
		"605": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onBeforeInput"
		},
		"606": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onBeforeInputCapture"
		},
		"607": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onBlur"
		},
		"608": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onBlurCapture"
		},
		"609": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCanPlay"
		},
		"610": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCanPlayCapture"
		},
		"611": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCanPlayThrough"
		},
		"612": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCanPlayThroughCapture"
		},
		"613": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onChange"
		},
		"614": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onChangeCapture"
		},
		"615": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onClick"
		},
		"616": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onClickCapture"
		},
		"617": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionEnd"
		},
		"618": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionEndCapture"
		},
		"619": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionStart"
		},
		"620": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionStartCapture"
		},
		"621": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionUpdate"
		},
		"622": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCompositionUpdateCapture"
		},
		"623": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onContextMenu"
		},
		"624": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onContextMenuCapture"
		},
		"625": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCopy"
		},
		"626": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCopyCapture"
		},
		"627": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCut"
		},
		"628": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onCutCapture"
		},
		"629": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDoubleClick"
		},
		"630": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDoubleClickCapture"
		},
		"631": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDrag"
		},
		"632": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragCapture"
		},
		"633": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragEnd"
		},
		"634": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragEndCapture"
		},
		"635": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragEnter"
		},
		"636": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragEnterCapture"
		},
		"637": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragExit"
		},
		"638": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragExitCapture"
		},
		"639": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragLeave"
		},
		"640": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragLeaveCapture"
		},
		"641": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragOver"
		},
		"642": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragOverCapture"
		},
		"643": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragStart"
		},
		"644": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDragStartCapture"
		},
		"645": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDrop"
		},
		"646": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDropCapture"
		},
		"647": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDurationChange"
		},
		"648": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onDurationChangeCapture"
		},
		"649": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEmptied"
		},
		"650": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEmptiedCapture"
		},
		"651": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEncrypted"
		},
		"652": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEncryptedCapture"
		},
		"653": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEnded"
		},
		"654": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onEndedCapture"
		},
		"655": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onError"
		},
		"656": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onErrorCapture"
		},
		"657": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onFocus"
		},
		"658": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onFocusCapture"
		},
		"659": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onGotPointerCapture"
		},
		"660": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onGotPointerCaptureCapture"
		},
		"661": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onInput"
		},
		"662": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onInputCapture"
		},
		"663": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onInvalid"
		},
		"664": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onInvalidCapture"
		},
		"665": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyDown"
		},
		"666": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyDownCapture"
		},
		"667": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyPress"
		},
		"668": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyPressCapture"
		},
		"669": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyUp"
		},
		"670": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onKeyUpCapture"
		},
		"671": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoad"
		},
		"672": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadCapture"
		},
		"673": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadStart"
		},
		"674": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadStartCapture"
		},
		"675": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadedData"
		},
		"676": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadedDataCapture"
		},
		"677": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadedMetadata"
		},
		"678": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLoadedMetadataCapture"
		},
		"679": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLostPointerCapture"
		},
		"680": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onLostPointerCaptureCapture"
		},
		"681": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseDown"
		},
		"682": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseDownCapture"
		},
		"683": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseEnter"
		},
		"684": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseLeave"
		},
		"685": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseMove"
		},
		"686": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseMoveCapture"
		},
		"687": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseOut"
		},
		"688": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseOutCapture"
		},
		"689": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseOver"
		},
		"690": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseOverCapture"
		},
		"691": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseUp"
		},
		"692": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onMouseUpCapture"
		},
		"693": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPaste"
		},
		"694": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPasteCapture"
		},
		"695": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPause"
		},
		"696": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPauseCapture"
		},
		"697": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPlay"
		},
		"698": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPlayCapture"
		},
		"699": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPlaying"
		},
		"700": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPlayingCapture"
		},
		"701": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerCancel"
		},
		"702": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerCancelCapture"
		},
		"703": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerDown"
		},
		"704": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerDownCapture"
		},
		"705": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerEnter"
		},
		"706": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerEnterCapture"
		},
		"707": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerLeave"
		},
		"708": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerLeaveCapture"
		},
		"709": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerMove"
		},
		"710": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerMoveCapture"
		},
		"711": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerOut"
		},
		"712": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerOutCapture"
		},
		"713": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerOver"
		},
		"714": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerOverCapture"
		},
		"715": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerUp"
		},
		"716": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onPointerUpCapture"
		},
		"717": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onProgress"
		},
		"718": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onProgressCapture"
		},
		"719": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onRateChange"
		},
		"720": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onRateChangeCapture"
		},
		"721": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onReset"
		},
		"722": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onResetCapture"
		},
		"723": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onResize"
		},
		"724": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onResizeCapture"
		},
		"725": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onScroll"
		},
		"726": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onScrollCapture"
		},
		"727": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSeeked"
		},
		"728": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSeekedCapture"
		},
		"729": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSeeking"
		},
		"730": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSeekingCapture"
		},
		"731": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSelect"
		},
		"732": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSelectCapture"
		},
		"733": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onStalled"
		},
		"734": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onStalledCapture"
		},
		"735": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.onSubmit"
		},
		"736": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSubmitCapture"
		},
		"737": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSuspend"
		},
		"738": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onSuspendCapture"
		},
		"739": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTimeUpdate"
		},
		"740": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTimeUpdateCapture"
		},
		"741": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchCancel"
		},
		"742": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchCancelCapture"
		},
		"743": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchEnd"
		},
		"744": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchEndCapture"
		},
		"745": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchMove"
		},
		"746": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchMoveCapture"
		},
		"747": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchStart"
		},
		"748": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTouchStartCapture"
		},
		"749": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTransitionEnd"
		},
		"750": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onTransitionEndCapture"
		},
		"751": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onVolumeChange"
		},
		"752": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onVolumeChangeCapture"
		},
		"753": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onWaiting"
		},
		"754": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onWaitingCapture"
		},
		"755": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onWheel"
		},
		"756": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.DOMAttributes.onWheelCapture"
		},
		"757": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.placeholder"
		},
		"758": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.prefix"
		},
		"759": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.preventScrollReset"
		},
		"760": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.property"
		},
		"761": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.radioGroup"
		},
		"762": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.rel"
		},
		"763": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SharedFormProps.relative"
		},
		"764": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FormProps.reloadDocument"
		},
		"765": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FormProps.replace"
		},
		"766": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.resource"
		},
		"767": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.results"
		},
		"768": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.rev"
		},
		"769": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.role"
		},
		"770": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.security"
		},
		"771": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.slot"
		},
		"772": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.spellCheck"
		},
		"773": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FormProps.state"
		},
		"774": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.style"
		},
		"775": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.suppressContentEditableWarning"
		},
		"776": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.suppressHydrationWarning"
		},
		"777": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.tabIndex"
		},
		"778": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.FormHTMLAttributes.target"
		},
		"779": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.title"
		},
		"780": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.translate"
		},
		"781": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.typeof"
		},
		"782": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.unselectable"
		},
		"783": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FormProps.unstable_viewTransition"
		},
		"784": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.HTMLAttributes.vocab"
		},
		"785": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "GetScrollPositionFunction"
		},
		"786": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "GetScrollPositionFunction"
		},
		"787": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "GetScrollRestorationKeyFunction"
		},
		"788": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "GetScrollRestorationKeyFunction"
		},
		"789": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "location"
		},
		"790": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "matches"
		},
		"791": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "HandleDataRequestFunction"
		},
		"792": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "HandleDataRequestFunction"
		},
		"793": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "response"
		},
		"794": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "args"
		},
		"795": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "HandleDocumentRequestFunction"
		},
		"796": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "HandleDocumentRequestFunction"
		},
		"797": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "request"
		},
		"798": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "responseStatusCode"
		},
		"799": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "responseHeaders"
		},
		"800": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "context"
		},
		"801": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "loadContext"
		},
		"802": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "HandleErrorFunction"
		},
		"803": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "HandleErrorFunction"
		},
		"804": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "error"
		},
		"805": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "args"
		},
		"806": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HashRouterProps"
		},
		"807": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HashRouterProps.basename"
		},
		"808": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HashRouterProps.children"
		},
		"809": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HashRouterProps.window"
		},
		"810": {
			"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
			"qualifiedName": "HeadersFunction"
		},
		"811": {
			"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
			"qualifiedName": "HeadersFunction"
		},
		"812": {
			"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
			"qualifiedName": "args"
		},
		"813": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HistoryRouterProps"
		},
		"814": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HistoryRouterProps.basename"
		},
		"815": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HistoryRouterProps.children"
		},
		"816": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HistoryRouterProps.history"
		},
		"817": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject"
		},
		"818": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.Component"
		},
		"819": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"820": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.ErrorBoundary"
		},
		"821": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"822": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.HydrateFallback"
		},
		"823": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"824": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.action"
		},
		"825": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.caseSensitive"
		},
		"826": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.children"
		},
		"827": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.element"
		},
		"828": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.errorElement"
		},
		"829": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.handle"
		},
		"830": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.hasErrorBoundary"
		},
		"831": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.hydrateFallbackElement"
		},
		"832": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.id"
		},
		"833": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.index"
		},
		"834": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.lazy"
		},
		"835": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.loader"
		},
		"836": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.path"
		},
		"837": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "IndexRouteObject.shouldRevalidate"
		},
		"838": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps"
		},
		"839": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.Component"
		},
		"840": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"841": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.ErrorBoundary"
		},
		"842": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"843": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.HydrateFallback"
		},
		"844": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"845": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.action"
		},
		"846": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.caseSensitive"
		},
		"847": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.children"
		},
		"848": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.element"
		},
		"849": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.errorElement"
		},
		"850": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.handle"
		},
		"851": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.hasErrorBoundary"
		},
		"852": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.hydrateFallbackElement"
		},
		"853": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.id"
		},
		"854": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.index"
		},
		"855": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.lazy"
		},
		"856": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.loader"
		},
		"857": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.path"
		},
		"858": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "IndexRouteProps.shouldRevalidate"
		},
		"859": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "LayoutRouteProps"
		},
		"860": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.Component"
		},
		"861": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"862": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.ErrorBoundary"
		},
		"863": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"864": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.HydrateFallback"
		},
		"865": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"866": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.action"
		},
		"867": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.caseSensitive"
		},
		"868": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.children"
		},
		"869": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.element"
		},
		"870": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.errorElement"
		},
		"871": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.handle"
		},
		"872": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.hasErrorBoundary"
		},
		"873": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.hydrateFallbackElement"
		},
		"874": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.id"
		},
		"875": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.index"
		},
		"876": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.lazy"
		},
		"877": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.loader"
		},
		"878": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.path"
		},
		"879": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.shouldRevalidate"
		},
		"880": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "LazyRouteFunction"
		},
		"881": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "LazyRouteFunction.R"
		},
		"882": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "LazyRouteFunction"
		},
		"883": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "LinkProps"
		},
		"884": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "about"
		},
		"885": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "accessKey"
		},
		"886": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-activedescendant"
		},
		"887": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-atomic"
		},
		"888": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-autocomplete"
		},
		"889": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-braillelabel"
		},
		"890": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-brailleroledescription"
		},
		"891": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-busy"
		},
		"892": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-checked"
		},
		"893": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-colcount"
		},
		"894": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-colindex"
		},
		"895": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-colindextext"
		},
		"896": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-colspan"
		},
		"897": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-controls"
		},
		"898": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-current"
		},
		"899": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-describedby"
		},
		"900": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-description"
		},
		"901": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-details"
		},
		"902": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-disabled"
		},
		"903": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-dropeffect"
		},
		"904": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-errormessage"
		},
		"905": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-expanded"
		},
		"906": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-flowto"
		},
		"907": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-grabbed"
		},
		"908": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-haspopup"
		},
		"909": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-hidden"
		},
		"910": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-invalid"
		},
		"911": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-keyshortcuts"
		},
		"912": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-label"
		},
		"913": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-labelledby"
		},
		"914": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-level"
		},
		"915": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-live"
		},
		"916": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-modal"
		},
		"917": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-multiline"
		},
		"918": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-multiselectable"
		},
		"919": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-orientation"
		},
		"920": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-owns"
		},
		"921": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-placeholder"
		},
		"922": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-posinset"
		},
		"923": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-pressed"
		},
		"924": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-readonly"
		},
		"925": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-relevant"
		},
		"926": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-required"
		},
		"927": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-roledescription"
		},
		"928": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-rowcount"
		},
		"929": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-rowindex"
		},
		"930": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-rowindextext"
		},
		"931": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-rowspan"
		},
		"932": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-selected"
		},
		"933": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-setsize"
		},
		"934": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-sort"
		},
		"935": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-valuemax"
		},
		"936": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-valuemin"
		},
		"937": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-valuenow"
		},
		"938": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-valuetext"
		},
		"939": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "autoCapitalize"
		},
		"940": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "autoCorrect"
		},
		"941": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "autoFocus"
		},
		"942": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "autoSave"
		},
		"943": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "children"
		},
		"944": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "className"
		},
		"945": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "color"
		},
		"946": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "content"
		},
		"947": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "contentEditable"
		},
		"948": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "contextMenu"
		},
		"949": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "dangerouslySetInnerHTML"
		},
		"950": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"951": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type.__html"
		},
		"952": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "datatype"
		},
		"953": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "defaultChecked"
		},
		"954": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "defaultValue"
		},
		"955": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "dir"
		},
		"956": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "LinkProps.discover"
		},
		"957": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "download"
		},
		"958": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "draggable"
		},
		"959": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "hidden"
		},
		"960": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "hrefLang"
		},
		"961": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "id"
		},
		"962": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "inlist"
		},
		"963": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "inputMode"
		},
		"964": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "is"
		},
		"965": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "itemID"
		},
		"966": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "itemProp"
		},
		"967": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "itemRef"
		},
		"968": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "itemScope"
		},
		"969": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "itemType"
		},
		"970": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "lang"
		},
		"971": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "media"
		},
		"972": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nonce"
		},
		"973": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAbort"
		},
		"974": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAbortCapture"
		},
		"975": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationEnd"
		},
		"976": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationEndCapture"
		},
		"977": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationIteration"
		},
		"978": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationIterationCapture"
		},
		"979": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationStart"
		},
		"980": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationStartCapture"
		},
		"981": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAuxClick"
		},
		"982": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAuxClickCapture"
		},
		"983": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onBeforeInput"
		},
		"984": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onBeforeInputCapture"
		},
		"985": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onBlur"
		},
		"986": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onBlurCapture"
		},
		"987": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCanPlay"
		},
		"988": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCanPlayCapture"
		},
		"989": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCanPlayThrough"
		},
		"990": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCanPlayThroughCapture"
		},
		"991": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onChange"
		},
		"992": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onChangeCapture"
		},
		"993": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onClick"
		},
		"994": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onClickCapture"
		},
		"995": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionEnd"
		},
		"996": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionEndCapture"
		},
		"997": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionStart"
		},
		"998": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionStartCapture"
		},
		"999": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionUpdate"
		},
		"1000": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionUpdateCapture"
		},
		"1001": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onContextMenu"
		},
		"1002": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onContextMenuCapture"
		},
		"1003": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCopy"
		},
		"1004": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCopyCapture"
		},
		"1005": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCut"
		},
		"1006": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCutCapture"
		},
		"1007": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDoubleClick"
		},
		"1008": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDoubleClickCapture"
		},
		"1009": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDrag"
		},
		"1010": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragCapture"
		},
		"1011": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragEnd"
		},
		"1012": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragEndCapture"
		},
		"1013": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragEnter"
		},
		"1014": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragEnterCapture"
		},
		"1015": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragExit"
		},
		"1016": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragExitCapture"
		},
		"1017": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragLeave"
		},
		"1018": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragLeaveCapture"
		},
		"1019": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragOver"
		},
		"1020": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragOverCapture"
		},
		"1021": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragStart"
		},
		"1022": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragStartCapture"
		},
		"1023": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDrop"
		},
		"1024": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDropCapture"
		},
		"1025": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDurationChange"
		},
		"1026": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDurationChangeCapture"
		},
		"1027": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEmptied"
		},
		"1028": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEmptiedCapture"
		},
		"1029": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEncrypted"
		},
		"1030": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEncryptedCapture"
		},
		"1031": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEnded"
		},
		"1032": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEndedCapture"
		},
		"1033": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onError"
		},
		"1034": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onErrorCapture"
		},
		"1035": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onFocus"
		},
		"1036": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onFocusCapture"
		},
		"1037": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onGotPointerCapture"
		},
		"1038": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onGotPointerCaptureCapture"
		},
		"1039": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onInput"
		},
		"1040": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onInputCapture"
		},
		"1041": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onInvalid"
		},
		"1042": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onInvalidCapture"
		},
		"1043": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyDown"
		},
		"1044": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyDownCapture"
		},
		"1045": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyPress"
		},
		"1046": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyPressCapture"
		},
		"1047": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyUp"
		},
		"1048": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyUpCapture"
		},
		"1049": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoad"
		},
		"1050": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadCapture"
		},
		"1051": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadStart"
		},
		"1052": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadStartCapture"
		},
		"1053": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadedData"
		},
		"1054": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadedDataCapture"
		},
		"1055": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadedMetadata"
		},
		"1056": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadedMetadataCapture"
		},
		"1057": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLostPointerCapture"
		},
		"1058": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLostPointerCaptureCapture"
		},
		"1059": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseDown"
		},
		"1060": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseDownCapture"
		},
		"1061": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseEnter"
		},
		"1062": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseLeave"
		},
		"1063": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseMove"
		},
		"1064": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseMoveCapture"
		},
		"1065": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseOut"
		},
		"1066": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseOutCapture"
		},
		"1067": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseOver"
		},
		"1068": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseOverCapture"
		},
		"1069": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseUp"
		},
		"1070": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseUpCapture"
		},
		"1071": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPaste"
		},
		"1072": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPasteCapture"
		},
		"1073": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPause"
		},
		"1074": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPauseCapture"
		},
		"1075": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPlay"
		},
		"1076": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPlayCapture"
		},
		"1077": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPlaying"
		},
		"1078": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPlayingCapture"
		},
		"1079": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerCancel"
		},
		"1080": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerCancelCapture"
		},
		"1081": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerDown"
		},
		"1082": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerDownCapture"
		},
		"1083": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerEnter"
		},
		"1084": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerEnterCapture"
		},
		"1085": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerLeave"
		},
		"1086": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerLeaveCapture"
		},
		"1087": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerMove"
		},
		"1088": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerMoveCapture"
		},
		"1089": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerOut"
		},
		"1090": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerOutCapture"
		},
		"1091": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerOver"
		},
		"1092": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerOverCapture"
		},
		"1093": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerUp"
		},
		"1094": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerUpCapture"
		},
		"1095": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onProgress"
		},
		"1096": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onProgressCapture"
		},
		"1097": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onRateChange"
		},
		"1098": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onRateChangeCapture"
		},
		"1099": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onReset"
		},
		"1100": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onResetCapture"
		},
		"1101": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onResize"
		},
		"1102": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onResizeCapture"
		},
		"1103": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onScroll"
		},
		"1104": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onScrollCapture"
		},
		"1105": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSeeked"
		},
		"1106": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSeekedCapture"
		},
		"1107": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSeeking"
		},
		"1108": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSeekingCapture"
		},
		"1109": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSelect"
		},
		"1110": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSelectCapture"
		},
		"1111": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onStalled"
		},
		"1112": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onStalledCapture"
		},
		"1113": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSubmit"
		},
		"1114": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSubmitCapture"
		},
		"1115": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSuspend"
		},
		"1116": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSuspendCapture"
		},
		"1117": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTimeUpdate"
		},
		"1118": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTimeUpdateCapture"
		},
		"1119": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchCancel"
		},
		"1120": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchCancelCapture"
		},
		"1121": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchEnd"
		},
		"1122": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchEndCapture"
		},
		"1123": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchMove"
		},
		"1124": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchMoveCapture"
		},
		"1125": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchStart"
		},
		"1126": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchStartCapture"
		},
		"1127": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTransitionEnd"
		},
		"1128": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTransitionEndCapture"
		},
		"1129": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onVolumeChange"
		},
		"1130": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onVolumeChangeCapture"
		},
		"1131": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onWaiting"
		},
		"1132": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onWaitingCapture"
		},
		"1133": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onWheel"
		},
		"1134": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onWheelCapture"
		},
		"1135": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "ping"
		},
		"1136": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "placeholder"
		},
		"1137": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "LinkProps.prefetch"
		},
		"1138": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "prefix"
		},
		"1139": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "LinkProps.preventScrollReset"
		},
		"1140": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "property"
		},
		"1141": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "radioGroup"
		},
		"1142": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "referrerPolicy"
		},
		"1143": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "rel"
		},
		"1144": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "LinkProps.relative"
		},
		"1145": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "LinkProps.reloadDocument"
		},
		"1146": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "LinkProps.replace"
		},
		"1147": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "resource"
		},
		"1148": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "results"
		},
		"1149": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "rev"
		},
		"1150": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "role"
		},
		"1151": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "security"
		},
		"1152": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "slot"
		},
		"1153": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "spellCheck"
		},
		"1154": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "LinkProps.state"
		},
		"1155": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "style"
		},
		"1156": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "suppressContentEditableWarning"
		},
		"1157": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "suppressHydrationWarning"
		},
		"1158": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "tabIndex"
		},
		"1159": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "target"
		},
		"1160": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "title"
		},
		"1161": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "LinkProps.to"
		},
		"1162": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "translate"
		},
		"1163": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "type"
		},
		"1164": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "typeof"
		},
		"1165": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "unselectable"
		},
		"1166": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "LinkProps.unstable_viewTransition"
		},
		"1167": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "vocab"
		},
		"1168": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "LinksFunction"
		},
		"1169": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "LinksFunction"
		},
		"1170": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "LoaderFunctionArgs"
		},
		"1171": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataFunctionArgs.context"
		},
		"1172": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataFunctionArgs.params"
		},
		"1173": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataFunctionArgs.request"
		},
		"1174": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "LoaderFunctionArgs.Context"
		},
		"1175": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Location"
		},
		"1176": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Path.hash"
		},
		"1177": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Location.key"
		},
		"1178": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Path.pathname"
		},
		"1179": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Path.search"
		},
		"1180": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Location.state"
		},
		"1181": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Location.State"
		},
		"1182": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "MemoryRouterProps"
		},
		"1183": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "MemoryRouterProps.basename"
		},
		"1184": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "MemoryRouterProps.children"
		},
		"1185": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "MemoryRouterProps.initialEntries"
		},
		"1186": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "MemoryRouterProps.initialIndex"
		},
		"1187": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaArgs"
		},
		"1188": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaArgs.data"
		},
		"1189": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaArgs.error"
		},
		"1190": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaArgs.location"
		},
		"1191": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaArgs.matches"
		},
		"1192": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaArgs.params"
		},
		"1193": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaArgs.Loader"
		},
		"1194": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaArgs.MatchLoaders"
		},
		"1195": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaFunction"
		},
		"1196": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaFunction.Loader"
		},
		"1197": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaFunction.MatchLoaders"
		},
		"1198": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaFunction"
		},
		"1199": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "args"
		},
		"1200": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "NavLinkProps"
		},
		"1201": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "about"
		},
		"1202": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "accessKey"
		},
		"1203": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-activedescendant"
		},
		"1204": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-atomic"
		},
		"1205": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-autocomplete"
		},
		"1206": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-braillelabel"
		},
		"1207": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-brailleroledescription"
		},
		"1208": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-busy"
		},
		"1209": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-checked"
		},
		"1210": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-colcount"
		},
		"1211": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-colindex"
		},
		"1212": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-colindextext"
		},
		"1213": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-colspan"
		},
		"1214": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-controls"
		},
		"1215": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-current"
		},
		"1216": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-describedby"
		},
		"1217": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-description"
		},
		"1218": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-details"
		},
		"1219": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-disabled"
		},
		"1220": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-dropeffect"
		},
		"1221": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-errormessage"
		},
		"1222": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-expanded"
		},
		"1223": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-flowto"
		},
		"1224": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-grabbed"
		},
		"1225": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-haspopup"
		},
		"1226": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-hidden"
		},
		"1227": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-invalid"
		},
		"1228": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-keyshortcuts"
		},
		"1229": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-label"
		},
		"1230": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-labelledby"
		},
		"1231": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-level"
		},
		"1232": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-live"
		},
		"1233": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-modal"
		},
		"1234": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-multiline"
		},
		"1235": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-multiselectable"
		},
		"1236": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-orientation"
		},
		"1237": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-owns"
		},
		"1238": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-placeholder"
		},
		"1239": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-posinset"
		},
		"1240": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-pressed"
		},
		"1241": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-readonly"
		},
		"1242": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-relevant"
		},
		"1243": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-required"
		},
		"1244": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-roledescription"
		},
		"1245": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-rowcount"
		},
		"1246": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-rowindex"
		},
		"1247": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-rowindextext"
		},
		"1248": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-rowspan"
		},
		"1249": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-selected"
		},
		"1250": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-setsize"
		},
		"1251": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-sort"
		},
		"1252": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-valuemax"
		},
		"1253": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-valuemin"
		},
		"1254": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-valuenow"
		},
		"1255": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "aria-valuetext"
		},
		"1256": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "autoCapitalize"
		},
		"1257": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "autoCorrect"
		},
		"1258": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "autoFocus"
		},
		"1259": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "autoSave"
		},
		"1260": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "NavLinkProps.caseSensitive"
		},
		"1261": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "NavLinkProps.children"
		},
		"1262": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"1263": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"1264": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "props"
		},
		"1265": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "NavLinkProps.className"
		},
		"1266": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"1267": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"1268": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "props"
		},
		"1269": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "color"
		},
		"1270": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "content"
		},
		"1271": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "contentEditable"
		},
		"1272": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "contextMenu"
		},
		"1273": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "dangerouslySetInnerHTML"
		},
		"1274": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type"
		},
		"1275": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "__type.__html"
		},
		"1276": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "datatype"
		},
		"1277": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "defaultChecked"
		},
		"1278": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "defaultValue"
		},
		"1279": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "dir"
		},
		"1280": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "discover"
		},
		"1281": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "download"
		},
		"1282": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "draggable"
		},
		"1283": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "NavLinkProps.end"
		},
		"1284": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "hidden"
		},
		"1285": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "hrefLang"
		},
		"1286": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "id"
		},
		"1287": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "inlist"
		},
		"1288": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "inputMode"
		},
		"1289": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "is"
		},
		"1290": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "itemID"
		},
		"1291": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "itemProp"
		},
		"1292": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "itemRef"
		},
		"1293": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "itemScope"
		},
		"1294": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "itemType"
		},
		"1295": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "lang"
		},
		"1296": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "media"
		},
		"1297": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "nonce"
		},
		"1298": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAbort"
		},
		"1299": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAbortCapture"
		},
		"1300": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationEnd"
		},
		"1301": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationEndCapture"
		},
		"1302": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationIteration"
		},
		"1303": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationIterationCapture"
		},
		"1304": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationStart"
		},
		"1305": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAnimationStartCapture"
		},
		"1306": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAuxClick"
		},
		"1307": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onAuxClickCapture"
		},
		"1308": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onBeforeInput"
		},
		"1309": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onBeforeInputCapture"
		},
		"1310": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onBlur"
		},
		"1311": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onBlurCapture"
		},
		"1312": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCanPlay"
		},
		"1313": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCanPlayCapture"
		},
		"1314": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCanPlayThrough"
		},
		"1315": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCanPlayThroughCapture"
		},
		"1316": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onChange"
		},
		"1317": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onChangeCapture"
		},
		"1318": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onClick"
		},
		"1319": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onClickCapture"
		},
		"1320": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionEnd"
		},
		"1321": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionEndCapture"
		},
		"1322": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionStart"
		},
		"1323": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionStartCapture"
		},
		"1324": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionUpdate"
		},
		"1325": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCompositionUpdateCapture"
		},
		"1326": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onContextMenu"
		},
		"1327": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onContextMenuCapture"
		},
		"1328": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCopy"
		},
		"1329": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCopyCapture"
		},
		"1330": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCut"
		},
		"1331": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onCutCapture"
		},
		"1332": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDoubleClick"
		},
		"1333": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDoubleClickCapture"
		},
		"1334": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDrag"
		},
		"1335": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragCapture"
		},
		"1336": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragEnd"
		},
		"1337": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragEndCapture"
		},
		"1338": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragEnter"
		},
		"1339": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragEnterCapture"
		},
		"1340": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragExit"
		},
		"1341": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragExitCapture"
		},
		"1342": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragLeave"
		},
		"1343": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragLeaveCapture"
		},
		"1344": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragOver"
		},
		"1345": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragOverCapture"
		},
		"1346": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragStart"
		},
		"1347": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDragStartCapture"
		},
		"1348": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDrop"
		},
		"1349": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDropCapture"
		},
		"1350": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDurationChange"
		},
		"1351": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onDurationChangeCapture"
		},
		"1352": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEmptied"
		},
		"1353": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEmptiedCapture"
		},
		"1354": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEncrypted"
		},
		"1355": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEncryptedCapture"
		},
		"1356": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEnded"
		},
		"1357": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onEndedCapture"
		},
		"1358": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onError"
		},
		"1359": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onErrorCapture"
		},
		"1360": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onFocus"
		},
		"1361": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onFocusCapture"
		},
		"1362": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onGotPointerCapture"
		},
		"1363": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onGotPointerCaptureCapture"
		},
		"1364": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onInput"
		},
		"1365": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onInputCapture"
		},
		"1366": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onInvalid"
		},
		"1367": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onInvalidCapture"
		},
		"1368": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyDown"
		},
		"1369": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyDownCapture"
		},
		"1370": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyPress"
		},
		"1371": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyPressCapture"
		},
		"1372": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyUp"
		},
		"1373": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onKeyUpCapture"
		},
		"1374": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoad"
		},
		"1375": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadCapture"
		},
		"1376": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadStart"
		},
		"1377": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadStartCapture"
		},
		"1378": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadedData"
		},
		"1379": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadedDataCapture"
		},
		"1380": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadedMetadata"
		},
		"1381": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLoadedMetadataCapture"
		},
		"1382": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLostPointerCapture"
		},
		"1383": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onLostPointerCaptureCapture"
		},
		"1384": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseDown"
		},
		"1385": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseDownCapture"
		},
		"1386": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseEnter"
		},
		"1387": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseLeave"
		},
		"1388": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseMove"
		},
		"1389": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseMoveCapture"
		},
		"1390": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseOut"
		},
		"1391": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseOutCapture"
		},
		"1392": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseOver"
		},
		"1393": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseOverCapture"
		},
		"1394": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseUp"
		},
		"1395": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onMouseUpCapture"
		},
		"1396": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPaste"
		},
		"1397": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPasteCapture"
		},
		"1398": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPause"
		},
		"1399": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPauseCapture"
		},
		"1400": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPlay"
		},
		"1401": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPlayCapture"
		},
		"1402": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPlaying"
		},
		"1403": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPlayingCapture"
		},
		"1404": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerCancel"
		},
		"1405": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerCancelCapture"
		},
		"1406": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerDown"
		},
		"1407": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerDownCapture"
		},
		"1408": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerEnter"
		},
		"1409": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerEnterCapture"
		},
		"1410": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerLeave"
		},
		"1411": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerLeaveCapture"
		},
		"1412": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerMove"
		},
		"1413": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerMoveCapture"
		},
		"1414": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerOut"
		},
		"1415": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerOutCapture"
		},
		"1416": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerOver"
		},
		"1417": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerOverCapture"
		},
		"1418": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerUp"
		},
		"1419": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onPointerUpCapture"
		},
		"1420": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onProgress"
		},
		"1421": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onProgressCapture"
		},
		"1422": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onRateChange"
		},
		"1423": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onRateChangeCapture"
		},
		"1424": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onReset"
		},
		"1425": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onResetCapture"
		},
		"1426": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onResize"
		},
		"1427": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onResizeCapture"
		},
		"1428": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onScroll"
		},
		"1429": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onScrollCapture"
		},
		"1430": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSeeked"
		},
		"1431": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSeekedCapture"
		},
		"1432": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSeeking"
		},
		"1433": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSeekingCapture"
		},
		"1434": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSelect"
		},
		"1435": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSelectCapture"
		},
		"1436": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onStalled"
		},
		"1437": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onStalledCapture"
		},
		"1438": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSubmit"
		},
		"1439": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSubmitCapture"
		},
		"1440": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSuspend"
		},
		"1441": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onSuspendCapture"
		},
		"1442": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTimeUpdate"
		},
		"1443": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTimeUpdateCapture"
		},
		"1444": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchCancel"
		},
		"1445": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchCancelCapture"
		},
		"1446": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchEnd"
		},
		"1447": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchEndCapture"
		},
		"1448": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchMove"
		},
		"1449": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchMoveCapture"
		},
		"1450": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchStart"
		},
		"1451": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTouchStartCapture"
		},
		"1452": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTransitionEnd"
		},
		"1453": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onTransitionEndCapture"
		},
		"1454": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onVolumeChange"
		},
		"1455": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onVolumeChangeCapture"
		},
		"1456": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onWaiting"
		},
		"1457": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onWaitingCapture"
		},
		"1458": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onWheel"
		},
		"1459": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "onWheelCapture"
		},
		"1460": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "ping"
		},
		"1461": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "placeholder"
		},
		"1462": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "prefetch"
		},
		"1463": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "prefix"
		},
		"1464": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "preventScrollReset"
		},
		"1465": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "property"
		},
		"1466": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "radioGroup"
		},
		"1467": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "referrerPolicy"
		},
		"1468": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "rel"
		},
		"1469": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "relative"
		},
		"1470": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "reloadDocument"
		},
		"1471": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "replace"
		},
		"1472": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "resource"
		},
		"1473": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "results"
		},
		"1474": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "rev"
		},
		"1475": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "role"
		},
		"1476": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "security"
		},
		"1477": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "slot"
		},
		"1478": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "spellCheck"
		},
		"1479": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "state"
		},
		"1480": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "NavLinkProps.style"
		},
		"1481": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"1482": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"1483": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "props"
		},
		"1484": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "suppressContentEditableWarning"
		},
		"1485": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "suppressHydrationWarning"
		},
		"1486": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "tabIndex"
		},
		"1487": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "target"
		},
		"1488": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "title"
		},
		"1489": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "to"
		},
		"1490": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "translate"
		},
		"1491": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "type"
		},
		"1492": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "typeof"
		},
		"1493": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "unselectable"
		},
		"1494": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "unstable_viewTransition"
		},
		"1495": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "vocab"
		},
		"1496": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "NavigateFunction"
		},
		"1497": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "NavigateFunction"
		},
		"1498": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "to"
		},
		"1499": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "options"
		},
		"1500": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "NavigateFunction"
		},
		"1501": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "delta"
		},
		"1502": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NavigateOptions"
		},
		"1503": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NavigateOptions.preventScrollReset"
		},
		"1504": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NavigateOptions.relative"
		},
		"1505": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NavigateOptions.replace"
		},
		"1506": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NavigateOptions.state"
		},
		"1507": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NavigateOptions.unstable_flushSync"
		},
		"1508": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NavigateOptions.unstable_viewTransition"
		},
		"1509": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "NavigateProps"
		},
		"1510": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "NavigateProps.relative"
		},
		"1511": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "NavigateProps.replace"
		},
		"1512": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "NavigateProps.state"
		},
		"1513": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "NavigateProps.to"
		},
		"1514": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "Navigator"
		},
		"1515": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "Navigator.createHref"
		},
		"1516": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "History.createHref"
		},
		"1517": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "History.createHref"
		},
		"1518": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "to"
		},
		"1519": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "Navigator.encodeLocation"
		},
		"1520": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "History.encodeLocation"
		},
		"1521": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "History.encodeLocation"
		},
		"1522": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "to"
		},
		"1523": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "Navigator.go"
		},
		"1524": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "History.go"
		},
		"1525": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "History.go"
		},
		"1526": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "delta"
		},
		"1527": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "Navigator.push"
		},
		"1528": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "Navigator.push"
		},
		"1529": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "to"
		},
		"1530": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "state"
		},
		"1531": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "opts"
		},
		"1532": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "Navigator.replace"
		},
		"1533": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "Navigator.replace"
		},
		"1534": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "to"
		},
		"1535": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "state"
		},
		"1536": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "opts"
		},
		"1537": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject"
		},
		"1538": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.Component"
		},
		"1539": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"1540": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.ErrorBoundary"
		},
		"1541": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"1542": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.HydrateFallback"
		},
		"1543": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"1544": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.action"
		},
		"1545": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.caseSensitive"
		},
		"1546": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.children"
		},
		"1547": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.element"
		},
		"1548": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.errorElement"
		},
		"1549": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.handle"
		},
		"1550": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.hasErrorBoundary"
		},
		"1551": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.hydrateFallbackElement"
		},
		"1552": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.id"
		},
		"1553": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.index"
		},
		"1554": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.lazy"
		},
		"1555": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.loader"
		},
		"1556": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.path"
		},
		"1557": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NonIndexRouteObject.shouldRevalidate"
		},
		"1558": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "OutletProps"
		},
		"1559": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "OutletProps.context"
		},
		"1560": {
			"sourceFileName": "packages/react-router/lib/server-runtime/links.ts",
			"qualifiedName": "PageLinkDescriptor"
		},
		"1561": {
			"sourceFileName": "packages/react-router/lib/server-runtime/links.ts",
			"qualifiedName": "crossOrigin"
		},
		"1562": {
			"sourceFileName": "packages/react-router/lib/server-runtime/links.ts",
			"qualifiedName": "disabled"
		},
		"1563": {
			"sourceFileName": "packages/react-router/lib/server-runtime/links.ts",
			"qualifiedName": "hrefLang"
		},
		"1564": {
			"sourceFileName": "packages/react-router/lib/server-runtime/links.ts",
			"qualifiedName": "integrity"
		},
		"1565": {
			"sourceFileName": "packages/react-router/lib/server-runtime/links.ts",
			"qualifiedName": "media"
		},
		"1566": {
			"sourceFileName": "packages/react-router/lib/server-runtime/links.ts",
			"qualifiedName": "PageLinkDescriptor.page"
		},
		"1567": {
			"sourceFileName": "packages/react-router/lib/server-runtime/links.ts",
			"qualifiedName": "referrerPolicy"
		},
		"1568": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Path"
		},
		"1569": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Path.hash"
		},
		"1570": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Path.pathname"
		},
		"1571": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "Path.search"
		},
		"1572": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathMatch"
		},
		"1573": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathMatch.params"
		},
		"1574": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathMatch.pathname"
		},
		"1575": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathMatch.pathnameBase"
		},
		"1576": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathMatch.pattern"
		},
		"1577": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathMatch.ParamKey"
		},
		"1578": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathPattern"
		},
		"1579": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathPattern.caseSensitive"
		},
		"1580": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathPattern.end"
		},
		"1581": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathPattern.path"
		},
		"1582": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathPattern.Path"
		},
		"1583": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps"
		},
		"1584": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.Component"
		},
		"1585": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"1586": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.ErrorBoundary"
		},
		"1587": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"1588": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.HydrateFallback"
		},
		"1589": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"1590": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.action"
		},
		"1591": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.caseSensitive"
		},
		"1592": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.children"
		},
		"1593": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.element"
		},
		"1594": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.errorElement"
		},
		"1595": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.handle"
		},
		"1596": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.hasErrorBoundary"
		},
		"1597": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.hydrateFallbackElement"
		},
		"1598": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.id"
		},
		"1599": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.index"
		},
		"1600": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.lazy"
		},
		"1601": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.loader"
		},
		"1602": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.path"
		},
		"1603": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PathRouteProps.shouldRevalidate"
		},
		"1604": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
			"qualifiedName": "PrefetchPageDescriptor"
		},
		"1605": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
			"qualifiedName": "crossOrigin"
		},
		"1606": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
			"qualifiedName": "disabled"
		},
		"1607": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
			"qualifiedName": "hrefLang"
		},
		"1608": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
			"qualifiedName": "integrity"
		},
		"1609": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
			"qualifiedName": "media"
		},
		"1610": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
			"qualifiedName": "PrefetchPageDescriptor.page"
		},
		"1611": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
			"qualifiedName": "referrerPolicy"
		},
		"1612": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router"
		},
		"1613": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router._internalFetchControllers"
		},
		"1614": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.basename"
		},
		"1615": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.basename"
		},
		"1616": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.future"
		},
		"1617": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.future"
		},
		"1618": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.routes"
		},
		"1619": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.routes"
		},
		"1620": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.state"
		},
		"1621": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.state"
		},
		"1622": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.window"
		},
		"1623": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.window"
		},
		"1624": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router._internalSetRoutes"
		},
		"1625": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router._internalSetRoutes"
		},
		"1626": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "routes"
		},
		"1627": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.createHref"
		},
		"1628": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.createHref"
		},
		"1629": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "location"
		},
		"1630": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.deleteBlocker"
		},
		"1631": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.deleteBlocker"
		},
		"1632": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "key"
		},
		"1633": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.deleteFetcher"
		},
		"1634": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.deleteFetcher"
		},
		"1635": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "key"
		},
		"1636": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.dispose"
		},
		"1637": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.dispose"
		},
		"1638": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.enableScrollRestoration"
		},
		"1639": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.enableScrollRestoration"
		},
		"1640": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "savedScrollPositions"
		},
		"1641": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "getScrollPosition"
		},
		"1642": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "getKey"
		},
		"1643": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"1644": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"1645": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.encodeLocation"
		},
		"1646": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.encodeLocation"
		},
		"1647": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "to"
		},
		"1648": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.fetch"
		},
		"1649": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.fetch"
		},
		"1650": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "key"
		},
		"1651": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "routeId"
		},
		"1652": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "href"
		},
		"1653": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "opts"
		},
		"1654": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.getBlocker"
		},
		"1655": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.getBlocker"
		},
		"1656": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "key"
		},
		"1657": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "fn"
		},
		"1658": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.getFetcher"
		},
		"1659": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.getFetcher"
		},
		"1660": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "TData"
		},
		"1661": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "key"
		},
		"1662": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.initialize"
		},
		"1663": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.initialize"
		},
		"1664": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.navigate"
		},
		"1665": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.navigate"
		},
		"1666": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "to"
		},
		"1667": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.navigate"
		},
		"1668": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "to"
		},
		"1669": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "opts"
		},
		"1670": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.patchRoutes"
		},
		"1671": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.patchRoutes"
		},
		"1672": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "routeId"
		},
		"1673": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "children"
		},
		"1674": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.revalidate"
		},
		"1675": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.revalidate"
		},
		"1676": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.subscribe"
		},
		"1677": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Router.subscribe"
		},
		"1678": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "fn"
		},
		"1679": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"1680": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"1681": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "RouteMatch"
		},
		"1682": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.params"
		},
		"1683": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.pathname"
		},
		"1684": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.pathnameBase"
		},
		"1685": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.route"
		},
		"1686": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "RouteMatch.ParamKey"
		},
		"1687": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "RouteMatch.RouteObjectType"
		},
		"1688": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterInit"
		},
		"1689": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterInit.basename"
		},
		"1690": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterInit.future"
		},
		"1691": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterInit.history"
		},
		"1692": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterInit.hydrationData"
		},
		"1693": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterInit.mapRouteProperties"
		},
		"1694": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterInit.routes"
		},
		"1695": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterInit.unstable_dataStrategy"
		},
		"1696": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterInit.unstable_patchRoutesOnMiss"
		},
		"1697": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterInit.window"
		},
		"1698": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProps"
		},
		"1699": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProps.basename"
		},
		"1700": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProps.children"
		},
		"1701": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProps.location"
		},
		"1702": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProps.navigationType"
		},
		"1703": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProps.navigator"
		},
		"1704": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProps.static"
		},
		"1705": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProviderProps"
		},
		"1706": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProviderProps.flushSync"
		},
		"1707": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type"
		},
		"1708": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type"
		},
		"1709": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "fn"
		},
		"1710": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type"
		},
		"1711": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type"
		},
		"1712": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProviderProps.router"
		},
		"1713": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState"
		},
		"1714": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.actionData"
		},
		"1715": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.blockers"
		},
		"1716": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.errors"
		},
		"1717": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.fetchers"
		},
		"1718": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.historyAction"
		},
		"1719": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.initialized"
		},
		"1720": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.loaderData"
		},
		"1721": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.location"
		},
		"1722": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.matches"
		},
		"1723": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.navigation"
		},
		"1724": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.preventScrollReset"
		},
		"1725": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.restoreScrollPosition"
		},
		"1726": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterState.revalidation"
		},
		"1727": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterSubscriber"
		},
		"1728": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterSubscriber"
		},
		"1729": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "state"
		},
		"1730": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "opts"
		},
		"1731": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"1732": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.deletedFetchers"
		},
		"1733": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.unstable_flushSync"
		},
		"1734": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.unstable_viewTransitionOpts"
		},
		"1735": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RoutesProps"
		},
		"1736": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RoutesProps.children"
		},
		"1737": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RoutesProps.location"
		},
		"1738": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "RoutesTestStubProps"
		},
		"1739": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "RoutesTestStubProps.future"
		},
		"1740": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "RoutesTestStubProps.hydrationData"
		},
		"1741": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "RoutesTestStubProps.initialEntries"
		},
		"1742": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "RoutesTestStubProps.initialIndex"
		},
		"1743": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerBuild"
		},
		"1744": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerBuild.assets"
		},
		"1745": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerBuild.assetsBuildDirectory"
		},
		"1746": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerBuild.basename"
		},
		"1747": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerBuild.entry"
		},
		"1748": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "__type"
		},
		"1749": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "__type.module"
		},
		"1750": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerBuild.future"
		},
		"1751": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerBuild.isSpaMode"
		},
		"1752": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerBuild.publicPath"
		},
		"1753": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerBuild.routes"
		},
		"1754": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerEntryModule"
		},
		"1755": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerEntryModule.default"
		},
		"1756": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerEntryModule.handleDataRequest"
		},
		"1757": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerEntryModule.handleError"
		},
		"1758": {
			"sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
			"qualifiedName": "ServerEntryModule.streamTimeout"
		},
		"1759": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
			"qualifiedName": "ServerRouterProps"
		},
		"1760": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
			"qualifiedName": "ServerRouterProps.abortDelay"
		},
		"1761": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
			"qualifiedName": "ServerRouterProps.context"
		},
		"1762": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
			"qualifiedName": "ServerRouterProps.nonce"
		},
		"1763": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
			"qualifiedName": "ServerRouterProps.url"
		},
		"1764": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session"
		},
		"1765": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.data"
		},
		"1766": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.id"
		},
		"1767": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.flash"
		},
		"1768": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.flash"
		},
		"1769": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Key"
		},
		"1770": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "name"
		},
		"1771": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "value"
		},
		"1772": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.get"
		},
		"1773": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.get"
		},
		"1774": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Key"
		},
		"1775": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "name"
		},
		"1776": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.has"
		},
		"1777": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.has"
		},
		"1778": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "name"
		},
		"1779": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.set"
		},
		"1780": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.set"
		},
		"1781": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Key"
		},
		"1782": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "name"
		},
		"1783": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "value"
		},
		"1784": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.unset"
		},
		"1785": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.unset"
		},
		"1786": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "name"
		},
		"1787": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.Data"
		},
		"1788": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Session.FlashData"
		},
		"1789": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionData"
		},
		"1790": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionData.__index"
		},
		"1792": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionIdStorageStrategy"
		},
		"1793": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionIdStorageStrategy.cookie"
		},
		"1794": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"1795": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type.name"
		},
		"1796": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionIdStorageStrategy.createData"
		},
		"1797": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"1798": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"1799": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "data"
		},
		"1800": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "expires"
		},
		"1801": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionIdStorageStrategy.deleteData"
		},
		"1802": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"1803": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"1804": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "id"
		},
		"1805": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionIdStorageStrategy.readData"
		},
		"1806": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"1807": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"1808": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "id"
		},
		"1809": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionIdStorageStrategy.updateData"
		},
		"1810": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"1811": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"1812": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "id"
		},
		"1813": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "data"
		},
		"1814": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "expires"
		},
		"1815": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionIdStorageStrategy.Data"
		},
		"1816": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionIdStorageStrategy.FlashData"
		},
		"1817": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionStorage"
		},
		"1818": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionStorage.commitSession"
		},
		"1819": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"1820": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"1821": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "session"
		},
		"1822": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "options"
		},
		"1823": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionStorage.destroySession"
		},
		"1824": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"1825": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"1826": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "session"
		},
		"1827": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "options"
		},
		"1828": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionStorage.getSession"
		},
		"1829": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"1830": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"1831": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "cookieHeader"
		},
		"1832": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "options"
		},
		"1833": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionStorage.Data"
		},
		"1834": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "SessionStorage.FlashData"
		},
		"1835": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunction"
		},
		"1836": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunction"
		},
		"1837": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "args"
		},
		"1838": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs"
		},
		"1839": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.actionResult"
		},
		"1840": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.actionStatus"
		},
		"1841": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.currentParams"
		},
		"1842": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.currentUrl"
		},
		"1843": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.defaultShouldRevalidate"
		},
		"1844": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.formAction"
		},
		"1845": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.formData"
		},
		"1846": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.formEncType"
		},
		"1847": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.formMethod"
		},
		"1848": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.json"
		},
		"1849": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.nextParams"
		},
		"1850": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.nextUrl"
		},
		"1851": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ShouldRevalidateFunctionArgs.text"
		},
		"1852": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandler"
		},
		"1853": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandler.dataRoutes"
		},
		"1854": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandler.query"
		},
		"1855": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandler.query"
		},
		"1856": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "request"
		},
		"1857": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "opts"
		},
		"1858": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"1859": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.requestContext"
		},
		"1860": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.skipLoaderErrorBubbling"
		},
		"1861": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.unstable_dataStrategy"
		},
		"1862": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandler.queryRoute"
		},
		"1863": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandler.queryRoute"
		},
		"1864": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "request"
		},
		"1865": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "opts"
		},
		"1866": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"1867": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.requestContext"
		},
		"1868": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.routeId"
		},
		"1869": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.unstable_dataStrategy"
		},
		"1870": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandlerContext"
		},
		"1871": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandlerContext._deepestRenderedBoundaryId"
		},
		"1872": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandlerContext.actionData"
		},
		"1873": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandlerContext.actionHeaders"
		},
		"1874": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandlerContext.basename"
		},
		"1875": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandlerContext.errors"
		},
		"1876": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandlerContext.loaderData"
		},
		"1877": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandlerContext.loaderHeaders"
		},
		"1878": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandlerContext.location"
		},
		"1879": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandlerContext.matches"
		},
		"1880": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "StaticHandlerContext.statusCode"
		},
		"1881": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouterProps"
		},
		"1882": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouterProps.basename"
		},
		"1883": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouterProps.children"
		},
		"1884": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouterProps.location"
		},
		"1885": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouterProviderProps"
		},
		"1886": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouterProviderProps.context"
		},
		"1887": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouterProviderProps.hydrate"
		},
		"1888": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouterProviderProps.nonce"
		},
		"1889": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouterProviderProps.router"
		},
		"1890": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SubmitFunction"
		},
		"1891": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SubmitFunction"
		},
		"1892": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "target"
		},
		"1893": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "options"
		},
		"1894": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SubmitOptions"
		},
		"1895": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.action"
		},
		"1896": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.encType"
		},
		"1897": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SubmitOptions.fetcherKey"
		},
		"1898": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.method"
		},
		"1899": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SubmitOptions.navigate"
		},
		"1900": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.preventScrollReset"
		},
		"1901": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.relative"
		},
		"1902": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SubmitOptions.replace"
		},
		"1903": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SubmitOptions.state"
		},
		"1904": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SharedSubmitOptions.unstable_flushSync"
		},
		"1905": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SubmitOptions.unstable_viewTransition"
		},
		"1906": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "UIMatch"
		},
		"1907": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "UIMatch.data"
		},
		"1908": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "UIMatch.handle"
		},
		"1909": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "UIMatch.id"
		},
		"1910": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "UIMatch.params"
		},
		"1911": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "UIMatch.pathname"
		},
		"1912": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "UIMatch.Data"
		},
		"1913": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "UIMatch.Handle"
		},
		"1914": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "AssetsManifest"
		},
		"1915": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "AssetsManifest.entry"
		},
		"1916": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type"
		},
		"1917": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type.imports"
		},
		"1918": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type.module"
		},
		"1919": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "AssetsManifest.hmr"
		},
		"1920": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type"
		},
		"1921": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type.runtime"
		},
		"1922": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "__type.timestamp"
		},
		"1923": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "AssetsManifest.routes"
		},
		"1924": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "AssetsManifest.url"
		},
		"1925": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
			"qualifiedName": "AssetsManifest.version"
		},
		"1926": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "RouteModules"
		},
		"1927": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "RouteModules.__index"
		},
		"1929": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataStrategyFunction"
		},
		"1930": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataStrategyFunction"
		},
		"1931": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "args"
		},
		"1932": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataStrategyFunctionArgs"
		},
		"1933": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataFunctionArgs.context"
		},
		"1934": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataStrategyFunctionArgs.matches"
		},
		"1935": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataFunctionArgs.params"
		},
		"1936": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataFunctionArgs.request"
		},
		"1937": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataStrategyFunctionArgs.Context"
		},
		"1938": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataStrategyMatch"
		},
		"1939": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.params"
		},
		"1940": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.pathname"
		},
		"1941": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.pathnameBase"
		},
		"1942": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataStrategyMatch.resolve"
		},
		"1943": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"1944": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"1945": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "handlerOverride"
		},
		"1946": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"1947": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"1948": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "handler"
		},
		"1949": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"1950": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"1951": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ctx"
		},
		"1952": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "AgnosticRouteMatch.route"
		},
		"1953": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "DataStrategyMatch.shouldLoad"
		},
		"1954": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "HandlerResult"
		},
		"1955": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "HandlerResult.result"
		},
		"1956": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "HandlerResult.status"
		},
		"1957": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "HandlerResult.type"
		},
		"1958": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "PatchRoutesOnMissFunction"
		},
		"1959": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PatchRoutesOnMissFunction"
		},
		"1960": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "opts"
		},
		"1961": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"1962": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type.matches"
		},
		"1963": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type.patch"
		},
		"1964": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"1965": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"1966": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "routeId"
		},
		"1967": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "children"
		},
		"1968": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type.path"
		},
		"1969": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Blocker"
		},
		"1970": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "BlockerFunction"
		},
		"1971": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"1972": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"1973": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "args"
		},
		"1974": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"1975": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.currentLocation"
		},
		"1976": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.historyAction"
		},
		"1977": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.nextLocation"
		},
		"1978": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "ClientActionFunction"
		},
		"1979": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"1980": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"1981": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "args"
		},
		"1982": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "ClientActionFunctionArgs"
		},
		"1983": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"1984": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.serverAction"
		},
		"1985": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"1986": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"1987": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "T"
		},
		"1988": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "ClientLoaderFunction"
		},
		"1989": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"1990": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"1991": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "args"
		},
		"1992": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"1993": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.hydrate"
		},
		"1994": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "ClientLoaderFunctionArgs"
		},
		"1995": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"1996": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.serverLoader"
		},
		"1997": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"1998": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"1999": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "T"
		},
		"2000": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "CookieOptions"
		},
		"2001": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "CreateCookieFunction"
		},
		"2002": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "__type"
		},
		"2003": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "__type"
		},
		"2004": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "name"
		},
		"2005": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "cookieOptions"
		},
		"2006": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
			"qualifiedName": "CreateCookieSessionStorageFunction"
		},
		"2007": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
			"qualifiedName": "__type"
		},
		"2008": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
			"qualifiedName": "__type"
		},
		"2009": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
			"qualifiedName": "Data"
		},
		"2010": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
			"qualifiedName": "FlashData"
		},
		"2011": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
			"qualifiedName": "options"
		},
		"2012": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
			"qualifiedName": "CreateMemorySessionStorageFunction"
		},
		"2013": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
			"qualifiedName": "__type"
		},
		"2014": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
			"qualifiedName": "__type"
		},
		"2015": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
			"qualifiedName": "Data"
		},
		"2016": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
			"qualifiedName": "FlashData"
		},
		"2017": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
			"qualifiedName": "options"
		},
		"2018": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "CreateRequestHandlerFunction"
		},
		"2019": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "__type"
		},
		"2020": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "__type"
		},
		"2021": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "build"
		},
		"2022": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "__type"
		},
		"2023": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "__type"
		},
		"2024": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "mode"
		},
		"2025": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "CreateSessionFunction"
		},
		"2026": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"2027": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"2028": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Data"
		},
		"2029": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "FlashData"
		},
		"2030": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "initialData"
		},
		"2031": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "id"
		},
		"2032": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "CreateSessionStorageFunction"
		},
		"2033": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"2034": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"2035": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Data"
		},
		"2036": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "FlashData"
		},
		"2037": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "strategy"
		},
		"2038": {
			"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
			"qualifiedName": "DataFunctionArgs"
		},
		"2039": {
			"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
			"qualifiedName": "__type"
		},
		"2040": {
			"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
			"qualifiedName": "__type.context"
		},
		"2041": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "DataRouteObject"
		},
		"2042": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "__type"
		},
		"2043": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "__type.children"
		},
		"2044": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "__type.id"
		},
		"2045": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ErrorResponse"
		},
		"2046": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"2047": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type.data"
		},
		"2048": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type.status"
		},
		"2049": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type.statusText"
		},
		"2050": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Fetcher"
		},
		"2051": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "TData"
		},
		"2052": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "FetcherWithComponents"
		},
		"2053": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "TData"
		},
		"2054": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"2055": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.Form"
		},
		"2056": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.load"
		},
		"2057": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"2058": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"2059": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "href"
		},
		"2060": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "opts"
		},
		"2061": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"2062": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.unstable_flushSync"
		},
		"2063": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.submit"
		},
		"2064": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "FlashSessionData"
		},
		"2065": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Data"
		},
		"2066": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "FlashData"
		},
		"2067": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "FormEncType"
		},
		"2068": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "FormMethod"
		},
		"2069": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "HTMLFormMethod"
		},
		"2070": {
			"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
			"qualifiedName": "HeadersArgs"
		},
		"2071": {
			"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
			"qualifiedName": "__type"
		},
		"2072": {
			"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
			"qualifiedName": "__type.actionHeaders"
		},
		"2073": {
			"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
			"qualifiedName": "__type.errorHeaders"
		},
		"2074": {
			"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
			"qualifiedName": "__type.loaderHeaders"
		},
		"2075": {
			"sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
			"qualifiedName": "__type.parentHeaders"
		},
		"2076": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
			"qualifiedName": "HtmlLinkDescriptor"
		},
		"2077": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
			"qualifiedName": "__type"
		},
		"2078": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
			"qualifiedName": "__type.imageSizes"
		},
		"2079": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "HydrationState"
		},
		"2080": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "InitialEntry"
		},
		"2081": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "IsCookieFunction"
		},
		"2082": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "__type"
		},
		"2083": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "__type"
		},
		"2084": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "object"
		},
		"2085": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "IsSessionFunction"
		},
		"2086": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"2087": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "__type"
		},
		"2088": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "object"
		},
		"2089": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "JsonFunction"
		},
		"2090": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"2091": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"2092": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "Data"
		},
		"2093": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "data"
		},
		"2094": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "init"
		},
		"2095": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
			"qualifiedName": "LinkDescriptor"
		},
		"2096": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "LoaderFunction"
		},
		"2097": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "Context"
		},
		"2098": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"2099": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"2100": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "args"
		},
		"2101": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "handlerCtx"
		},
		"2102": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"2103": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type.hydrate"
		},
		"2104": {
			"sourceFileName": "packages/react-router/lib/router/define-route.ts",
			"qualifiedName": "Match"
		},
		"2105": {
			"sourceFileName": "packages/react-router/lib/router/define-route.ts",
			"qualifiedName": "R"
		},
		"2106": {
			"sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
			"qualifiedName": "MemoryUploadHandlerFilterArgs"
		},
		"2107": {
			"sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
			"qualifiedName": "__type"
		},
		"2108": {
			"sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
			"qualifiedName": "__type.contentType"
		},
		"2109": {
			"sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
			"qualifiedName": "__type.filename"
		},
		"2110": {
			"sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
			"qualifiedName": "__type.name"
		},
		"2111": {
			"sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
			"qualifiedName": "MemoryUploadHandlerOptions"
		},
		"2112": {
			"sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
			"qualifiedName": "__type"
		},
		"2113": {
			"sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
			"qualifiedName": "__type.maxPartSize"
		},
		"2114": {
			"sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
			"qualifiedName": "__type.filter"
		},
		"2115": {
			"sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
			"qualifiedName": "__type.filter"
		},
		"2116": {
			"sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
			"qualifiedName": "args"
		},
		"2117": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "MetaDescriptor"
		},
		"2118": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"2119": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.charSet"
		},
		"2120": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"2121": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.title"
		},
		"2122": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"2123": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.content"
		},
		"2124": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.name"
		},
		"2125": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"2126": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.content"
		},
		"2127": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.property"
		},
		"2128": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"2129": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.content"
		},
		"2130": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.httpEquiv"
		},
		"2131": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"2132": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.script:ld+json"
		},
		"2133": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"2134": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.tagName"
		},
		"2135": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.__index"
		},
		"2137": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type"
		},
		"2138": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
			"qualifiedName": "__type.__index"
		},
		"2140": {
			"sourceFileName": "packages/react-router/lib/router/define-route.ts",
			"qualifiedName": "MetaMatch"
		},
		"2141": {
			"sourceFileName": "packages/react-router/lib/router/define-route.ts",
			"qualifiedName": "R"
		},
		"2142": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "NavLinkRenderProps"
		},
		"2143": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"2144": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.isActive"
		},
		"2145": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.isPending"
		},
		"2146": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.isTransitioning"
		},
		"2147": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "Navigation"
		},
		"2148": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "NavigationStates"
		},
		"2149": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"2150": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.Idle"
		},
		"2151": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"2152": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formAction"
		},
		"2153": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formData"
		},
		"2154": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formEncType"
		},
		"2155": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formMethod"
		},
		"2156": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.json"
		},
		"2157": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.location"
		},
		"2158": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.state"
		},
		"2159": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.text"
		},
		"2160": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.Loading"
		},
		"2161": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"2162": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formAction"
		},
		"2163": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formData"
		},
		"2164": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formEncType"
		},
		"2165": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formMethod"
		},
		"2166": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.json"
		},
		"2167": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.location"
		},
		"2168": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.state"
		},
		"2169": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.text"
		},
		"2170": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.Submitting"
		},
		"2171": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type"
		},
		"2172": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formAction"
		},
		"2173": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formData"
		},
		"2174": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formEncType"
		},
		"2175": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.formMethod"
		},
		"2176": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.json"
		},
		"2177": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.location"
		},
		"2178": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.state"
		},
		"2179": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "__type.text"
		},
		"2180": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "ParamKeyValuePair"
		},
		"2181": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ParamParseKey"
		},
		"2182": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "Segment"
		},
		"2183": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "Params"
		},
		"2184": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "Key"
		},
		"2185": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "PathParam"
		},
		"2186": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "Path"
		},
		"2187": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "RedirectFunction"
		},
		"2188": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"2189": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "__type"
		},
		"2190": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "url"
		},
		"2191": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "init"
		},
		"2192": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RelativeRoutingType"
		},
		"2193": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "RequestHandler"
		},
		"2194": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "__type"
		},
		"2195": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "__type"
		},
		"2196": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "request"
		},
		"2197": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "loadContext"
		},
		"2198": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RevalidationState"
		},
		"2199": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "RouteObject"
		},
		"2200": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouteProps"
		},
		"2201": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterFetchOptions"
		},
		"2202": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "RouterNavigateOptions"
		},
		"2203": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "ScriptsProps"
		},
		"2204": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "ScrollRestorationProps"
		},
		"2205": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"2206": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.getKey"
		},
		"2207": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.storageKey"
		},
		"2208": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "SetURLSearchParams"
		},
		"2209": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"2210": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"2211": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "nextInit"
		},
		"2212": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"2213": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"2214": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "prev"
		},
		"2215": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "navigateOpts"
		},
		"2216": {
			"sourceFileName": "packages/react-router/lib/server-runtime/crypto.ts",
			"qualifiedName": "SignFunction"
		},
		"2217": {
			"sourceFileName": "packages/react-router/lib/server-runtime/crypto.ts",
			"qualifiedName": "__type"
		},
		"2218": {
			"sourceFileName": "packages/react-router/lib/server-runtime/crypto.ts",
			"qualifiedName": "__type"
		},
		"2219": {
			"sourceFileName": "packages/react-router/lib/server-runtime/crypto.ts",
			"qualifiedName": "value"
		},
		"2220": {
			"sourceFileName": "packages/react-router/lib/server-runtime/crypto.ts",
			"qualifiedName": "secret"
		},
		"2221": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "SubmitTarget"
		},
		"2222": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "To"
		},
		"2223": {
			"sourceFileName": "packages/react-router/lib/server-runtime/responses.ts",
			"qualifiedName": "TypedResponse"
		},
		"2224": {
			"sourceFileName": "packages/react-router/lib/server-runtime/responses.ts",
			"qualifiedName": "T"
		},
		"2225": {
			"sourceFileName": "packages/react-router/lib/server-runtime/responses.ts",
			"qualifiedName": "__type"
		},
		"2226": {
			"sourceFileName": "packages/react-router/lib/server-runtime/responses.ts",
			"qualifiedName": "__type.json"
		},
		"2227": {
			"sourceFileName": "packages/react-router/lib/server-runtime/responses.ts",
			"qualifiedName": "__type.json"
		},
		"2228": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "URLSearchParamsInit"
		},
		"2229": {
			"sourceFileName": "packages/react-router/lib/server-runtime/crypto.ts",
			"qualifiedName": "UnsignFunction"
		},
		"2230": {
			"sourceFileName": "packages/react-router/lib/server-runtime/crypto.ts",
			"qualifiedName": "__type"
		},
		"2231": {
			"sourceFileName": "packages/react-router/lib/server-runtime/crypto.ts",
			"qualifiedName": "__type"
		},
		"2232": {
			"sourceFileName": "packages/react-router/lib/server-runtime/crypto.ts",
			"qualifiedName": "cookie"
		},
		"2233": {
			"sourceFileName": "packages/react-router/lib/server-runtime/crypto.ts",
			"qualifiedName": "secret"
		},
		"2234": {
			"sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
			"qualifiedName": "UploadHandler"
		},
		"2235": {
			"sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
			"qualifiedName": "__type"
		},
		"2236": {
			"sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
			"qualifiedName": "__type"
		},
		"2237": {
			"sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
			"qualifiedName": "part"
		},
		"2238": {
			"sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
			"qualifiedName": "UploadHandlerPart"
		},
		"2239": {
			"sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
			"qualifiedName": "__type"
		},
		"2240": {
			"sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
			"qualifiedName": "__type.contentType"
		},
		"2241": {
			"sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
			"qualifiedName": "__type.data"
		},
		"2242": {
			"sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
			"qualifiedName": "__type.filename"
		},
		"2243": {
			"sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
			"qualifiedName": "__type.name"
		},
		"2244": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "IDLE_BLOCKER"
		},
		"2245": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "IDLE_FETCHER"
		},
		"2246": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "IDLE_NAVIGATION"
		},
		"2247": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "DataRouterContext"
		},
		"2248": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "DataRouterStateContext"
		},
		"2249": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "FetchersContext"
		},
		"2250": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "FrameworkContext"
		},
		"2251": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "LocationContext"
		},
		"2252": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "NavigationContext"
		},
		"2253": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "RouteContext"
		},
		"2254": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
			"qualifiedName": "SingleFetchRedirectSymbol"
		},
		"2255": {
			"sourceFileName": "packages/react-router/lib/context.ts",
			"qualifiedName": "ViewTransitionContext"
		},
		"2256": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Await"
		},
		"2257": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Await"
		},
		"2258": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__0"
		},
		"2259": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "BrowserRouter"
		},
		"2260": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "BrowserRouter"
		},
		"2261": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__0"
		},
		"2262": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "Form"
		},
		"2263": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ExoticComponent.$$typeof"
		},
		"2264": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ForwardRefExoticComponent.defaultProps"
		},
		"2265": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.NamedExoticComponent.displayName"
		},
		"2266": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ForwardRefExoticComponent.propTypes"
		},
		"2267": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "Form"
		},
		"2268": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"2269": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HashRouter"
		},
		"2270": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HashRouter"
		},
		"2271": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__0"
		},
		"2272": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "Link"
		},
		"2273": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ExoticComponent.$$typeof"
		},
		"2274": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ForwardRefExoticComponent.defaultProps"
		},
		"2275": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.NamedExoticComponent.displayName"
		},
		"2276": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ForwardRefExoticComponent.propTypes"
		},
		"2277": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "Link"
		},
		"2278": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"2279": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "Links"
		},
		"2280": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "Links"
		},
		"2281": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "MemoryRouter"
		},
		"2282": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "MemoryRouter"
		},
		"2283": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__0"
		},
		"2284": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "Meta"
		},
		"2285": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "Meta"
		},
		"2286": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "NavLink"
		},
		"2287": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ExoticComponent.$$typeof"
		},
		"2288": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ForwardRefExoticComponent.defaultProps"
		},
		"2289": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.NamedExoticComponent.displayName"
		},
		"2290": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "React.ForwardRefExoticComponent.propTypes"
		},
		"2291": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "NavLink"
		},
		"2292": {
			"sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"2293": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Navigate"
		},
		"2294": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Navigate"
		},
		"2295": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__0"
		},
		"2296": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Outlet"
		},
		"2297": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Outlet"
		},
		"2298": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "props"
		},
		"2299": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "PrefetchPageLinks"
		},
		"2300": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "PrefetchPageLinks"
		},
		"2301": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "__0"
		},
		"2302": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Route"
		},
		"2303": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Route"
		},
		"2304": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "_props"
		},
		"2305": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Router"
		},
		"2306": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Router"
		},
		"2307": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__0"
		},
		"2308": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProvider"
		},
		"2309": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "RouterProvider"
		},
		"2310": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__0"
		},
		"2311": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Routes"
		},
		"2312": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "Routes"
		},
		"2313": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__0"
		},
		"2314": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "Scripts"
		},
		"2315": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "Scripts"
		},
		"2316": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
			"qualifiedName": "props"
		},
		"2317": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "ScrollRestoration"
		},
		"2318": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "ScrollRestoration.displayName"
		},
		"2319": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "ScrollRestoration"
		},
		"2320": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__0"
		},
		"2321": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
			"qualifiedName": "ServerRouter"
		},
		"2322": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
			"qualifiedName": "ServerRouter"
		},
		"2323": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
			"qualifiedName": "__0"
		},
		"2324": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouter"
		},
		"2325": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouter"
		},
		"2326": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "__0"
		},
		"2327": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouterProvider"
		},
		"2328": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "StaticRouterProvider"
		},
		"2329": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "__0"
		},
		"2330": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "createBrowserHistory"
		},
		"2331": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "createBrowserHistory"
		},
		"2332": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "options"
		},
		"2333": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "createClientRoutes"
		},
		"2334": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "createClientRoutes"
		},
		"2335": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "manifest"
		},
		"2336": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "routeModulesCache"
		},
		"2337": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "initialState"
		},
		"2338": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "isSpaMode"
		},
		"2339": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "parentId"
		},
		"2340": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "routesByParentId"
		},
		"2341": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "needsRevalidation"
		},
		"2342": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "createClientRoutesWithHMRRevalidationOptOut"
		},
		"2343": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "createClientRoutesWithHMRRevalidationOptOut"
		},
		"2344": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "needsRevalidation"
		},
		"2345": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "manifest"
		},
		"2346": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "routeModulesCache"
		},
		"2347": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "initialState"
		},
		"2348": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "future"
		},
		"2349": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "isSpaMode"
		},
		"2350": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "createRouter"
		},
		"2351": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "createRouter"
		},
		"2352": {
			"sourceFileName": "packages/react-router/lib/router/router.ts",
			"qualifiedName": "init"
		},
		"2353": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
			"qualifiedName": "decodeViaTurboStream"
		},
		"2354": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
			"qualifiedName": "decodeViaTurboStream"
		},
		"2355": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
			"qualifiedName": "body"
		},
		"2356": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
			"qualifiedName": "global"
		},
		"2357": {
			"sourceFileName": "node_modules/.pnpm/turbo-stream@2.2.0/node_modules/turbo-stream/dist/turbo-stream.d.ts",
			"qualifiedName": "__type"
		},
		"2358": {
			"sourceFileName": "node_modules/.pnpm/turbo-stream@2.2.0/node_modules/turbo-stream/dist/turbo-stream.d.ts",
			"qualifiedName": "__type.done"
		},
		"2359": {
			"sourceFileName": "node_modules/.pnpm/turbo-stream@2.2.0/node_modules/turbo-stream/dist/turbo-stream.d.ts",
			"qualifiedName": "__type.value"
		},
		"2360": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errors.ts",
			"qualifiedName": "deserializeErrors"
		},
		"2361": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errors.ts",
			"qualifiedName": "deserializeErrors"
		},
		"2362": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/errors.ts",
			"qualifiedName": "errors"
		},
		"2363": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
			"qualifiedName": "getSingleFetchDataStrategy"
		},
		"2364": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
			"qualifiedName": "getSingleFetchDataStrategy"
		},
		"2365": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
			"qualifiedName": "manifest"
		},
		"2366": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
			"qualifiedName": "routeModules"
		},
		"2367": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "initFogOfWar"
		},
		"2368": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "initFogOfWar"
		},
		"2369": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "manifest"
		},
		"2370": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "routeModules"
		},
		"2371": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "isSpaMode"
		},
		"2372": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "basename"
		},
		"2373": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "__type"
		},
		"2374": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "__type.enabled"
		},
		"2375": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "__type.patchRoutesOnMiss"
		},
		"2376": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "invariant"
		},
		"2377": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "invariant"
		},
		"2378": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "value"
		},
		"2379": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "message"
		},
		"2380": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "invariant"
		},
		"2381": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "T"
		},
		"2382": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "value"
		},
		"2383": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "message"
		},
		"2384": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "mapRouteProperties"
		},
		"2385": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "mapRouteProperties"
		},
		"2386": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "route"
		},
		"2387": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type"
		},
		"2388": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type.hasErrorBoundary"
		},
		"2389": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "shouldHydrateRouteLoader"
		},
		"2390": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "shouldHydrateRouteLoader"
		},
		"2391": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "route"
		},
		"2392": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "routeModule"
		},
		"2393": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
			"qualifiedName": "isSpaMode"
		},
		"2394": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "useFogOFWarDiscovery"
		},
		"2395": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "useFogOFWarDiscovery"
		},
		"2396": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "router"
		},
		"2397": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "manifest"
		},
		"2398": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "routeModules"
		},
		"2399": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/fog-of-war.ts",
			"qualifiedName": "isSpaMode"
		},
		"2400": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useScrollRestoration"
		},
		"2401": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useScrollRestoration"
		},
		"2402": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__0"
		},
		"2403": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"2404": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.getKey"
		},
		"2405": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.storageKey"
		},
		"2406": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "createBrowserRouter"
		},
		"2407": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "createBrowserRouter"
		},
		"2408": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "routes"
		},
		"2409": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "opts"
		},
		"2410": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "createCookieFactory"
		},
		"2411": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "createCookieFactory"
		},
		"2412": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "__0"
		},
		"2413": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "__type"
		},
		"2414": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "__type.sign"
		},
		"2415": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "__type.unsign"
		},
		"2416": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
			"qualifiedName": "createCookieSessionStorageFactory"
		},
		"2417": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
			"qualifiedName": "createCookieSessionStorageFactory"
		},
		"2418": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
			"qualifiedName": "createCookie"
		},
		"2419": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "createHashRouter"
		},
		"2420": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "createHashRouter"
		},
		"2421": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "routes"
		},
		"2422": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "opts"
		},
		"2423": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "createMemoryRouter"
		},
		"2424": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "createMemoryRouter"
		},
		"2425": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "routes"
		},
		"2426": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "opts"
		},
		"2427": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type"
		},
		"2428": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type.basename"
		},
		"2429": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type.future"
		},
		"2430": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type.hydrationData"
		},
		"2431": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type.initialEntries"
		},
		"2432": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type.initialIndex"
		},
		"2433": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type.unstable_dataStrategy"
		},
		"2434": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "__type.unstable_patchRoutesOnMiss"
		},
		"2435": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
			"qualifiedName": "createMemorySessionStorageFactory"
		},
		"2436": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
			"qualifiedName": "createMemorySessionStorageFactory"
		},
		"2437": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
			"qualifiedName": "createSessionStorage"
		},
		"2438": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "createPath"
		},
		"2439": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "createPath"
		},
		"2440": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "__0"
		},
		"2441": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "createRequestHandler"
		},
		"2442": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "createRequestHandler"
		},
		"2443": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "build"
		},
		"2444": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "__type"
		},
		"2445": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "__type"
		},
		"2446": {
			"sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
			"qualifiedName": "mode"
		},
		"2447": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "createRoutesFromChildren"
		},
		"2448": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "createRoutesFromChildren"
		},
		"2449": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "children"
		},
		"2450": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "parentPath"
		},
		"2451": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "createRoutesStub"
		},
		"2452": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "createRoutesStub"
		},
		"2453": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "routes"
		},
		"2454": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "context"
		},
		"2455": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "RoutesTestStub"
		},
		"2456": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "RoutesTestStub"
		},
		"2457": {
			"sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
			"qualifiedName": "__0"
		},
		"2458": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "createSearchParams"
		},
		"2459": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "createSearchParams"
		},
		"2460": {
			"sourceFileName": "packages/react-router/lib/dom/dom.ts",
			"qualifiedName": "init"
		},
		"2461": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "createSession"
		},
		"2462": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "createSession"
		},
		"2463": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Data"
		},
		"2464": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "FlashData"
		},
		"2465": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "initialData"
		},
		"2466": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "id"
		},
		"2467": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "createSessionStorageFactory"
		},
		"2468": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "createSessionStorageFactory"
		},
		"2469": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "createCookie"
		},
		"2470": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "createStaticHandler"
		},
		"2471": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "createStaticHandler"
		},
		"2472": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "routes"
		},
		"2473": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "opts"
		},
		"2474": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "createStaticRouter"
		},
		"2475": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "createStaticRouter"
		},
		"2476": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "routes"
		},
		"2477": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "context"
		},
		"2478": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "opts"
		},
		"2479": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "__type"
		},
		"2480": {
			"sourceFileName": "packages/react-router/lib/dom/server.tsx",
			"qualifiedName": "__type.future"
		},
		"2481": {
			"sourceFileName": "packages/react-router/lib/router/define-route.ts",
			"qualifiedName": "defineRoute"
		},
		"2482": {
			"sourceFileName": "packages/react-router/lib/router/define-route.ts",
			"qualifiedName": "defineRoute"
		},
		"2483": {
			"sourceFileName": "packages/react-router/lib/router/define-route.ts",
			"qualifiedName": "T"
		},
		"2484": {
			"sourceFileName": "packages/react-router/lib/router/define-route.ts",
			"qualifiedName": "Param"
		},
		"2485": {
			"sourceFileName": "packages/react-router/lib/router/define-route.ts",
			"qualifiedName": "ClientLoaderHydrate"
		},
		"2486": {
			"sourceFileName": "packages/react-router/lib/router/define-route.ts",
			"qualifiedName": "HydrateFallback"
		},
		"2487": {
			"sourceFileName": "packages/react-router/lib/router/define-route.ts",
			"qualifiedName": "ServerLoaderData"
		},
		"2488": {
			"sourceFileName": "packages/react-router/lib/router/define-route.ts",
			"qualifiedName": "ClientLoaderData"
		},
		"2489": {
			"sourceFileName": "packages/react-router/lib/router/define-route.ts",
			"qualifiedName": "ServerActionData"
		},
		"2490": {
			"sourceFileName": "packages/react-router/lib/router/define-route.ts",
			"qualifiedName": "ClientActionData"
		},
		"2491": {
			"sourceFileName": "packages/react-router/lib/router/define-route.ts",
			"qualifiedName": "route"
		},
		"2492": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "generatePath"
		},
		"2493": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "generatePath"
		},
		"2494": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "Path"
		},
		"2495": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "originalPath"
		},
		"2496": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "params"
		},
		"2497": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "isCookie"
		},
		"2498": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "isCookie"
		},
		"2499": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "object"
		},
		"2500": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "isRouteErrorResponse"
		},
		"2501": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "isRouteErrorResponse"
		},
		"2502": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "error"
		},
		"2503": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "isSession"
		},
		"2504": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "isSession"
		},
		"2505": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "object"
		},
		"2506": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "json"
		},
		"2507": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "json"
		},
		"2508": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "Data"
		},
		"2509": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "data"
		},
		"2510": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "init"
		},
		"2511": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "matchPath"
		},
		"2512": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "matchPath"
		},
		"2513": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "ParamKey"
		},
		"2514": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "Path"
		},
		"2515": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "pattern"
		},
		"2516": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "pathname"
		},
		"2517": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "matchRoutes"
		},
		"2518": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "matchRoutes"
		},
		"2519": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "RouteObjectType"
		},
		"2520": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "routes"
		},
		"2521": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "locationArg"
		},
		"2522": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "basename"
		},
		"2523": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "parsePath"
		},
		"2524": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "parsePath"
		},
		"2525": {
			"sourceFileName": "packages/react-router/lib/router/history.ts",
			"qualifiedName": "path"
		},
		"2526": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "redirect"
		},
		"2527": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "redirect"
		},
		"2528": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "url"
		},
		"2529": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "init"
		},
		"2530": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "redirectDocument"
		},
		"2531": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "redirectDocument"
		},
		"2532": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "url"
		},
		"2533": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "init"
		},
		"2534": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "renderMatches"
		},
		"2535": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "renderMatches"
		},
		"2536": {
			"sourceFileName": "packages/react-router/lib/components.tsx",
			"qualifiedName": "matches"
		},
		"2537": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "resolvePath"
		},
		"2538": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "resolvePath"
		},
		"2539": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "to"
		},
		"2540": {
			"sourceFileName": "packages/react-router/lib/router/utils.ts",
			"qualifiedName": "fromPathname"
		},
		"2541": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HistoryRouter"
		},
		"2542": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HistoryRouter.displayName"
		},
		"2543": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "HistoryRouter"
		},
		"2544": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__0"
		},
		"2545": {
			"sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
			"qualifiedName": "composeUploadHandlers"
		},
		"2546": {
			"sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
			"qualifiedName": "composeUploadHandlers"
		},
		"2547": {
			"sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
			"qualifiedName": "handlers"
		},
		"2548": {
			"sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
			"qualifiedName": "createMemoryUploadHandler"
		},
		"2549": {
			"sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
			"qualifiedName": "createMemoryUploadHandler"
		},
		"2550": {
			"sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
			"qualifiedName": "__0"
		},
		"2551": {
			"sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
			"qualifiedName": "parseMultipartFormData"
		},
		"2552": {
			"sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
			"qualifiedName": "parseMultipartFormData"
		},
		"2553": {
			"sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
			"qualifiedName": "request"
		},
		"2554": {
			"sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
			"qualifiedName": "uploadHandler"
		},
		"2555": {
			"sourceFileName": "packages/react-router/lib/server-runtime/dev.ts",
			"qualifiedName": "setDevServerHooks"
		},
		"2556": {
			"sourceFileName": "packages/react-router/lib/server-runtime/dev.ts",
			"qualifiedName": "setDevServerHooks"
		},
		"2557": {
			"sourceFileName": "packages/react-router/lib/server-runtime/dev.ts",
			"qualifiedName": "devServerHooks"
		},
		"2558": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "usePrompt"
		},
		"2559": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "usePrompt"
		},
		"2560": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__0"
		},
		"2561": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"2562": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.message"
		},
		"2563": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.when"
		},
		"2564": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useViewTransitionState"
		},
		"2565": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useViewTransitionState"
		},
		"2566": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "to"
		},
		"2567": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "opts"
		},
		"2568": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"2569": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.relative"
		},
		"2570": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useActionData"
		},
		"2571": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useActionData"
		},
		"2572": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useAsyncError"
		},
		"2573": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useAsyncError"
		},
		"2574": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useAsyncValue"
		},
		"2575": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useAsyncValue"
		},
		"2576": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useBeforeUnload"
		},
		"2577": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useBeforeUnload"
		},
		"2578": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "callback"
		},
		"2579": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"2580": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"2581": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "event"
		},
		"2582": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "options"
		},
		"2583": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"2584": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.capture"
		},
		"2585": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useBlocker"
		},
		"2586": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useBlocker"
		},
		"2587": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "shouldBlock"
		},
		"2588": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useFetcher"
		},
		"2589": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useFetcher"
		},
		"2590": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "TData"
		},
		"2591": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__0"
		},
		"2592": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"2593": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.key"
		},
		"2594": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useFetchers"
		},
		"2595": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useFetchers"
		},
		"2596": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"2597": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.key"
		},
		"2598": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useFormAction"
		},
		"2599": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useFormAction"
		},
		"2600": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "action"
		},
		"2601": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__1"
		},
		"2602": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"2603": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.relative"
		},
		"2604": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useHref"
		},
		"2605": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useHref"
		},
		"2606": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "to"
		},
		"2607": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "__1"
		},
		"2608": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "__type"
		},
		"2609": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "__type.relative"
		},
		"2610": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useInRouterContext"
		},
		"2611": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useInRouterContext"
		},
		"2612": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useLinkClickHandler"
		},
		"2613": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useLinkClickHandler"
		},
		"2614": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "E"
		},
		"2615": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "to"
		},
		"2616": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__1"
		},
		"2617": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"2618": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.preventScrollReset"
		},
		"2619": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.relative"
		},
		"2620": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.replace"
		},
		"2621": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.state"
		},
		"2622": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.target"
		},
		"2623": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type.unstable_viewTransition"
		},
		"2624": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"2625": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "__type"
		},
		"2626": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "event"
		},
		"2627": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useLoaderData"
		},
		"2628": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useLoaderData"
		},
		"2629": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useLocation"
		},
		"2630": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useLocation"
		},
		"2631": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useMatch"
		},
		"2632": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useMatch"
		},
		"2633": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "ParamKey"
		},
		"2634": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "Path"
		},
		"2635": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "pattern"
		},
		"2636": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useMatches"
		},
		"2637": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useMatches"
		},
		"2638": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useNavigate"
		},
		"2639": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useNavigate"
		},
		"2640": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useNavigation"
		},
		"2641": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useNavigation"
		},
		"2642": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useNavigationType"
		},
		"2643": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useNavigationType"
		},
		"2644": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useOutlet"
		},
		"2645": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useOutlet"
		},
		"2646": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "context"
		},
		"2647": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useOutletContext"
		},
		"2648": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useOutletContext"
		},
		"2649": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "Context"
		},
		"2650": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useParams"
		},
		"2651": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useParams"
		},
		"2652": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "ParamsOrKey"
		},
		"2653": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useResolvedPath"
		},
		"2654": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useResolvedPath"
		},
		"2655": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "to"
		},
		"2656": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "__1"
		},
		"2657": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "__type"
		},
		"2658": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "__type.relative"
		},
		"2659": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useRevalidator"
		},
		"2660": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useRevalidator"
		},
		"2661": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "__object"
		},
		"2662": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "__object.state"
		},
		"2663": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "__object.revalidate"
		},
		"2664": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "__object.revalidate"
		},
		"2665": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useRouteError"
		},
		"2666": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useRouteError"
		},
		"2667": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useRouteLoaderData"
		},
		"2668": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useRouteLoaderData"
		},
		"2669": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "routeId"
		},
		"2670": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useRoutes"
		},
		"2671": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "useRoutes"
		},
		"2672": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "routes"
		},
		"2673": {
			"sourceFileName": "packages/react-router/lib/hooks.tsx",
			"qualifiedName": "locationArg"
		},
		"2674": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useSearchParams"
		},
		"2675": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useSearchParams"
		},
		"2676": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "defaultInit"
		},
		"2677": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useSubmit"
		},
		"2678": {
			"sourceFileName": "packages/react-router/lib/dom/lib.tsx",
			"qualifiedName": "useSubmit"
		},
		"2681": {
			"sourceFileName": "packages/react-router-dev/index.ts",
			"qualifiedName": ""
		},
		"2682": {
			"sourceFileName": "packages/react-router-dev/cli/index.ts",
			"qualifiedName": ""
		},
		"2683": {
			"sourceFileName": "packages/react-router-dev/cli/run.ts",
			"qualifiedName": "run"
		},
		"2684": {
			"sourceFileName": "packages/react-router-dev/cli/run.ts",
			"qualifiedName": "run"
		},
		"2685": {
			"sourceFileName": "packages/react-router-dev/cli/run.ts",
			"qualifiedName": "argv"
		},
		"2686": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "Manifest"
		},
		"2687": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type"
		},
		"2688": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type.entry"
		},
		"2689": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type"
		},
		"2690": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type.imports"
		},
		"2691": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type.module"
		},
		"2692": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type.hmr"
		},
		"2693": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type"
		},
		"2694": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type.runtime"
		},
		"2695": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type.timestamp"
		},
		"2696": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type.routes"
		},
		"2697": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type"
		},
		"2698": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type.__index"
		},
		"2700": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type"
		},
		"2701": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type.caseSensitive"
		},
		"2702": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type.hasAction"
		},
		"2703": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type.hasClientAction"
		},
		"2704": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type.hasClientLoader"
		},
		"2705": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type.hasErrorBoundary"
		},
		"2706": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type.hasLoader"
		},
		"2707": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type.id"
		},
		"2708": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type.imports"
		},
		"2709": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type.index"
		},
		"2710": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type.module"
		},
		"2711": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type.parentId"
		},
		"2712": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type.path"
		},
		"2713": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type.url"
		},
		"2714": {
			"sourceFileName": "packages/react-router-dev/manifest.ts",
			"qualifiedName": "__type.version"
		},
		"2715": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "BuildManifest"
		},
		"2716": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "Preset"
		},
		"2717": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type"
		},
		"2718": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type.name"
		},
		"2719": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type.reactRouterConfig"
		},
		"2720": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type"
		},
		"2721": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type"
		},
		"2722": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "args"
		},
		"2723": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type"
		},
		"2724": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type.reactRouterUserConfig"
		},
		"2725": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type.reactRouterConfigResolved"
		},
		"2726": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type"
		},
		"2727": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type"
		},
		"2728": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "args"
		},
		"2729": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type"
		},
		"2730": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type.reactRouterConfig"
		},
		"2731": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "ServerBundlesFunction"
		},
		"2732": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type"
		},
		"2733": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type"
		},
		"2734": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "args"
		},
		"2735": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type"
		},
		"2736": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type.branch"
		},
		"2737": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "VitePluginConfig"
		},
		"2738": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type"
		},
		"2739": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type.appDirectory"
		},
		"2740": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type.basename"
		},
		"2741": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type.buildDirectory"
		},
		"2742": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type.buildEnd"
		},
		"2743": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type.future"
		},
		"2744": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type"
		},
		"2745": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type.__index"
		},
		"2747": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type.ignoredRouteFiles"
		},
		"2748": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type.prerender"
		},
		"2749": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type"
		},
		"2750": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type"
		},
		"2751": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type.presets"
		},
		"2752": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type.routes"
		},
		"2753": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type"
		},
		"2754": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type"
		},
		"2755": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "defineRoutes"
		},
		"2756": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type.serverBuildFile"
		},
		"2757": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type.serverBundles"
		},
		"2758": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type.serverModuleFormat"
		},
		"2759": {
			"sourceFileName": "packages/react-router-dev/config.ts",
			"qualifiedName": "__type.ssr"
		},
		"2760": {
			"sourceFileName": "packages/react-router-dev/vite/cloudflare-dev-proxy.ts",
			"qualifiedName": "cloudflareDevProxyVitePlugin"
		},
		"2761": {
			"sourceFileName": "packages/react-router-dev/vite/cloudflare-dev-proxy.ts",
			"qualifiedName": "cloudflareDevProxyVitePlugin"
		},
		"2762": {
			"sourceFileName": "packages/react-router-dev/vite/cloudflare-dev-proxy.ts",
			"qualifiedName": "Env"
		},
		"2763": {
			"sourceFileName": "packages/react-router-dev/vite/cloudflare-dev-proxy.ts",
			"qualifiedName": "Cf"
		},
		"2764": {
			"sourceFileName": "packages/react-router-dev/vite/cloudflare-dev-proxy.ts",
			"qualifiedName": "__0"
		},
		"2765": {
			"sourceFileName": "packages/react-router-dev/vite/cloudflare-dev-proxy.ts",
			"qualifiedName": "__type"
		},
		"2766": {
			"sourceFileName": "packages/react-router-dev/vite/cloudflare-dev-proxy.ts",
			"qualifiedName": "__type.getLoadContext"
		},
		"2767": {
			"sourceFileName": "packages/react-router-dev/vite/plugin.ts",
			"qualifiedName": "reactRouterVitePlugin"
		},
		"2768": {
			"sourceFileName": "packages/react-router-dev/vite/plugin.ts",
			"qualifiedName": "reactRouterVitePlugin"
		},
		"2769": {
			"sourceFileName": "packages/react-router-dev/vite/plugin.ts",
			"qualifiedName": "config"
		},
		"2771": {
			"sourceFileName": "packages/react-router-express/index.ts",
			"qualifiedName": ""
		},
		"2772": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "GetLoadContextFunction"
		},
		"2773": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "__type"
		},
		"2774": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "__type"
		},
		"2775": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "req"
		},
		"2776": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "res"
		},
		"2777": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "RequestHandler"
		},
		"2778": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "__type"
		},
		"2779": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "__type"
		},
		"2780": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "req"
		},
		"2781": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "res"
		},
		"2782": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "next"
		},
		"2783": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "createRequestHandler"
		},
		"2784": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "createRequestHandler"
		},
		"2785": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "__0"
		},
		"2786": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "__type"
		},
		"2787": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "__type.build"
		},
		"2788": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "__type"
		},
		"2789": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "__type"
		},
		"2790": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "__type.getLoadContext"
		},
		"2791": {
			"sourceFileName": "packages/react-router-express/server.ts",
			"qualifiedName": "__type.mode"
		},
		"2792": {
			"sourceFileName": "packages/react-router-node/index.ts",
			"qualifiedName": ""
		},
		"2793": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile"
		},
		"2794": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.__constructor"
		},
		"2795": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile"
		},
		"2796": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "filepath"
		},
		"2797": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "type"
		},
		"2798": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "slicer"
		},
		"2799": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "__type"
		},
		"2800": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "__type.end"
		},
		"2801": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "__type.start"
		},
		"2802": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.filepath"
		},
		"2803": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.lastModified"
		},
		"2804": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.name"
		},
		"2805": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.prototype"
		},
		"2806": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.slicer"
		},
		"2807": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "__type"
		},
		"2808": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "__type.end"
		},
		"2809": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "__type.start"
		},
		"2810": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.type"
		},
		"2811": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.webkitRelativePath"
		},
		"2812": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.[toStringTag]"
		},
		"2813": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.[toStringTag]"
		},
		"2814": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.size"
		},
		"2815": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.size"
		},
		"2816": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.arrayBuffer"
		},
		"2817": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.arrayBuffer"
		},
		"2818": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.getFilePath"
		},
		"2819": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.getFilePath"
		},
		"2820": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.remove"
		},
		"2821": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.remove"
		},
		"2822": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.slice"
		},
		"2823": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.slice"
		},
		"2824": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "start"
		},
		"2825": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "end"
		},
		"2826": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "type"
		},
		"2827": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.stream"
		},
		"2828": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.stream"
		},
		"2829": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.stream"
		},
		"2830": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.text"
		},
		"2831": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "NodeOnDiskFile.text"
		},
		"2832": {
			"sourceFileName": "packages/react-router-node/implementations.ts",
			"qualifiedName": "createCookie"
		},
		"2833": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "createCookie"
		},
		"2834": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "name"
		},
		"2835": {
			"sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
			"qualifiedName": "cookieOptions"
		},
		"2836": {
			"sourceFileName": "packages/react-router-node/implementations.ts",
			"qualifiedName": "createCookieSessionStorage"
		},
		"2837": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
			"qualifiedName": "createCookieSessionStorage"
		},
		"2838": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
			"qualifiedName": "Data"
		},
		"2839": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
			"qualifiedName": "FlashData"
		},
		"2840": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
			"qualifiedName": "options"
		},
		"2841": {
			"sourceFileName": "packages/react-router-node/sessions/fileStorage.ts",
			"qualifiedName": "createFileSessionStorage"
		},
		"2842": {
			"sourceFileName": "packages/react-router-node/sessions/fileStorage.ts",
			"qualifiedName": "createFileSessionStorage"
		},
		"2843": {
			"sourceFileName": "packages/react-router-node/sessions/fileStorage.ts",
			"qualifiedName": "Data"
		},
		"2844": {
			"sourceFileName": "packages/react-router-node/sessions/fileStorage.ts",
			"qualifiedName": "FlashData"
		},
		"2845": {
			"sourceFileName": "packages/react-router-node/sessions/fileStorage.ts",
			"qualifiedName": "__0"
		},
		"2846": {
			"sourceFileName": "packages/react-router-node/implementations.ts",
			"qualifiedName": "createMemorySessionStorage"
		},
		"2847": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
			"qualifiedName": "createMemorySessionStorage"
		},
		"2848": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
			"qualifiedName": "Data"
		},
		"2849": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
			"qualifiedName": "FlashData"
		},
		"2850": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
			"qualifiedName": "options"
		},
		"2851": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "createReadableStreamFromReadable"
		},
		"2852": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "createReadableStreamFromReadable"
		},
		"2853": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "source"
		},
		"2854": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "__type"
		},
		"2855": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "__type.readableHighWaterMark"
		},
		"2856": {
			"sourceFileName": "packages/react-router-node/implementations.ts",
			"qualifiedName": "createSessionStorage"
		},
		"2857": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "createSessionStorage"
		},
		"2858": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "Data"
		},
		"2859": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "FlashData"
		},
		"2860": {
			"sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
			"qualifiedName": "strategy"
		},
		"2861": {
			"sourceFileName": "packages/react-router-node/globals.ts",
			"qualifiedName": "installGlobals"
		},
		"2862": {
			"sourceFileName": "packages/react-router-node/globals.ts",
			"qualifiedName": "installGlobals"
		},
		"2863": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "readableStreamToString"
		},
		"2864": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "readableStreamToString"
		},
		"2865": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "stream"
		},
		"2866": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "encoding"
		},
		"2867": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "createFileUploadHandler"
		},
		"2868": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "createFileUploadHandler"
		},
		"2869": {
			"sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
			"qualifiedName": "__0"
		},
		"2870": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "writeAsyncIterableToWritable"
		},
		"2871": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "writeAsyncIterableToWritable"
		},
		"2872": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "iterable"
		},
		"2873": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "writable"
		},
		"2874": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "writeReadableStreamToWritable"
		},
		"2875": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "writeReadableStreamToWritable"
		},
		"2876": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "stream"
		},
		"2877": {
			"sourceFileName": "packages/react-router-node/stream.ts",
			"qualifiedName": "writable"
		},
		"2878": {
			"sourceFileName": "packages/react-router-serve/cli.ts",
			"qualifiedName": ""
		}
	}
}